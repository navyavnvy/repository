{"version":3,"sources":["views/charts/chartjs/chartData.js","views/charts/example-source/barchart.js","views/charts/example-source/linechart.js","views/charts/example-source/linearea.js","views/charts/example-source/piechart.js","views/charts/chartjs/chart.js"],"names":["LineChartData","data","labels","datasets","label","fill","borderDash","borderColor","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverBorderWidth","pointRadius","lineTension","options","animation","duration","easing","hover","animationDuration","mode","responsiveAnimationDuration","responsive","maintainAspectRatio","legend","position","scales","xAxes","display","gridLines","color","drawTicks","scaleLabel","labelString","yAxes","title","text","AreaChartdata","backgroundColor","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverRadius","BarData","scaleShowVerticalLines","PieData","barcharts","linechart","lineareachart","piecharts","ChartJS","_this","this","react_default","a","createElement","react","reactstrap_es","className","sm","md","lg","es","height","lib","onCopy","setState","copied","react_prism_lib","component","Component"],"mappings":"0LAAaA,EAAgB,CAC1BC,KAAM,CACHC,OAAQ,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,QACjEC,SAAU,CACP,CACGF,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC/BG,MAAO,mBACPC,MAAM,EACNC,WAAY,CAAC,EAAG,GAChBC,YAAa,UACbC,iBAAkB,UAClBC,qBAAsB,OACtBC,iBAAkB,EAClBC,sBAAuB,EACvBC,YAAa,GAEhB,CACGX,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC/BG,MAAO,oBACPC,MAAM,EACNC,WAAY,CAAC,EAAG,GAChBC,YAAa,UACbC,iBAAkB,UAClBC,qBAAsB,OACtBC,iBAAkB,EAClBC,sBAAuB,EACvBC,YAAa,GAEhB,CACGX,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC/BG,MAAO,+BACPS,YAAa,EACbR,MAAM,EACNE,YAAa,UACbC,iBAAkB,UAClBC,qBAAsB,OACtBC,iBAAkB,EAClBC,sBAAuB,EACvBC,YAAa,KAItBE,QAAS,CACNC,UAAW,CACRC,SAAU,IACVC,OAAQ,eAEXC,MAAO,CACJC,kBAAmB,IACnBC,KAAM,SAETC,4BAA6B,IAC7BC,YAAY,EACZC,qBAAqB,EACrBC,OAAQ,CACLC,SAAU,UAEbC,OAAQ,CACLC,MAAO,CACJ,CACGC,SAAS,EACTC,UAAW,CACRC,MAAO,UACPC,WAAW,GAEdC,WAAY,CACTJ,SAAS,EACTK,YAAa,WAItBC,MAAO,CACJ,CACGN,SAAS,EACTC,UAAW,CACRC,MAAO,UACPC,WAAW,GAEdC,WAAY,CACTJ,SAAS,EACTK,YAAa,YAKzBE,MAAO,CACJP,SAAS,EACTQ,KAAM,kCAKFC,EAAgB,CAC1BpC,KAAM,CACHC,OAAQ,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,QACjEC,SAAU,CACP,CACGF,KAAM,CAAC,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,KACnCG,MAAO,WACPkC,gBAAiB,0BACjB/B,YAAa,cACbE,qBAAsB,OACtBD,iBAAkB,uBAClB+B,0BAA2B,uBAC3B3B,YAAa,IACb4B,sBAAuB,OACvBC,iBAAkB,IAClB/B,iBAAkB,KAErB,CACGT,KAAM,CAAC,EAAG,GAAI,IAAK,IAAK,IAAK,IAAK,KAClCG,MAAO,WACPkC,gBAAiB,yBACjB/B,YAAa,cACbE,qBAAsB,OACtBD,iBAAkB,sBAClB+B,0BAA2B,sBAC3B3B,YAAa,IACb4B,sBAAuB,OACvBC,iBAAkB,IAClB/B,iBAAkB,OAI3BI,QAAS,CACNC,UAAW,CACRC,SAAU,IACVC,OAAQ,eAEXC,MAAO,CACJC,kBAAmB,KAEtBE,4BAA6B,IAC7BC,YAAY,EACZC,qBAAqB,EACrBG,OAAQ,CACLC,MAAO,CACJ,CACGC,SAAS,EACTC,UAAW,CACRC,MAAO,UACPC,WAAW,GAEdC,WAAY,CACTJ,SAAS,EACTK,YAAa,WAItBC,MAAO,CACJ,CACGN,SAAS,EACTC,UAAW,CACRC,MAAO,UACPC,WAAW,GAEdC,WAAY,CACTJ,SAAS,EACTK,YAAa,cA4MlBS,EAAU,CACpBzC,KAAM,CACHC,OAAQ,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzDC,SAAU,CACP,CACGC,MAAO,WACPH,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC/BqC,gBAAiB,0BACjB/B,YAAa,sBACbE,qBAAsB,sBACtBD,iBAAkB,OAClB+B,0BAA2B,OAC3BC,sBAAuB,yBAE1B,CACGvC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC/BG,MAAO,WACPkC,gBAAiB,yBACjB/B,YAAa,sBACbE,qBAAsB,sBACtBD,iBAAkB,OAClB+B,0BAA2B,OAC3BC,sBAAuB,2BAIhC1B,QAAS,CACN6B,wBAAwB,EACxBrB,YAAY,EACZC,qBAAqB,IAwDdqB,EAAU,CACpB3C,KAAM,CACHC,OAAQ,CAAC,iBAAkB,iBAAkB,cAC7CC,SAAU,CACP,CACGF,KAAM,CAAC,IAAK,IAAK,KACjBqC,gBAAiB,CACd,yBACA,0BACA,8BAKZxB,QAAS,CACNC,WAAW,EACXO,YAAY,EACZC,qBAAqB,2BCxbZsB,EAxBA,6hBCwBAC,EAxBA,8iBCwBAC,EAxBI,kjBCwBJC,EAxBA,w9BC+BTC,+JAEM,IAAAC,EAAAC,KACN,OACGC,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACMH,EAAAC,EAAAC,cAACE,EAAA,GAAD,CAAKC,UAAU,iBACZL,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKE,GAAG,MACLN,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACGJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACGJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,sBAEAJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKG,GAAG,KAAKC,GAAG,IAAIH,UAAU,WAC3BL,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKG,GAAG,KAAKC,GAAG,KAAKH,UAAU,WAC5BL,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAKC,OAAQ,IAAK7D,KAAMyC,EAAQzC,KAAMa,QAAS4B,EAAQ5B,WAE1DsC,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKG,GAAG,KAAKC,GAAG,KAAKH,UAAU,WAC5BL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,IACZL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBAAf,gBACAL,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKG,GAAG,KAAKF,UAAU,WACpBL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,sBACZL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,qBAAf,kEACAL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,oBACZL,EAAAC,EAAAC,cAAA,0DACAF,EAAAC,EAAAC,cAAA,kEAOlBF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKG,GAAG,KAAKC,GAAG,IAAIH,UAAU,YACxBL,EAAAC,EAAAC,cAACS,EAAA,gBAAD,CAAiB3B,KAAMS,EACpBmB,OAAQ,kBAAMd,EAAKe,SAAS,CAACC,QAAQ,MACrCd,EAAAC,EAAAC,cAAA,QAAMG,UAAU,aAAhB,cAEHL,EAAAC,EAAAC,cAACa,EAAA,UAAD,CACGC,UAAU,MACVX,UAAU,uBAETZ,QAOtBO,EAAAC,EAAAC,cAACE,EAAA,GAAD,CAAKC,UAAU,iBACZL,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKE,GAAG,MACLN,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACGJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACGJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,oBAEAJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKG,GAAG,KAAKC,GAAG,IAAIH,UAAU,WAC3BL,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKG,GAAG,KAAKC,GAAG,KAAKH,UAAU,WAC5BL,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMC,OAAQ,IAAK7D,KAAMD,EAAcC,KAAMa,QAASd,EAAcc,WAEvEsC,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKG,GAAG,KAAKC,GAAG,KAAKH,UAAU,WAC5BL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,IACZL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBAAf,gBACAL,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKG,GAAG,KAAKF,UAAU,WACpBL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,sBACZL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,qBAAf,kEACAL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,oBACZL,EAAAC,EAAAC,cAAA,0DACAF,EAAAC,EAAAC,cAAA,kEAOlBF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKG,GAAG,KAAKC,GAAG,IAAIH,UAAU,YACxBL,EAAAC,EAAAC,cAACS,EAAA,gBAAD,CAAiB3B,KAAMU,EACpBkB,OAAQ,kBAAMd,EAAKe,SAAS,CAACC,QAAQ,MACrCd,EAAAC,EAAAC,cAAA,QAAMG,UAAU,aAAhB,cAEHL,EAAAC,EAAAC,cAACa,EAAA,UAAD,CACGC,UAAU,MACVX,UAAU,uBAETX,QAOtBM,EAAAC,EAAAC,cAACE,EAAA,GAAD,CAAKC,UAAU,iBACZL,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKE,GAAG,MACLN,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACGJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACGJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,yBAEAJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKG,GAAG,KAAKC,GAAG,IAAIH,UAAU,WAC3BL,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKG,GAAG,KAAKC,GAAG,KAAKH,UAAU,WAC5BL,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMC,OAAQ,IAAK7D,KAAMoC,EAAcpC,KAAMa,QAASuB,EAAcvB,WAEvEsC,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKG,GAAG,KAAKC,GAAG,KAAKH,UAAU,WAC5BL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,IACZL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBAAf,gBACAL,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKG,GAAG,KAAKF,UAAU,WACpBL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,sBACZL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,qBAAf,kEACAL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,oBACZL,EAAAC,EAAAC,cAAA,0DACAF,EAAAC,EAAAC,cAAA,kEAOlBF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKG,GAAG,KAAKC,GAAG,IAAIH,UAAU,YACxBL,EAAAC,EAAAC,cAACS,EAAA,gBAAD,CAAiB3B,KAAMW,EACpBiB,OAAQ,kBAAMd,EAAKe,SAAS,CAACC,QAAQ,MACrCd,EAAAC,EAAAC,cAAA,QAAMG,UAAU,aAAhB,cAEHL,EAAAC,EAAAC,cAACa,EAAA,UAAD,CACGC,UAAU,MACVX,UAAU,uBAETV,QAOtBK,EAAAC,EAAAC,cAACE,EAAA,GAAD,CAAKC,UAAU,iBACZL,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKE,GAAG,MACLN,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACGJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACGJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,mBAEAJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKG,GAAG,KAAKC,GAAG,IAAIH,UAAU,WAC3BL,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKG,GAAG,KAAKC,GAAG,KAAKH,UAAU,WAC/BL,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAKC,OAAQ,IAAK7D,KAAM2C,EAAQ3C,KAAMa,QAAS8B,EAAQ9B,WAEvDsC,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKG,GAAG,KAAKC,GAAG,KAAKH,UAAU,WAC5BL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,IACZL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBAAf,gBACAL,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKG,GAAG,KAAKF,UAAU,WACpBL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,sBACZL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,qBAAf,kEACAL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,oBACZL,EAAAC,EAAAC,cAAA,0DACAF,EAAAC,EAAAC,cAAA,kEAOlBF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKG,GAAG,KAAKC,GAAG,IAAIH,UAAU,YACxBL,EAAAC,EAAAC,cAACS,EAAA,gBAAD,CAAiB3B,KAAMY,EACpBgB,OAAQ,kBAAMd,EAAKe,SAAS,CAACC,QAAQ,MACrCd,EAAAC,EAAAC,cAAA,QAAMG,UAAU,aAAhB,cAEHL,EAAAC,EAAAC,cAACa,EAAA,UAAD,CACGC,UAAU,MACVX,UAAU,uBAETT,gBAlKfqB,aAgOPpB","file":"static/js/67.285675f5.chunk.js","sourcesContent":["export const LineChartData = {\r\n   data: {\r\n      labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\r\n      datasets: [\r\n         {\r\n            data: [65, 59, 80, 81, 56, 55, 40],\r\n            label: \"My First dataset\",\r\n            fill: false,\r\n            borderDash: [5, 5],\r\n            borderColor: \"#9C27B0\",\r\n            pointBorderColor: \"#9C27B0\",\r\n            pointBackgroundColor: \"#FFF\",\r\n            pointBorderWidth: 2,\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 4\r\n         },\r\n         {\r\n            data: [28, 48, 40, 19, 86, 27, 90],\r\n            label: \"My Second dataset\",\r\n            fill: false,\r\n            borderDash: [5, 5],\r\n            borderColor: \"#00A5A8\",\r\n            pointBorderColor: \"#00A5A8\",\r\n            pointBackgroundColor: \"#FFF\",\r\n            pointBorderWidth: 2,\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 4\r\n         },\r\n         {\r\n            data: [45, 25, 16, 36, 67, 18, 76],\r\n            label: \"My Third dataset - No bezier\",\r\n            lineTension: 0,\r\n            fill: false,\r\n            borderColor: \"#FF7D4D\",\r\n            pointBorderColor: \"#FF7D4D\",\r\n            pointBackgroundColor: \"#FFF\",\r\n            pointBorderWidth: 2,\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 4\r\n         }\r\n      ]\r\n   },\r\n   options: {\r\n      animation: {\r\n         duration: 1000, // general animation time\r\n         easing: \"easeOutBack\"\r\n      },\r\n      hover: {\r\n         animationDuration: 1000, // duration of animations when hovering an item\r\n         mode: \"label\"\r\n      },\r\n      responsiveAnimationDuration: 1000, // animation duration after a resize\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n      legend: {\r\n         position: \"bottom\"\r\n      },\r\n      scales: {\r\n         xAxes: [\r\n            {\r\n               display: true,\r\n               gridLines: {\r\n                  color: \"#f3f3f3\",\r\n                  drawTicks: false\r\n               },\r\n               scaleLabel: {\r\n                  display: true,\r\n                  labelString: \"Month\"\r\n               }\r\n            }\r\n         ],\r\n         yAxes: [\r\n            {\r\n               display: true,\r\n               gridLines: {\r\n                  color: \"#f3f3f3\",\r\n                  drawTicks: false\r\n               },\r\n               scaleLabel: {\r\n                  display: true,\r\n                  labelString: \"Value\"\r\n               }\r\n            }\r\n         ]\r\n      },\r\n      title: {\r\n         display: true,\r\n         text: \"Chart.js Line Chart - Legend\"\r\n      }\r\n   }\r\n};\r\n\r\nexport const AreaChartdata = {\r\n   data: {\r\n      labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\r\n      datasets: [\r\n         {\r\n            data: [0, 150, 140, 105, 190, 230, 270],\r\n            label: \"Series A\",\r\n            backgroundColor: \"rgba(255, 141, 96, 0.4)\",\r\n            borderColor: \"transparent\",\r\n            pointBackgroundColor: \"#FFF\",\r\n            pointBorderColor: \"rgba(255, 141, 96,1)\",\r\n            pointHoverBackgroundColor: \"rgba(255, 141, 96,1)\",\r\n            pointRadius: \"5\",\r\n            pointHoverBorderColor: \"#FFF\",\r\n            pointHoverRadius: \"5\",\r\n            pointBorderWidth: \"2\"\r\n         },\r\n         {\r\n            data: [0, 90, 120, 240, 140, 250, 190],\r\n            label: \"Series B\",\r\n            backgroundColor: \"rgba(0, 157, 160, 0.7)\",\r\n            borderColor: \"transparent\",\r\n            pointBackgroundColor: \"#FFF\",\r\n            pointBorderColor: \"rgba(0, 157, 160,1)\",\r\n            pointHoverBackgroundColor: \"rgba(0, 157, 160,1)\",\r\n            pointRadius: \"5\",\r\n            pointHoverBorderColor: \"#FFF\",\r\n            pointHoverRadius: \"5\",\r\n            pointBorderWidth: \"2\"\r\n         }\r\n      ]\r\n   },\r\n   options: {\r\n      animation: {\r\n         duration: 1000, // general animation time\r\n         easing: \"easeOutBack\"\r\n      },\r\n      hover: {\r\n         animationDuration: 1000 // duration of animations when hovering an item\r\n      },\r\n      responsiveAnimationDuration: 1000, // animation duration after a resize\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n      scales: {\r\n         xAxes: [\r\n            {\r\n               display: true,\r\n               gridLines: {\r\n                  color: \"#f3f3f3\",\r\n                  drawTicks: false\r\n               },\r\n               scaleLabel: {\r\n                  display: true,\r\n                  labelString: \"Month\"\r\n               }\r\n            }\r\n         ],\r\n         yAxes: [\r\n            {\r\n               display: true,\r\n               gridLines: {\r\n                  color: \"#f3f3f3\",\r\n                  drawTicks: false\r\n               },\r\n               scaleLabel: {\r\n                  display: true,\r\n                  labelString: \"Value\"\r\n               }\r\n            }\r\n         ]\r\n      }\r\n   }\r\n};\r\n\r\nexport const ScatterData = {\r\n   data: {\r\n      labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\r\n      datasets: [\r\n         {\r\n            data: [\r\n               {\r\n                  x: 1,\r\n                  y: -1.711e-2\r\n               },\r\n               {\r\n                  x: 1.26,\r\n                  y: -2.708e-2\r\n               },\r\n               {\r\n                  x: 1.58,\r\n                  y: -4.285e-2\r\n               },\r\n               {\r\n                  x: 2.0,\r\n                  y: -6.772e-2\r\n               },\r\n               {\r\n                  x: 2.51,\r\n                  y: -1.068e-1\r\n               },\r\n               {\r\n                  x: 3.16,\r\n                  y: -1.681e-1\r\n               },\r\n               {\r\n                  x: 3.98,\r\n                  y: -2.635e-1\r\n               },\r\n               {\r\n                  x: 5.01,\r\n                  y: -4.106e-1\r\n               },\r\n               {\r\n                  x: 6.31,\r\n                  y: -6.339e-1\r\n               },\r\n               {\r\n                  x: 7.94,\r\n                  y: -9.659e-1\r\n               },\r\n               {\r\n                  x: 10.0,\r\n                  y: -1.445\r\n               },\r\n               {\r\n                  x: 12.6,\r\n                  y: -2.11\r\n               },\r\n               {\r\n                  x: 15.8,\r\n                  y: -2.992\r\n               },\r\n               {\r\n                  x: 20.0,\r\n                  y: -4.102\r\n               },\r\n               {\r\n                  x: 25.1,\r\n                  y: -5.429\r\n               },\r\n               {\r\n                  x: 31.6,\r\n                  y: -6.944\r\n               },\r\n               {\r\n                  x: 39.8,\r\n                  y: -8.607\r\n               },\r\n               {\r\n                  x: 50.1,\r\n                  y: -1.038e1\r\n               },\r\n               {\r\n                  x: 63.1,\r\n                  y: -1.223e1\r\n               },\r\n               {\r\n                  x: 79.4,\r\n                  y: -1.413e1\r\n               },\r\n               {\r\n                  x: 100.0,\r\n                  y: -1.607e1\r\n               },\r\n               {\r\n                  x: 126,\r\n                  y: -1.803e1\r\n               },\r\n               {\r\n                  x: 158,\r\n                  y: -2e1\r\n               },\r\n               {\r\n                  x: 200,\r\n                  y: -2.199e1\r\n               },\r\n               {\r\n                  x: 251,\r\n                  y: -2.398e1\r\n               },\r\n               {\r\n                  x: 316,\r\n                  y: -2.597e1\r\n               },\r\n               {\r\n                  x: 398,\r\n                  y: -2.797e1\r\n               },\r\n               {\r\n                  x: 501,\r\n                  y: -2.996e1\r\n               },\r\n               {\r\n                  x: 631,\r\n                  y: -3.196e1\r\n               },\r\n               {\r\n                  x: 794,\r\n                  y: -3.396e1\r\n               },\r\n               {\r\n                  x: 1000,\r\n                  y: -3.596e1\r\n               }\r\n            ],\r\n            label: \"V(node2)\",\r\n            backgroundColor: \"rgba(81,117,224,.6)\",\r\n            borderColor: \"transparent\",\r\n            pointBorderColor: \"#5175E0\",\r\n            pointBackgroundColor: \"#FFF\",\r\n            pointBorderWidth: 2,\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 4\r\n         }\r\n      ]\r\n   },\r\n   options: {\r\n      animation: {\r\n         duration: 1000, // general animation time\r\n         easing: \"easeOutBack\"\r\n      },\r\n      hover: {\r\n         animationDuration: 1000 // duration of animations when hovering an item\r\n      },\r\n      responsiveAnimationDuration: 1000, // animation duration after a resize\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n      title: {\r\n         display: false,\r\n         text: \"Chart.js Scatter Chart - Logarithmic X-Axis\"\r\n      },\r\n      scales: {\r\n         xAxes: [\r\n            {\r\n               type: \"logarithmic\",\r\n               position: \"bottom\",\r\n               gridLines: {\r\n                  zeroLineColor: \"rgba(0,0,0,.1)\",\r\n                  color: \"#f3f3f3\",\r\n                  drawTicks: false\r\n               },\r\n               scaleLabel: {\r\n                  labelString: \"Frequency\",\r\n                  display: true\r\n               }\r\n            }\r\n         ],\r\n         yAxes: [\r\n            {\r\n               type: \"linear\",\r\n               ticks: {\r\n                  userCallback: tick => {\r\n                     return tick.toString() + \"dB\";\r\n                  }\r\n               },\r\n               gridLines: {\r\n                  zeroLineColor: \"rgba(81,117,224,1)\",\r\n                  color: \"#f3f3f3\",\r\n                  drawTicks: false\r\n               },\r\n               scaleLabel: {\r\n                  labelString: \"Voltage\",\r\n                  display: true\r\n               }\r\n            }\r\n         ]\r\n      }\r\n   }\r\n};\r\n\r\nexport const BarData = {\r\n   data: {\r\n      labels: [\"2006\", \"2007\", \"2008\", \"2009\", \"2010\", \"2011\", \"2012\"],\r\n      datasets: [\r\n         {\r\n            label: \"Series A\",\r\n            data: [65, 59, 80, 81, 56, 55, 40],\r\n            backgroundColor: \"rgba(255, 141, 96, 0.8)\",\r\n            borderColor: \"rgba(148,159,177,1)\",\r\n            pointBackgroundColor: \"rgba(148,159,177,1)\",\r\n            pointBorderColor: \"#fff\",\r\n            pointHoverBackgroundColor: \"#fff\",\r\n            pointHoverBorderColor: \"rgba(148,159,177,0.8)\"\r\n         },\r\n         {\r\n            data: [28, 48, 40, 19, 86, 27, 90],\r\n            label: \"Series B\",\r\n            backgroundColor: \"rgba(0, 157, 160, 0.8)\",\r\n            borderColor: \"rgba(148,159,177,1)\",\r\n            pointBackgroundColor: \"rgba(148,159,177,1)\",\r\n            pointBorderColor: \"#fff\",\r\n            pointHoverBackgroundColor: \"#fff\",\r\n            pointHoverBorderColor: \"rgba(148,159,177,0.8)\"\r\n         }\r\n      ]\r\n   },\r\n   options: {\r\n      scaleShowVerticalLines: false,\r\n      responsive: true,\r\n      maintainAspectRatio: false\r\n   }\r\n};\r\n\r\nexport const DoughnutData = {\r\n   data: {\r\n      labels: [\"Download Sales\", \"In-Store Sales\", \"Mail-Order Sales\"],\r\n      datasets: [\r\n         {\r\n            data: [350, 450, 100],\r\n            backgroundColor: [\r\n               \"rgba(0, 157, 160, 0.8)\",\r\n               \"rgba(28, 188, 216, 0.8)\",\r\n               \"rgba(255, 141, 96, 0.8)\"\r\n            ]\r\n         }\r\n      ]\r\n   },\r\n   options: {\r\n      animation: false,\r\n      responsive: true,\r\n      maintainAspectRatio: false\r\n   }\r\n};\r\n\r\nexport const RadarData = {\r\n   data: {\r\n      labels: [\r\n         \"Eating\",\r\n         \"Drinking\",\r\n         \"Sleeping\",\r\n         \"Designing\",\r\n         \"Coding\",\r\n         \"Cycling\",\r\n         \"Running\"\r\n      ],\r\n      datasets: [\r\n         {\r\n            data: [65, 59, 90, 81, 56, 55, 40],\r\n            label: \"Series A\",\r\n            backgroundColor: [\"rgba(255, 141, 96, 0.8)\"]\r\n         },\r\n         {\r\n            data: [28, 48, 40, 19, 96, 27, 100],\r\n            label: \"Series B\",\r\n            backgroundColor: [\"rgba(0, 157, 160, 0.8)\"]\r\n         }\r\n      ]\r\n   },\r\n   options: {\r\n      animation: false,\r\n      responsive: true,\r\n      maintainAspectRatio: false\r\n   }\r\n};\r\n\r\nexport const PieData = {\r\n   data: {\r\n      labels: [\"Download Sales\", \"In-Store Sales\", \"Mail Sales\"],\r\n      datasets: [\r\n         {\r\n            data: [300, 500, 100],\r\n            backgroundColor: [\r\n               \"rgba(0, 157, 160, 0.8)\",\r\n               \"rgba(28, 188, 216, 0.8)\",\r\n               \"rgba(255, 141, 96, 0.8)\"\r\n            ]\r\n         }\r\n      ]\r\n   },\r\n   options: {\r\n      animation: false,\r\n      responsive: true,\r\n      maintainAspectRatio: false\r\n   }\r\n};\r\n\r\nexport const PolarData = {\r\n   data: {\r\n      labels: [\r\n         \"Download Sales\",\r\n         \"In-Store Sales\",\r\n         \"Mail Sales\",\r\n         \"Telesales\",\r\n         \"Corporate Sales\"\r\n      ],\r\n      datasets: [\r\n         {\r\n            data: [300, 500, 100, 40, 120],\r\n            backgroundColor: [\r\n               \"rgba(0, 157, 160, 0.8)\",\r\n               \"rgba(28, 188, 216, 0.8)\",\r\n               \"rgba(255, 141, 96, 0.8)\",\r\n               \"rgba(12, 194, 126, 0.8)\",\r\n               \"rgba(255, 88, 107, 0.8)\"\r\n            ]\r\n         }\r\n      ]\r\n   },\r\n   options: {\r\n      animation: false,\r\n      responsive: true,\r\n      maintainAspectRatio: false\r\n   }\r\n};\r\n","const barcharts = `\r\nimport React, { Fragment } from \"react\";\r\nimport { Row, Col, Card, CardTitle, CardHeader, CardBody } from \"reactstrap\";\r\nimport { Bar, Line, Scatter, Radar, Pie, Polar, Doughnut } from \"react-chartjs-2\";\r\n\r\nimport {\r\n   BarData\r\n} from \"./chartData\";\r\n\r\nconst ChartJS = props => (\r\n   <Fragment>\r\n    \r\n      <Row>\r\n\r\n         <Col md=\"12\" lg=\"12\" className=\"leftDiv\">\r\n            <Bar height={400} data={BarData.data} options={BarData.options} />\r\n         </Col>\r\n        \r\n      </Row>\r\n   </Fragment>\r\n);\r\n\r\nexport default ChartJS;`;\r\n\r\nexport default barcharts;","const linechart = `\r\nimport React, { Fragment } from \"react\";\r\nimport { Row, Col, Card, CardTitle, CardHeader, CardBody } from \"reactstrap\";\r\nimport { Bar, Line, Scatter, Radar, Pie, Polar, Doughnut } from \"react-chartjs-2\";\r\n\r\nimport {\r\n    LineChartData\r\n} from \"./chartData\";\r\n\r\nconst ChartJS = props => (\r\n   <Fragment>\r\n    \r\n      <Row>\r\n\r\n         <Col md=\"12\" lg=\"12\" className=\"leftDiv\">\r\n         <Line height={400} data={LineChartData.data} options={LineChartData.options} />\r\n         </Col>\r\n        \r\n      </Row>\r\n   </Fragment>\r\n);\r\n\r\nexport default ChartJS;`;\r\n\r\nexport default linechart;","const lineareachart = `\r\nimport React, { Fragment } from \"react\";\r\nimport { Row, Col, Card, CardTitle, CardHeader, CardBody } from \"reactstrap\";\r\nimport { Bar, Line, Scatter, Radar, Pie, Polar, Doughnut } from \"react-chartjs-2\";\r\n\r\nimport {\r\n    AreaChartdata\r\n} from \"./chartData\";\r\n\r\nconst ChartJS = props => (\r\n   <Fragment>\r\n    \r\n      <Row>\r\n\r\n         <Col md=\"12\" lg=\"12\" className=\"leftDiv\">\r\n            <Line height={400} data={AreaChartdata.data} options={AreaChartdata.options} /> \r\n         </Col>\r\n        \r\n      </Row>\r\n   </Fragment>\r\n);\r\n\r\nexport default ChartJS;`;\r\n\r\nexport default lineareachart;","const piecharts = `\r\nimport React, { Fragment } from \"react\";\r\nimport { Row, Col, Card, CardTitle, CardHeader, CardBody } from \"reactstrap\";\r\nimport { Bar, Line, Scatter, Radar, Pie, Polar, Doughnut } from \"react-chartjs-2\";\r\n\r\nimport {\r\n    PieData\r\n} from \"./chartData\";\r\n\r\nconst ChartJS = props => (\r\n   <Fragment>\r\n    \r\n      <Row>\r\n\r\n         <Col md=\"12\" lg=\"12\" className=\"leftDiv\">\r\n         <Pie height={400} data={PieData.data} options={PieData.options} /> \r\n         </Col>\r\n        \r\n      </Row>\r\n   </Fragment>\r\n);\r\n\r\nexport default ChartJS;`;\r\n\r\nexport default piecharts;","// import external modules\r\nimport React, {Component, Fragment } from \"react\";\r\nimport { Row, Col, Card, CardTitle, CardHeader, CardBody } from \"reactstrap\";\r\nimport { Bar, Line, Scatter, Radar, Pie, Polar, Doughnut } from \"react-chartjs-2\";\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\n\r\nimport {\r\n   BarData,\r\n   LineChartData,\r\n   AreaChartdata,\r\n   ScatterData,\r\n   DoughnutData,\r\n   RadarData,\r\n   PieData,\r\n   PolarData\r\n} from \"./chartData\";\r\n\r\n//Prism\r\n// eslint-disable-next-line\r\nimport Prism from \"prismjs\";  //Include JS\r\nimport \"prismjs/themes/prism-okaidia.css\"; //Include CSS\r\nimport { PrismCode } from \"react-prism\"; //Prism Component\r\n\r\n\r\n\r\n// Import Example Source Code\r\nimport barcharts from \"../example-source/barchart\";\r\nimport linechart from \"../example-source/linechart\";\r\nimport lineareachart from \"../example-source/linearea\";\r\nimport piecharts from \"../example-source/piechart\";\r\n\r\nclass ChartJS extends Component {\r\n\r\n   render() {\r\n      return (\r\n         <Fragment>\r\n               <Row className=\"row-eq-height\">\r\n                  <Col sm=\"12\">\r\n                     <Card>\r\n                        <CardBody>\r\n                           <CardTitle>Charts Design</CardTitle>\r\n                           \r\n                           <Col md=\"12\" lg=\"6\" className=\"leftDiv\">\r\n                              <Col md=\"12\" lg=\"12\" className=\"leftDiv\">\r\n                                 <Bar height={400} data={BarData.data} options={BarData.options} />                                         \r\n                              </Col>  \r\n                              <Col md=\"12\" lg=\"12\" className=\"leftDiv\">\r\n                                 <div className=\"\">\r\n                                    <div className=\"installation\">Installation</div>                     \r\n                                    <Col md=\"12\" className=\"leftDiv\">\r\n                                       <div className=\"installation-steps\">\r\n                                          <div className=\"installation-text\">Download and install the package. Use Node.js v8.0.0 or later.</div>\r\n                                          <div className=\"installation-box\">\r\n                                             <div>npm install react-chartjs-2 chart.js --save</div>\r\n                                             <div>npm install --save reactstrap react react-dom</div>\r\n                                          </div>\r\n                                       </div>\r\n                                    </Col>\r\n                                 </div>                                      \r\n                              </Col>                                                         \r\n                           </Col>  \r\n                           <Col md=\"12\" lg=\"6\" className=\"rightDiv\">\r\n                                 <CopyToClipboard text={barcharts}\r\n                                    onCopy={() => this.setState({copied: true})}>\r\n                                    <span className=\"copy-code\">Copy Code</span>\r\n                                 </CopyToClipboard>\r\n                                 <PrismCode\r\n                                    component=\"pre\"\r\n                                    className=\"language-javascript\"\r\n                                 >\r\n                                    {barcharts}\r\n                                 </PrismCode>                     \r\n                           </Col>\r\n                        </CardBody>\r\n                     </Card>\r\n                  </Col>\r\n               </Row>\r\n               <Row className=\"row-eq-height\">\r\n                  <Col sm=\"12\">\r\n                     <Card>\r\n                        <CardBody>\r\n                           <CardTitle>LINE Charts</CardTitle>\r\n                           \r\n                           <Col md=\"12\" lg=\"6\" className=\"leftDiv\">\r\n                              <Col md=\"12\" lg=\"12\" className=\"leftDiv\">\r\n                                 <Line height={400} data={LineChartData.data} options={LineChartData.options} />                                       \r\n                              </Col>  \r\n                              <Col md=\"12\" lg=\"12\" className=\"leftDiv\">\r\n                                 <div className=\"\">\r\n                                    <div className=\"installation\">Installation</div>                     \r\n                                    <Col md=\"12\" className=\"leftDiv\">\r\n                                       <div className=\"installation-steps\">\r\n                                          <div className=\"installation-text\">Download and install the package. Use Node.js v8.0.0 or later.</div>\r\n                                          <div className=\"installation-box\">\r\n                                             <div>npm install react-chartjs-2 chart.js --save</div>\r\n                                             <div>npm install --save reactstrap react react-dom</div>\r\n                                          </div>\r\n                                       </div>\r\n                                    </Col>\r\n                                 </div>                                      \r\n                              </Col>                                                         \r\n                           </Col>  \r\n                           <Col md=\"12\" lg=\"6\" className=\"rightDiv\">\r\n                                 <CopyToClipboard text={linechart}\r\n                                    onCopy={() => this.setState({copied: true})}>\r\n                                    <span className=\"copy-code\">Copy Code</span>\r\n                                 </CopyToClipboard>\r\n                                 <PrismCode\r\n                                    component=\"pre\"\r\n                                    className=\"language-javascript\"\r\n                                 >\r\n                                    {linechart}\r\n                                 </PrismCode>                     \r\n                           </Col>\r\n                        </CardBody>\r\n                     </Card>\r\n                  </Col>\r\n               </Row>\r\n               <Row className=\"row-eq-height\">\r\n                  <Col sm=\"12\">\r\n                     <Card>\r\n                        <CardBody>\r\n                           <CardTitle>LINE AREA Charts</CardTitle>\r\n                           \r\n                           <Col md=\"12\" lg=\"6\" className=\"leftDiv\">\r\n                              <Col md=\"12\" lg=\"12\" className=\"leftDiv\">\r\n                                 <Line height={400} data={AreaChartdata.data} options={AreaChartdata.options} />                                        \r\n                              </Col>  \r\n                              <Col md=\"12\" lg=\"12\" className=\"leftDiv\">\r\n                                 <div className=\"\">\r\n                                    <div className=\"installation\">Installation</div>                     \r\n                                    <Col md=\"12\" className=\"leftDiv\">\r\n                                       <div className=\"installation-steps\">\r\n                                          <div className=\"installation-text\">Download and install the package. Use Node.js v8.0.0 or later.</div>\r\n                                          <div className=\"installation-box\">\r\n                                             <div>npm install react-chartjs-2 chart.js --save</div>\r\n                                             <div>npm install --save reactstrap react react-dom</div>\r\n                                          </div>\r\n                                       </div>\r\n                                    </Col>\r\n                                 </div>                                      \r\n                              </Col>                                                         \r\n                           </Col>  \r\n                           <Col md=\"12\" lg=\"6\" className=\"rightDiv\">\r\n                                 <CopyToClipboard text={lineareachart}\r\n                                    onCopy={() => this.setState({copied: true})}>\r\n                                    <span className=\"copy-code\">Copy Code</span>\r\n                                 </CopyToClipboard>\r\n                                 <PrismCode\r\n                                    component=\"pre\"\r\n                                    className=\"language-javascript\"\r\n                                 >\r\n                                    {lineareachart}\r\n                                 </PrismCode>                     \r\n                           </Col>\r\n                        </CardBody>\r\n                     </Card>\r\n                  </Col>\r\n               </Row>\r\n               <Row className=\"row-eq-height\">\r\n                  <Col sm=\"12\">\r\n                     <Card>\r\n                        <CardBody>\r\n                           <CardTitle>PIE Charts</CardTitle>\r\n                           \r\n                           <Col md=\"12\" lg=\"6\" className=\"leftDiv\">\r\n                              <Col md=\"12\" lg=\"12\" className=\"leftDiv\">\r\n                              <Pie height={400} data={PieData.data} options={PieData.options} />                                      \r\n                              </Col>  \r\n                              <Col md=\"12\" lg=\"12\" className=\"leftDiv\">\r\n                                 <div className=\"\">\r\n                                    <div className=\"installation\">Installation</div>                     \r\n                                    <Col md=\"12\" className=\"leftDiv\">\r\n                                       <div className=\"installation-steps\">\r\n                                          <div className=\"installation-text\">Download and install the package. Use Node.js v8.0.0 or later.</div>\r\n                                          <div className=\"installation-box\">\r\n                                             <div>npm install react-chartjs-2 chart.js --save</div>\r\n                                             <div>npm install --save reactstrap react react-dom</div>\r\n                                          </div>\r\n                                       </div>\r\n                                    </Col>\r\n                                 </div>                                      \r\n                              </Col>                                                         \r\n                           </Col>  \r\n                           <Col md=\"12\" lg=\"6\" className=\"rightDiv\">\r\n                                 <CopyToClipboard text={piecharts}\r\n                                    onCopy={() => this.setState({copied: true})}>\r\n                                    <span className=\"copy-code\">Copy Code</span>\r\n                                 </CopyToClipboard>\r\n                                 <PrismCode\r\n                                    component=\"pre\"\r\n                                    className=\"language-javascript\"\r\n                                 >\r\n                                    {piecharts}\r\n                                 </PrismCode>                     \r\n                           </Col>\r\n                        </CardBody>\r\n                     </Card>\r\n                  </Col>\r\n               </Row>\r\n            \r\n\r\n               {/*\r\n                  <Col sm=\"12\">\r\n                     <Card>\r\n                        <CardHeader>\r\n                           <CardTitle>SCATTER CHART</CardTitle>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                           <Scatter height={400} data={ScatterData.data} options={ScatterData.options} />\r\n                        </CardBody>\r\n                     </Card>\r\n                  </Col>\r\n\r\n               \r\n\r\n                  <Col sm=\"12\">\r\n                     <Card>\r\n                        <CardHeader>\r\n                           <CardTitle>DOUGHNUT CHART</CardTitle>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                           <Doughnut height={400} data={DoughnutData.data} options={DoughnutData.options} />\r\n                        </CardBody>\r\n                     </Card>\r\n                  </Col>\r\n\r\n                  <Col sm=\"12\">\r\n                     <Card>\r\n                        <CardHeader>\r\n                           <CardTitle>RADAR CHART</CardTitle>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                           <Radar height={400} data={RadarData.data} options={RadarData.options} />\r\n                        </CardBody>\r\n                     </Card>\r\n                  </Col>\r\n\r\n\r\n                  <Col sm=\"12\">\r\n                     <Card>\r\n                        <CardHeader>\r\n                           <CardTitle>POLAR CHART</CardTitle>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                           <Polar height={400} data={PolarData.data} options={PolarData.options} />\r\n                        </CardBody>\r\n                     </Card>\r\n                  </Col>\r\n               </Row> */}\r\n            </Fragment>\r\n   );\r\n}\r\n}\r\n\r\nexport default ChartJS;\r\n"],"sourceRoot":""}