{"version":3,"sources":["components/contacts/Link.js","containers/contacts/contactsFilterLink.js","containers/contacts/addContact.js","components/contacts/contactsFilter.js","components/contacts/Search.js","containers/contacts/contactsFilterSearch.js","components/contacts/contactsSearch.js","components/contacts/contact.js","components/contacts/contacsList.js","containers/contacts/visibleContactsList.js","components/contacts/contactsDetails.js","containers/contacts/visibleContactsDetails.js","views/contacts/contacts.js"],"names":["Link","_ref","active","children","onClick","react_default","a","createElement","className","connect","state","ownProps","filter","contactApp","contactsVisibilityFilter","dispatch","setVisibilityFilter","id","contacts","length","firstname","lastname","department","company","phone","email","address","notes","Fragment","reactstrap_es","onSubmit","e","preventDefault","value","trim","addContact","md","src","alt","for","type","name","ref","node","required","color","ContactsFilter","props","_this","Object","classCallCheck","this","_super","call","modal","toggle","bind","assertThisInitialized","setState","lib_default","dist","size","contactsFilterLink","contactVisiblityFilter","SHOW_ALL","FREQUENT_CONTACT","STARRED_CONTACT","ENGINEERING_DEPARTMENT_CONTACT","departmentValue","SALES_DEPARTMENT_CONTACT","SUPPORT_DEPARTMENT_CONTACT","isOpen","React","Component","Search","onChange","placeholder","target","defaultValue","contactsSearch","ContactSearch","contactsFilterSearch","Contact","onContactClick","onStarredClick","onDeleteClick","image","starred","xs","style","ContactsList","toggleStarredContact","deleteContact","contactDetails","map","contact","contacts_contact","assign","key","prototype","PropTypes","arrayOf","shape","number","isRequired","string","frequentlycontacted","bool","deleted","func","getVisibleContacts","c","toLocaleLowerCase","concat","includes","DELETED_CONTACT","Error","contactsDetails","contacsList","ContactsDetails","selectedContacts","onEditClick","editContactFlag","react","left","href","object","body","heading","responsive","borderless","editContact","setEditContactFlag","field","updateContact","Contacts","contactsFilter","contacts_contactsSearch","visibleContactsList","visibleContactsDetails"],"mappings":"+LAgBeA,EAZF,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,OAAQC,EAAXF,EAAWE,SAAUC,EAArBH,EAAqBG,QAArB,OACVC,EAAAC,EAAAC,cAAA,MAAIC,UAAW,2CAA6CN,EAAS,SAAW,IAAM,oEAAqEE,QAASA,GAChKD,ICMQM,oBARS,SAACC,EAAOC,GAAR,MAAsB,CAC5CT,OAAQS,EAASC,SAAWF,EAAMG,WAAWC,2BAGpB,SAACC,EAAUJ,GAAX,MAAyB,CAClDP,QAAS,kBAAMW,EAASC,YAAoBL,EAASC,YAGxCH,CAGbT,GCwJaS,oBAlKS,SAAAC,GAAK,MAAK,CAC/BO,GAAIP,EAAMG,WAAWK,SAASC,SAiKlBV,CA9JI,SAAAR,GAAsB,IAClCmB,EAAWC,EAAUC,EAAYC,EAASC,EAAOC,EAAOC,EAASC,EADlDV,EAAmBhB,EAAnBgB,GAAIF,EAAed,EAAfc,SAGvB,OACGV,EAAAC,EAAAC,cAACF,EAAAC,EAAMsB,SAAP,KACGvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CACGC,SAAU,SAAAC,GACPA,EAAEC,iBACGZ,EAAUa,MAAMC,QAAWV,EAAMS,MAAMC,QAAWT,EAAMQ,MAAMC,SAGnEnB,EACGoB,YACGlB,EACAG,EAAUa,MACVZ,EAASY,MACTV,EAAQU,MACRX,EAAWW,MACXR,EAAMQ,MACNT,EAAMS,MACNP,EAAQO,MACRN,EAAMM,QAGZb,EAAUa,MAAQ,GAClBZ,EAASY,MAAQ,GACjBV,EAAQU,MAAQ,GAChBX,EAAWW,MAAQ,GACnBR,EAAMQ,MAAQ,GACdT,EAAMS,MAAQ,GACdP,EAAQO,MAAQ,GAChBN,EAAMM,MAAQ,MAGjB5B,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KACGxB,EAAAC,EAAAC,cAACsB,EAAA,GAAD,KACGxB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAKO,GAAI,GACN/B,EAAAC,EAAAC,cAAA,OACG8B,IAAK,2CAA6CpB,EAAK,OACvDT,UAAU,iBACV8B,IAAKrB,KAGXZ,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAKO,GAAI,GACN/B,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KACGxB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAOU,IAAI,aAAX,cACAlC,EAAAC,EAAAC,cAAA,SACGC,UAAU,eACVgC,KAAK,OACLC,KAAK,YACLxB,GAAG,YACHyB,IAAK,SAAAC,GAAI,OAAKvB,EAAYuB,GAC1BC,UAAQ,KAGdvC,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KACGxB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAOU,IAAI,YAAX,aACAlC,EAAAC,EAAAC,cAAA,SACGC,UAAU,eACVgC,KAAK,OACLC,KAAK,WACLxB,GAAG,WACHyB,IAAK,SAAAC,GAAI,OAAKtB,EAAWsB,QAKrCtC,EAAAC,EAAAC,cAACsB,EAAA,GAAD,KACGxB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAKO,GAAI,GACN/B,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KACGxB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAOU,IAAI,cAAX,cACAlC,EAAAC,EAAAC,cAAA,SACGC,UAAU,eACVgC,KAAK,OACLC,KAAK,aACLxB,GAAG,aACHyB,IAAK,SAAAC,GAAI,OAAKrB,EAAaqB,OAIpCtC,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAKO,GAAI,GACN/B,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KACGxB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAOU,IAAI,WAAX,WACAlC,EAAAC,EAAAC,cAAA,SACGC,UAAU,eACVgC,KAAK,OACLC,KAAK,UACLxB,GAAG,UACHyB,IAAK,SAAAC,GAAI,OAAKpB,EAAUoB,QAKpCtC,EAAAC,EAAAC,cAACsB,EAAA,GAAD,KACGxB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAKO,GAAI,GACN/B,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KACGxB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAOU,IAAI,SAAX,SACAlC,EAAAC,EAAAC,cAAA,SACGC,UAAU,eACVgC,KAAK,QACLC,KAAK,QACLxB,GAAG,QACHyB,IAAK,SAAAC,GAAI,OAAKnB,EAAQmB,GACtBC,UAAQ,MAIjBvC,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAKO,GAAI,GACN/B,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KACGxB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAOU,IAAI,SAAX,SACAlC,EAAAC,EAAAC,cAAA,SACGC,UAAU,eACVgC,KAAK,QACLC,KAAK,QACLxB,GAAG,QACHyB,IAAK,SAAAC,GAAI,OAAKlB,EAAQkB,GACtBC,UAAQ,OAKpBvC,EAAAC,EAAAC,cAACsB,EAAA,GAAD,KACGxB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAKO,GAAI,GACN/B,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KACGxB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAOU,IAAI,WAAX,WACAlC,EAAAC,EAAAC,cAAA,SACGC,UAAU,eACVgC,KAAK,OACLC,KAAK,UACLxB,GAAG,UACHyB,IAAK,SAAAC,GAAI,OAAKjB,EAAUiB,OAIjCtC,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAKO,GAAI,GACN/B,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KACGxB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAOU,IAAI,SAAX,SACAlC,EAAAC,EAAAC,cAAA,SACGC,UAAU,eACVgC,KAAK,WACLC,KAAK,QACLxB,GAAG,QACHyB,IAAK,SAAAC,GAAI,OAAKhB,EAAQgB,SAMrCtC,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KACGxB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAQgB,MAAM,UAAUL,KAAK,UAA7B,0eC9EAM,0CAvEZ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAChBE,EAAAI,EAAAC,KAAAF,KAAMJ,IACDrC,MAAQ,CACV4C,OAAO,GAGVN,EAAKO,OAASP,EAAKO,OAAOC,KAAZP,OAAAQ,EAAA,EAAAR,CAAAD,IANEA,uDAUhBG,KAAKO,SAAS,CACXJ,OAAQH,KAAKzC,MAAM4C,yCAItB,OACGjD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oDACZH,EAAAC,EAAAC,cAACoD,EAAArD,EAAD,KACGD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6CACZH,EAAAC,EAAAC,cAAA,UACGiC,KAAK,SACLhC,UAAU,sDACVJ,QAAS+C,KAAKI,QAEdlD,EAAAC,EAAAC,cAACqD,EAAA,SAAD,CAAeC,KAAM,GAAIrD,UAAU,SALtC,iBAQHH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,6DAAd,WACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kCACXH,EAAAC,EAAAC,cAACuD,EAAD,CAAYlD,OAAQmD,IAAuBC,UACxC3D,EAAAC,EAAAC,cAACqD,EAAA,MAAD,CAAYC,KAAM,GAAIrD,UAAU,SADnC,iBAGAH,EAAAC,EAAAC,cAACuD,EAAD,CAAYlD,OAAQmD,IAAuBE,kBACxC5D,EAAAC,EAAAC,cAACqD,EAAA,UAAD,CAAgBC,KAAM,GAAIrD,UAAU,SADvC,aAGAH,EAAAC,EAAAC,cAACuD,EAAD,CAAYlD,OAAQmD,IAAuBG,iBACxC7D,EAAAC,EAAAC,cAACqD,EAAA,KAAD,CAAWC,KAAM,GAAIrD,UAAU,SADlC,sBAIHH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,6DAAd,cACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kCACXH,EAAAC,EAAAC,cAACuD,EAAD,CACGlD,OAAQmD,IAAuBI,+BAC/BC,gBAAgB,eAEhB/D,EAAAC,EAAAC,cAACqD,EAAA,OAAD,CAAaC,KAAM,GAAIrD,UAAU,gBAJpC,eAOAH,EAAAC,EAAAC,cAACuD,EAAD,CAAYlD,OAAQmD,IAAuBM,yBAA0BD,gBAAgB,SAClF/D,EAAAC,EAAAC,cAACqD,EAAA,OAAD,CAAaC,KAAM,GAAIrD,UAAU,iBADpC,SAIAH,EAAAC,EAAAC,cAACuD,EAAD,CAAYlD,OAAQmD,IAAuBO,2BAA4BF,gBAAgB,WACpF/D,EAAAC,EAAAC,cAACqD,EAAA,OAAD,CAAaC,KAAM,GAAIrD,UAAU,iBADpC,cAOTH,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAO0C,OAAQpB,KAAKzC,MAAM4C,MAAOC,OAAQJ,KAAKI,OAAQ/C,UAAW2C,KAAKJ,MAAMvC,UAAWqD,KAAK,MACzFxD,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAa0B,OAAQJ,KAAKI,QAA1B,eACAlD,EAAAC,EAAAC,cAAC4B,EAAD,gBAhEWqC,IAAMC,WCIpBC,EARA,SAAAzE,GAAA,IAAGgC,EAAHhC,EAAGgC,MAAO0C,EAAV1E,EAAU0E,SAAV,OACZtE,EAAAC,EAAAC,cAAA,SAAOiC,KAAK,OAAOhC,UAAU,qBAAqBoE,YAAY,kBAAkBD,SAAU,SAAC5C,GAAD,OAAO4C,EAAS5C,EAAE8C,OAAO5C,QAAQ6C,aAAc7C,KCO7HxB,oBARS,SAACC,GAAD,MAAY,CACjCuB,MAAOvB,EAAMG,WAAWkE,iBAGA,SAAChE,GAAD,MAAe,CACvC4D,SAAW,SAAA1C,GAAK,OAAIlB,EAASgE,YAAe9C,OAGhCxB,CAGbiE,+bCGaM,+JAbT,OACG3E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oDACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACZH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,4EAChBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACZH,EAAAC,EAAAC,cAAC0E,EAAD,gBAPUT,IAAMC,2BCiDnBS,EA/CC,SAAAjF,GAAA,IACbkF,EADalF,EACbkF,eACAC,EAFanF,EAEbmF,eACAC,EAHapF,EAGboF,cACApE,EAJahB,EAIbgB,GACAG,EALanB,EAKbmB,UACAC,EANapB,EAMboB,SACAiE,EAParF,EAObqF,MACAhE,EARarB,EAQbqB,WACAiE,EATatF,EASbsF,QACArF,EAVaD,EAUbC,OAVa,OAYbG,EAAAC,EAAAC,cAAA,MAAIC,UAAW,qDAAwDN,IAAWe,EAAM,uBAAyB,KAC9GZ,EAAAC,EAAAC,cAACsB,EAAA,GAAD,KACGxB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAK2D,GAAI,EAAGpF,QAAS+E,GAClB9E,EAAAC,EAAAC,cAAA,OAAK8B,IAAKiD,EAAO9E,UAAU,0BAA0B8B,IAAKgD,KAE7DjF,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAK2D,GAAI,EAAGpF,QAAS+E,GAClB9E,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sBACZY,EADD,IACaC,GAEbhB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gCAAgCc,IAEhDjB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAK2D,GAAI,GACNnF,EAAAC,EAAAC,cAACqD,EAAA,MAAD,CAAOC,KAAM,GAAIzD,QAASiF,EAAe7E,UAAU,yCAAyCiF,MAAO,CAAE5C,MAAO,aAC5GxC,EAAAC,EAAAC,cAACqD,EAAA,KAAD,CACGC,KAAM,GACNzD,QAASgF,EACT5E,UAAU,+BACViF,MAAO,CAAE5C,MAAO0C,EAAU,UAAY,iBC7B/CG,EAAe,SAAAzF,GAAA,IAAGC,EAAHD,EAAGC,OAAOgB,EAAVjB,EAAUiB,SAAUyE,EAApB1F,EAAoB0F,qBAAsBC,EAA1C3F,EAA0C2F,cAAeC,EAAzD5F,EAAyD4F,eAAzD,OAClBxF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACZH,EAAAC,EAAAC,cAACoD,EAAArD,EAAD,KACGD,EAAAC,EAAAC,cAAA,OAAKU,GAAG,cACLZ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACVU,EAAS4E,IAAI,SAAAC,GAAO,OAClB1F,EAAAC,EAAAC,cAACyF,EAAD/C,OAAAgD,OAAA,CACGC,IAAKH,EAAQ9E,GACbf,OAAUA,GACN6F,EAHP,CAIGX,eAAgB,kBAAMO,EAAqBI,EAAQ9E,KACnDoE,cAAe,kBAAMO,EAAcG,EAAQ9E,KAC3CkE,eAAgB,kBAAMU,EAAeE,EAAQ9E,eASlEyE,EAAaS,UAAY,CACtBjF,SAAUkF,IAAUC,QACjBD,IAAUE,MAAM,CACbrF,GAAImF,IAAUG,OAAOC,WACrBpF,UAAWgF,IAAUK,OAAOD,WAC5BnF,SAAU+E,IAAUK,OACpBnB,MAAOc,IAAUK,OACjBnF,WAAY8E,IAAUK,OACtBlF,QAAS6E,IAAUK,OACnBjF,MAAO4E,IAAUG,OAAOC,WACxB/E,MAAO2E,IAAUK,OAAOD,WACxB9E,QAAS0E,IAAUK,OACnB9E,MAAOyE,IAAUK,OACjBC,oBAAqBN,IAAUO,KAAKH,WACpCjB,QAASa,IAAUO,KAAKH,WACxBI,QAASR,IAAUO,KAAKH,aACxBA,YACJA,WACFb,qBAAsBS,IAAUS,KAAKL,WACrCZ,cAAeQ,IAAUS,KAAKL,WAC9BX,eAAgBO,IAAUS,KAAKL,YAEnBd,QC5CToB,EAAqB,SAAC5F,EAAUN,EAAQmE,GAC3C,OAAQnE,GACL,KAAKmD,IAAuBC,SACzB,OAAO9C,EAASN,OACb,SAAAmG,GAAC,OACGA,EAAEH,SACHG,EAAE3F,UACE4F,oBACAC,OAAO,KACPA,OAAOF,EAAE1F,SAAS2F,qBAClBE,SAASnC,EAAeiC,uBAErC,KAAKjD,IAAuBE,iBACzB,OAAO/C,EAASN,OACb,SAAAmG,GAAC,OACEA,EAAEL,sBACDK,EAAEH,SACHG,EAAE3F,UACE4F,oBACAC,OAAO,KACPA,OAAOF,EAAE1F,SAAS2F,qBAClBE,SAASnC,EAAeiC,uBAErC,KAAKjD,IAAuBG,gBACzB,OAAOhD,EAASN,OACb,SAAAmG,GAAC,OACEA,EAAExB,UACDwB,EAAEH,SACHG,EAAE3F,UACE4F,oBACAC,OAAO,KACPA,OAAOF,EAAE1F,SAAS2F,qBAClBE,SAASnC,EAAeiC,uBAErC,KAAKjD,IAAuBI,+BACzB,OAAOjD,EAASN,OACb,SAAAmG,GAAC,MACmB,gBAAjBA,EAAEzF,aACDyF,EAAEH,SACHG,EAAE3F,UACE4F,oBACAC,OAAO,KACPA,OAAOF,EAAE1F,SAAS2F,qBAClBE,SAASnC,EAAeiC,uBAErC,KAAKjD,IAAuBO,2BACzB,OAAOpD,EAASN,OACb,SAAAmG,GAAC,MACmB,YAAjBA,EAAEzF,aACDyF,EAAEH,SACHG,EAAE3F,UACE4F,oBACAC,OAAO,KACPA,OAAOF,EAAE1F,SAAS2F,qBAClBE,SAASnC,EAAeiC,uBAErC,KAAKjD,IAAuBM,yBACzB,OAAOnD,EAASN,OACb,SAAAmG,GAAC,MACmB,UAAjBA,EAAEzF,aACDyF,EAAEH,SACHG,EAAE3F,UACE4F,oBACAC,OAAO,KACPA,OAAOF,EAAE1F,SAAS2F,qBAClBE,SAASnC,EAAeiC,uBAErC,KAAKjD,IAAuBoD,gBACzB,OAAOjG,EAASN,OACb,SAAAmG,GAAC,OACEA,EAAEH,SACFG,EAAE3F,UACE4F,oBACAC,OAAO,KACPA,OAAOF,EAAE1F,SAAS2F,qBAClBE,SAASnC,EAAeiC,uBAErC,QACG,MAAM,IAAII,MAAM,mBAAqBxG,KAqB/BH,oBAjBS,SAACC,EAAOC,GAAR,MAAsB,CAE3CO,SAAU4F,EACPpG,EAAMG,WAAWK,SACjBR,EAAMG,WAAWC,yBACjBJ,EAAMG,WAAWkE,gBAGpB7E,OAAQQ,EAAMG,WAAWwG,kBAGD,SAACtG,EAAUJ,GAAX,MAAyB,CACjDgF,qBAAsB,SAAA1E,GAAE,OAAIF,EAAS4E,YAAqB1E,KAC1D2E,cAAe,SAAA3E,GAAE,OAAIF,EAAS6E,YAAc3E,KAC5C4E,eAAgB,SAAA5E,GAAE,OAAIF,EAAS8E,YAAe5E,OAGlCR,CAGb6G,GCpGIC,EAAkB,SAAAtH,GAAA,IAAGuH,EAAHvH,EAAGuH,iBAAkBC,EAArBxH,EAAqBwH,YAAaC,EAAlCzH,EAAkCyH,gBAAiB/C,EAAnD1E,EAAmD0E,SAAnD,OACrBtE,EAAAC,EAAAC,cAACoH,EAAA,SAAD,KACIH,EACEnH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACZH,EAAAC,EAAAC,cAACsB,EAAA,GAAD,KACGxB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAKrB,UAAU,cACZH,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAQrB,UAAU,gCAAgCqD,KAAK,KAAKzD,QAASqH,GACjEC,EAAkBrH,EAAAC,EAAAC,cAACqD,EAAA,MAAD,CAAYC,KAAM,KAASxD,EAAAC,EAAAC,cAACqD,EAAA,MAAD,CAAYC,KAAM,QAIzExD,EAAAC,EAAAC,cAACoD,EAAArD,EAAD,KACGD,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KACGxB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAO+F,MAAI,EAACC,KAAK,KACdxH,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CACGiG,QAAM,EACNzF,IAAKmF,EAAiBlC,MACtBhD,IAAI,4BACJ9B,UAAU,8BAGhBH,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAOkG,MAAI,GACR1H,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAOmG,SAAO,GACVR,EAAiBpG,UADrB,IACiCoG,EAAiBnG,UAEjDmG,EAAiBlG,aAGxBjB,EAAAC,EAAAC,cAACsB,EAAA,GAAD,CAAOoG,YAAU,EAACC,YAAU,EAACrE,KAAK,KAAKrD,UAAU,QAC9CH,EAAAC,EAAAC,cAAA,aACGF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,uBAAd,cACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACVkH,EACErH,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CACGW,KAAK,OACLC,KAAK,YACLxB,GAAG,YACH6D,aAAc0C,EAAiBpG,UAC/BuD,SAAU,SAAA5C,GAAC,OAAI4C,EAAS6C,EAAiBvG,GAAI,YAAac,EAAE8C,OAAO5C,UAGtE,KAAOuF,EAAiBpG,YAIjCf,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,uBAAd,aACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACVkH,EACErH,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CACGW,KAAK,OACLC,KAAK,WACLxB,GAAG,WACH6D,aAAc0C,EAAiBnG,SAC/BsD,SAAU,SAAA5C,GAAC,OAAI4C,EAAS6C,EAAiBvG,GAAI,WAAYc,EAAE8C,OAAO5C,UAGrE,KAAOuF,EAAiBnG,WAIjChB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,uBAAd,WACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACVkH,EACErH,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CACGW,KAAK,OACLC,KAAK,UACLxB,GAAG,UACH6D,aAAc0C,EAAiBjG,QAC/BoD,SAAU,SAAA5C,GAAC,OAAI4C,EAAS6C,EAAiBvG,GAAI,UAAWc,EAAE8C,OAAO5C,UAGpE,KAAOuF,EAAiBjG,UAIjClB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,uBAAd,eACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACVkH,EACErH,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CACGW,KAAK,OACLC,KAAK,aACLxB,GAAG,aACH6D,aAAc0C,EAAiBlG,WAC/BqD,SAAU,SAAA5C,GAAC,OAAI4C,EAAS6C,EAAiBvG,GAAI,aAAcc,EAAE8C,OAAO5C,UAGvE,KAAOuF,EAAiBlG,aAIjCjB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,uBAAd,SACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACVkH,EACErH,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CACGW,KAAK,OACLC,KAAK,QACLxB,GAAG,QACH6D,aAAc0C,EAAiB/F,MAC/BkD,SAAU,SAAA5C,GAAC,OAAI4C,EAAS6C,EAAiBvG,GAAI,QAASc,EAAE8C,OAAO5C,UAGlE,KAAOuF,EAAiB/F,QAIjCpB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,uBAAd,SACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACVkH,EACErH,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CACGW,KAAK,OACLC,KAAK,QACLxB,GAAG,QACH6D,aAAc0C,EAAiBhG,MAC/BmD,SAAU,SAAA5C,GAAC,OAAI4C,EAAS6C,EAAiBvG,GAAI,QAASc,EAAE8C,OAAO5C,UAGlE,KAAOuF,EAAiBhG,QAIjCnB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,uBAAd,WACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACVkH,EACErH,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CACGW,KAAK,OACLC,KAAK,UACLxB,GAAG,UACH6D,aAAc0C,EAAiB9F,QAC/BiD,SAAU,SAAA5C,GAAC,OAAI4C,EAAS6C,EAAiBvG,GAAI,UAAWc,EAAE8C,OAAO5C,UAGpE,KAAOuF,EAAiB9F,UAIjCrB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,uBAAd,QACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACVkH,EACErH,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CACGW,KAAK,OACLC,KAAK,QACLxB,GAAG,QACH6D,aAAc0C,EAAiB7F,MAC/BgD,SAAU,SAAA5C,GAAC,OAAI4C,EAAS6C,EAAiBvG,GAAI,QAASc,EAAE8C,OAAO5C,UAGlE,KAAOuF,EAAiB7F,YAS7CtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACZH,EAAAC,EAAAC,cAACqD,EAAA,cAAD,CAAoBC,KAAM,GAAIhB,MAAM,OAAOrC,UAAU,SACrDH,EAAAC,EAAAC,cAAA,2DAQlBgH,EAAgBpB,UAAY,CACzBqB,iBAAkBpB,IAAUC,QACzBD,IAAUE,MAAM,CACbrF,GAAImF,IAAUG,OAAOC,WACrBpF,UAAWgF,IAAUK,OAAOD,WAC5BnF,SAAU+E,IAAUK,OACpBnB,MAAOc,IAAUK,OACjBnF,WAAY8E,IAAUK,OACtBlF,QAAS6E,IAAUK,OACnBjF,MAAO4E,IAAUG,OAAOC,WACxB/E,MAAO2E,IAAUK,OAAOD,WACxB9E,QAAS0E,IAAUK,OACnB9E,MAAOyE,IAAUK,OACjBC,oBAAqBN,IAAUO,KAAKH,WACpCjB,QAASa,IAAUO,KAAKH,WACxBI,QAASR,IAAUO,KAAKH,aACxBA,YACJA,YAEUe,QC1LA9G,oBAVS,SAACC,EAAOC,GAAR,MAAsB,CAC3C6G,iBAAkB9G,EAAMG,WAAWK,SAASR,EAAMG,WAAWwG,iBAC7DK,gBAAiBhH,EAAMG,WAAWsH,cAGV,SAAApH,GAAQ,MAAK,CACrC0G,YAAa,kBAAM1G,EAASqH,gBAC5BzD,SAAS,SAAC1D,EAAIoH,EAAOpG,GAAZ,OAAsBlB,EAASuH,YAAcrH,EAAKoH,EAAOpG,OAGtDxB,CAGb4G,+bCPIkB,+JAEA,OACGlI,EAAAC,EAAAC,cAACoH,EAAA,SAAD,KACGtH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACfH,EAAAC,EAAAC,cAACiI,EAAD,MACAnI,EAAAC,EAAAC,cAACsB,EAAA,GAAD,CAAKrB,UAAU,uBACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACZH,EAAAC,EAAAC,cAACkI,EAAD,MACApI,EAAAC,EAAAC,cAACmI,EAAD,OAEHrI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8CACZH,EAAAC,EAAAC,cAACoI,EAAD,kBAdDlE,aAwBR8D","file":"static/js/16.7e9db5d4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst Link = ({ active, children, onClick }) => (\r\n   <li className={\"list-group-item list-group-item-action \" + (active ? \"active\" : \"\") + \" no-border-top-radius no-border-bottom-radius no-border px-2 py-1\"} onClick={onClick}>\r\n      {children} \r\n   </li>\r\n);\r\n\r\nLink.propTypes = {\r\n   active: PropTypes.bool.isRequired,\r\n   children: PropTypes.node.isRequired,\r\n   onClick: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Link;\r\n","import { connect } from 'react-redux'\r\nimport { setVisibilityFilter } from '../../redux/actions/contacts'\r\nimport Link from '../../components/contacts/Link'\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  active: ownProps.filter === state.contactApp.contactsVisibilityFilter\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  onClick: () => dispatch(setVisibilityFilter(ownProps.filter))\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Link)","import React from \"react\";\r\nimport { Col, Row, Form, FormGroup, Label, Button, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { addContact } from \"../../redux/actions/contacts\";\r\n\r\nconst mapStateToProps = state => ({\r\n   id: state.contactApp.contacts.length\r\n});\r\n\r\nconst AddContact = ({ id, dispatch }) => {\r\n   let firstname, lastname, department, company, phone, email, address, notes;\r\n\r\n   return (\r\n      <React.Fragment>\r\n         <Form\r\n            onSubmit={e => {\r\n               e.preventDefault();\r\n               if (!firstname.value.trim() || !phone.value.trim() || !email.value.trim()) {\r\n                  return;\r\n               }\r\n               dispatch(\r\n                  addContact(\r\n                     id,\r\n                     firstname.value,\r\n                     lastname.value,\r\n                     company.value,\r\n                     department.value,\r\n                     email.value,\r\n                     phone.value,\r\n                     address.value,\r\n                     notes.value\r\n                  )\r\n               );\r\n               firstname.value = \"\";\r\n               lastname.value = \"\";\r\n               company.value = \"\";\r\n               department.value = \"\";\r\n               email.value = \"\";\r\n               phone.value = \"\";\r\n               address.value = \"\";\r\n               notes.value = \"\";\r\n            }}\r\n         >\r\n            <ModalBody>\r\n               <Row>\r\n                  <Col md={6}>\r\n                     <img\r\n                        src={\"https://randomuser.me/api/portraits/men/\" + id + \".jpg\"}\r\n                        className=\"rounded-circle\"\r\n                        alt={id}\r\n                     />\r\n                  </Col>\r\n                  <Col md={6}>\r\n                     <FormGroup>\r\n                        <Label for=\"firstName\">First Name</Label>\r\n                        <input\r\n                           className=\"form-control\"\r\n                           type=\"text\"\r\n                           name=\"firstname\"\r\n                           id=\"firstName\"\r\n                           ref={node => (firstname = node)}\r\n                           required\r\n                        />\r\n                     </FormGroup>\r\n                     <FormGroup>\r\n                        <Label for=\"lastName\">Last Name</Label>\r\n                        <input\r\n                           className=\"form-control\"\r\n                           type=\"text\"\r\n                           name=\"lastname\"\r\n                           id=\"lastName\"\r\n                           ref={node => (lastname = node)}\r\n                        />\r\n                     </FormGroup>\r\n                  </Col>\r\n               </Row>\r\n               <Row>\r\n                  <Col md={6}>\r\n                     <FormGroup>\r\n                        <Label for=\"department\">Department</Label>\r\n                        <input\r\n                           className=\"form-control\"\r\n                           type=\"text\"\r\n                           name=\"department\"\r\n                           id=\"department\"\r\n                           ref={node => (department = node)}\r\n                        />\r\n                     </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                     <FormGroup>\r\n                        <Label for=\"company\">Company</Label>\r\n                        <input\r\n                           className=\"form-control\"\r\n                           type=\"text\"\r\n                           name=\"company\"\r\n                           id=\"company\"\r\n                           ref={node => (company = node)}\r\n                        />\r\n                     </FormGroup>\r\n                  </Col>\r\n               </Row>\r\n               <Row>\r\n                  <Col md={6}>\r\n                     <FormGroup>\r\n                        <Label for=\"phone\">Phone</Label>\r\n                        <input\r\n                           className=\"form-control\"\r\n                           type=\"phone\"\r\n                           name=\"phone\"\r\n                           id=\"phone\"\r\n                           ref={node => (phone = node)}\r\n                           required\r\n                        />\r\n                     </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                     <FormGroup>\r\n                        <Label for=\"email\">Email</Label>\r\n                        <input\r\n                           className=\"form-control\"\r\n                           type=\"email\"\r\n                           name=\"email\"\r\n                           id=\"email\"\r\n                           ref={node => (email = node)}\r\n                           required\r\n                        />\r\n                     </FormGroup>\r\n                  </Col>\r\n               </Row>\r\n               <Row>\r\n                  <Col md={6}>\r\n                     <FormGroup>\r\n                        <Label for=\"address\">Address</Label>\r\n                        <input\r\n                           className=\"form-control\"\r\n                           type=\"text\"\r\n                           name=\"address\"\r\n                           id=\"address\"\r\n                           ref={node => (address = node)}\r\n                        />\r\n                     </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                     <FormGroup>\r\n                        <Label for=\"notes\">Notes</Label>\r\n                        <input\r\n                           className=\"form-control\"\r\n                           type=\"textarea\"\r\n                           name=\"notes\"\r\n                           id=\"notes\"\r\n                           ref={node => (notes = node)}\r\n                        />\r\n                     </FormGroup>\r\n                  </Col>\r\n               </Row>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n               <Button color=\"primary\" type=\"submit\">\r\n                  Add Contact\r\n               </Button>\r\n            </ModalFooter>\r\n         </Form>\r\n      </React.Fragment>\r\n   );\r\n};\r\n\r\nexport default connect(mapStateToProps)(AddContact);\r\n","import React from \"react\";\r\nimport { Modal, ModalHeader } from \"reactstrap\";\r\nimport FilterLink from \"../../containers/contacts/contactsFilterLink\";\r\nimport { contactVisiblityFilter } from \"../../redux/actions/contacts\";\r\nimport AddContact from \"../../containers/contacts/addContact\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport * as Icon from \"react-feather\";\r\n\r\nclass ContactsFilter extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         modal: false\r\n      };\r\n\r\n      this.toggle = this.toggle.bind(this);\r\n   }\r\n\r\n   toggle() {\r\n      this.setState({\r\n         modal: !this.state.modal\r\n      });\r\n   }\r\n   render() {\r\n      return (\r\n         <div className=\"contact-app-sidebar float-left d-none d-xl-block\">\r\n            <PerfectScrollbar>\r\n               <div className=\"contact-app-sidebar-content\">\r\n                  <div className=\"contact-app-menu\">\r\n                     <div className=\"form-group form-group-compose text-center\">\r\n                        <button\r\n                           type=\"button\"\r\n                           className=\"btn btn-raised btn-danger btn-block my-2 shadow-z-2\"\r\n                           onClick={this.toggle}\r\n                        >\r\n                           <Icon.UserPlus size={18} className=\"mr-1\" /> New Contact\r\n                        </button>\r\n                     </div>\r\n                     <h6 className=\"text-muted font-small-3 text-bold-600 text-uppercase my-3\">Filters</h6>\r\n                     <ul className=\"list-group list-group-messages\">\r\n                        <FilterLink filter={contactVisiblityFilter.SHOW_ALL}>\r\n                           <Icon.Users size={18} className=\"mr-1\" /> All Contacts\r\n                        </FilterLink>\r\n                        <FilterLink filter={contactVisiblityFilter.FREQUENT_CONTACT}>\r\n                           <Icon.RefreshCw size={18} className=\"mr-1\" /> Frequent\r\n                        </FilterLink>\r\n                        <FilterLink filter={contactVisiblityFilter.STARRED_CONTACT}>\r\n                           <Icon.Star size={18} className=\"mr-1\" /> Starred contacts\r\n                        </FilterLink>\r\n                     </ul>\r\n                     <h6 className=\"text-muted font-small-3 text-bold-600 text-uppercase my-3\">Department</h6>\r\n                     <ul className=\"list-group list-group-messages\">\r\n                        <FilterLink\r\n                           filter={contactVisiblityFilter.ENGINEERING_DEPARTMENT_CONTACT}\r\n                           departmentValue=\"Engineering\"\r\n                        >\r\n                           <Icon.Circle size={18} className=\"mr-1 danger\" />\r\n                           Engineering\r\n                        </FilterLink>\r\n                        <FilterLink filter={contactVisiblityFilter.SALES_DEPARTMENT_CONTACT} departmentValue=\"Sales\">\r\n                           <Icon.Circle size={18} className=\"mr-1 warning\" />\r\n                           Sales\r\n                        </FilterLink>\r\n                        <FilterLink filter={contactVisiblityFilter.SUPPORT_DEPARTMENT_CONTACT} departmentValue=\"Support\">\r\n                           <Icon.Circle size={18} className=\"mr-1 success\" />\r\n                           Support\r\n                        </FilterLink>\r\n                     </ul>\r\n                  </div>\r\n               </div>\r\n               <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className} size=\"md\">\r\n                  <ModalHeader toggle={this.toggle}>Add Contact</ModalHeader>\r\n                  <AddContact />\r\n               </Modal>\r\n            </PerfectScrollbar>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default ContactsFilter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst Search = ({ value, onChange }) => (   \r\n   <input type=\"text\" className=\"form-control round\" placeholder=\"Search contacts\" onChange={(e) => onChange(e.target.value)} defaultValue={value}/>\r\n);\r\n\r\nSearch.propTypes = {\r\n   onChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Search;\r\n","import { connect } from \"react-redux\";\r\nimport { contactsSearch } from \"../../redux/actions/contacts\";\r\nimport Search from \"../../components/contacts/Search\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n   value: state.contactApp.contactsSearch\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n   onChange:  value => dispatch(contactsSearch(value)),\r\n});\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(Search);\r\n","import React from \"react\";\r\nimport FilterSearch from \"../../containers/contacts/contactsFilterSearch\";\r\n\r\nclass ContactSearch extends React.Component {\r\n   render() {\r\n      return (\r\n         <div className=\"contact-search-box w-100 bg-white pt-4 px-2 pb-2\">\r\n            <div className=\"media\">\r\n               <span className=\"contact-app-sidebar-toggle ft-align-justify font-large-1 mr-2 d-xl-none\" />\r\n               <div className=\"media-body\">\r\n                  <FilterSearch />\r\n               </div>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default ContactSearch;\r\n","import React from \"react\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Star, Trash } from \"react-feather\";\r\n\r\nconst Contact = ({\r\n   onContactClick,\r\n   onStarredClick,\r\n   onDeleteClick,\r\n   id,\r\n   firstname,\r\n   lastname,\r\n   image,\r\n   department,\r\n   starred,\r\n   active\r\n}) => (\r\n   <li className={\"list-group-item list-group-item-action no-border \" + ((active === id) ? \"bg-grey bg-lighten-4\" : \"\")}>\r\n      <Row>\r\n         <Col xs={3} onClick={onContactClick}>\r\n            <img src={image} className=\"rounded-circle width-50\" alt={image} />\r\n         </Col>\r\n         <Col xs={7} onClick={onContactClick}>\r\n            <p className=\"mb-0 text-truncate\">\r\n            {firstname} {lastname}\r\n            </p>\r\n            <p className=\"mb-0 text-muted font-small-3\">{department}</p>\r\n         </Col>\r\n         <Col xs={2}>\r\n            <Trash size={18} onClick={onDeleteClick} className=\"float-right mt-1 mb-2 width-25 d-block\" style={{ color: \"#FF586B\" }} />\r\n            <Star\r\n               size={18}\r\n               onClick={onStarredClick}\r\n               className=\"float-right width-25 d-block\"\r\n               style={{ color: starred ? \"#FFC107\" : \"#495057\" }}\r\n            />\r\n         </Col>\r\n      </Row>\r\n   </li>\r\n);\r\n\r\nContact.propTypes = {\r\n   firstname: PropTypes.string.isRequired,\r\n   lastname: PropTypes.string.isRequired,\r\n   image: PropTypes.string.isRequired,\r\n   department: PropTypes.string.isRequired,\r\n   starred: PropTypes.bool.isRequired,\r\n   onStarredClick: PropTypes.func.isRequired,\r\n   onDeleteClick: PropTypes.func.isRequired,\r\n   onContactClick: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Contact from \"./contact\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n\r\nconst ContactsList = ({ active,contacts, toggleStarredContact, deleteContact, contactDetails }) => (\r\n   <div className=\"contact-app-list\">\r\n      <PerfectScrollbar>\r\n         <div id=\"users-list\">\r\n            <ul className=\"list-group\">\r\n               {contacts.map(contact => (\r\n                  <Contact\r\n                     key={contact.id}\r\n                     active = {active}\r\n                     {...contact}\r\n                     onStarredClick={() => toggleStarredContact(contact.id)}\r\n                     onDeleteClick={() => deleteContact(contact.id)}\r\n                     onContactClick={() => contactDetails(contact.id)}\r\n                  />\r\n               ))}\r\n            </ul>\r\n         </div>\r\n      </PerfectScrollbar>\r\n   </div>\r\n);\r\n\r\nContactsList.prototype = {\r\n   contacts: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n         id: PropTypes.number.isRequired,\r\n         firstname: PropTypes.string.isRequired,\r\n         lastname: PropTypes.string,\r\n         image: PropTypes.string,\r\n         department: PropTypes.string,\r\n         company: PropTypes.string,\r\n         phone: PropTypes.number.isRequired,\r\n         email: PropTypes.string.isRequired,\r\n         address: PropTypes.string,\r\n         notes: PropTypes.string,\r\n         frequentlycontacted: PropTypes.bool.isRequired,\r\n         starred: PropTypes.bool.isRequired,\r\n         deleted: PropTypes.bool.isRequired\r\n      }).isRequired\r\n   ).isRequired,\r\n   toggleStarredContact: PropTypes.func.isRequired,\r\n   deleteContact: PropTypes.func.isRequired,\r\n   contactDetails: PropTypes.func.isRequired\r\n};\r\nexport default ContactsList;\r\n","import { connect } from \"react-redux\";\r\nimport { toggleStarredContact, deleteContact, contactVisiblityFilter, contactDetails } from \"../../redux/actions/contacts\";\r\nimport contacsList from \"../../components/contacts/contacsList\";\r\n\r\nconst getVisibleContacts = (contacts, filter, contactsSearch) => {\r\n   switch (filter) {\r\n      case contactVisiblityFilter.SHOW_ALL:\r\n         return contacts.filter(\r\n            c =>\r\n               !c.deleted &&\r\n               c.firstname\r\n                  .toLocaleLowerCase()\r\n                  .concat(\" \")\r\n                  .concat(c.lastname.toLocaleLowerCase())\r\n                  .includes(contactsSearch.toLocaleLowerCase())\r\n         );\r\n      case contactVisiblityFilter.FREQUENT_CONTACT:\r\n         return contacts.filter(\r\n            c =>\r\n               c.frequentlycontacted &&\r\n               !c.deleted &&\r\n               c.firstname\r\n                  .toLocaleLowerCase()\r\n                  .concat(\" \")\r\n                  .concat(c.lastname.toLocaleLowerCase())\r\n                  .includes(contactsSearch.toLocaleLowerCase())\r\n         );\r\n      case contactVisiblityFilter.STARRED_CONTACT:\r\n         return contacts.filter(\r\n            c =>\r\n               c.starred &&\r\n               !c.deleted &&\r\n               c.firstname\r\n                  .toLocaleLowerCase()\r\n                  .concat(\" \")\r\n                  .concat(c.lastname.toLocaleLowerCase())\r\n                  .includes(contactsSearch.toLocaleLowerCase())\r\n         );\r\n      case contactVisiblityFilter.ENGINEERING_DEPARTMENT_CONTACT:\r\n         return contacts.filter(\r\n            c =>\r\n               c.department === \"Engineering\" &&\r\n               !c.deleted &&\r\n               c.firstname\r\n                  .toLocaleLowerCase()\r\n                  .concat(\" \")\r\n                  .concat(c.lastname.toLocaleLowerCase())\r\n                  .includes(contactsSearch.toLocaleLowerCase())\r\n         );\r\n      case contactVisiblityFilter.SUPPORT_DEPARTMENT_CONTACT:\r\n         return contacts.filter(\r\n            c =>\r\n               c.department === \"Support\" &&\r\n               !c.deleted &&\r\n               c.firstname\r\n                  .toLocaleLowerCase()\r\n                  .concat(\" \")\r\n                  .concat(c.lastname.toLocaleLowerCase())\r\n                  .includes(contactsSearch.toLocaleLowerCase())\r\n         );\r\n      case contactVisiblityFilter.SALES_DEPARTMENT_CONTACT:\r\n         return contacts.filter(\r\n            c =>\r\n               c.department === \"Sales\" &&\r\n               !c.deleted &&\r\n               c.firstname\r\n                  .toLocaleLowerCase()\r\n                  .concat(\" \")\r\n                  .concat(c.lastname.toLocaleLowerCase())\r\n                  .includes(contactsSearch.toLocaleLowerCase())\r\n         );\r\n      case contactVisiblityFilter.DELETED_CONTACT:\r\n         return contacts.filter(\r\n            c =>\r\n               c.deleted &&\r\n               c.firstname\r\n                  .toLocaleLowerCase()\r\n                  .concat(\" \")\r\n                  .concat(c.lastname.toLocaleLowerCase())\r\n                  .includes(contactsSearch.toLocaleLowerCase())\r\n         );\r\n      default:\r\n         throw new Error(\"Unknown filter: \" + filter);\r\n   }\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n   // Mapping contacts object and Visiblityfilter state to Object\r\n   contacts: getVisibleContacts(\r\n      state.contactApp.contacts,\r\n      state.contactApp.contactsVisibilityFilter,\r\n      state.contactApp.contactsSearch\r\n   ),\r\n\r\n   active: state.contactApp.contactsDetails\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n   toggleStarredContact: id => dispatch(toggleStarredContact(id)),\r\n   deleteContact: id => dispatch(deleteContact(id)),\r\n   contactDetails: id => dispatch(contactDetails(id))\r\n});\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(contacsList);\r\n","import React, { Fragment } from \"react\";\r\nimport { Row, Col, Media, Table, Button, Input } from \"reactstrap\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Icon from \"react-feather\";\r\n\r\nconst ContactsDetails = ({ selectedContacts, onEditClick, editContactFlag, onChange }) => (\r\n   <Fragment>\r\n      {selectedContacts ? (\r\n         <div className=\"contact-app-content-detail\">\r\n            <Row>\r\n               <Col className=\"text-right\">\r\n                  <Button className=\"btn-outline-success mr-1 mt-1\" size=\"sm\" onClick={onEditClick}>\r\n                     {editContactFlag ? <Icon.Check size={16} /> : <Icon.Edit2 size={16} />}\r\n                  </Button>\r\n               </Col>\r\n            </Row>\r\n            <PerfectScrollbar>\r\n               <Media>\r\n                  <Media left href=\"#\">\r\n                     <Media\r\n                        object\r\n                        src={selectedContacts.image}\r\n                        alt=\"Generic placeholder image\"\r\n                        className=\"img-fluid rounded-circle\"\r\n                     />\r\n                  </Media>\r\n                  <Media body>\r\n                     <Media heading>\r\n                        {selectedContacts.firstname} {selectedContacts.lastname}\r\n                     </Media>\r\n                     {selectedContacts.department}\r\n                  </Media>\r\n               </Media>\r\n               <Table responsive borderless size=\"sm\" className=\"mt-4\">\r\n                  <tbody>\r\n                     <tr className=\"d-flex\">\r\n                        <td className=\"col-3 text-bold-400\">First Name</td>\r\n                        <td className=\"col-9\">\r\n                           {editContactFlag ? (\r\n                              <Input\r\n                                 type=\"text\"\r\n                                 name=\"firstName\"\r\n                                 id=\"firstName\"\r\n                                 defaultValue={selectedContacts.firstname}\r\n                                 onChange={e => onChange(selectedContacts.id, \"firstname\", e.target.value)}\r\n                              />\r\n                           ) : (\r\n                              \": \" + selectedContacts.firstname\r\n                           )}\r\n                        </td>\r\n                     </tr>\r\n                     <tr className=\"d-flex\">\r\n                        <td className=\"col-3 text-bold-400\">Last Name</td>\r\n                        <td className=\"col-9\">\r\n                           {editContactFlag ? (\r\n                              <Input\r\n                                 type=\"text\"\r\n                                 name=\"lastName\"\r\n                                 id=\"lastName\"\r\n                                 defaultValue={selectedContacts.lastname}\r\n                                 onChange={e => onChange(selectedContacts.id, \"lastname\", e.target.value)}\r\n                              />\r\n                           ) : (\r\n                              \": \" + selectedContacts.lastname\r\n                           )}\r\n                        </td>\r\n                     </tr>\r\n                     <tr className=\"d-flex\">\r\n                        <td className=\"col-3 text-bold-400\">Company</td>\r\n                        <td className=\"col-9\">\r\n                           {editContactFlag ? (\r\n                              <Input\r\n                                 type=\"text\"\r\n                                 name=\"company\"\r\n                                 id=\"company\"\r\n                                 defaultValue={selectedContacts.company}\r\n                                 onChange={e => onChange(selectedContacts.id, \"company\", e.target.value)}\r\n                              />\r\n                           ) : (\r\n                              \": \" + selectedContacts.company\r\n                           )}\r\n                        </td>\r\n                     </tr>\r\n                     <tr className=\"d-flex\">\r\n                        <td className=\"col-3 text-bold-400\">Department:</td>\r\n                        <td className=\"col-9\">\r\n                           {editContactFlag ? (\r\n                              <Input\r\n                                 type=\"text\"\r\n                                 name=\"department\"\r\n                                 id=\"department\"\r\n                                 defaultValue={selectedContacts.department}\r\n                                 onChange={e => onChange(selectedContacts.id, \"department\", e.target.value)}\r\n                              />\r\n                           ) : (\r\n                              \": \" + selectedContacts.department\r\n                           )}\r\n                        </td>\r\n                     </tr>\r\n                     <tr className=\"d-flex\">\r\n                        <td className=\"col-3 text-bold-400\">Email</td>\r\n                        <td className=\"col-9\">\r\n                           {editContactFlag ? (\r\n                              <Input\r\n                                 type=\"text\"\r\n                                 name=\"email\"\r\n                                 id=\"email\"\r\n                                 defaultValue={selectedContacts.email}\r\n                                 onChange={e => onChange(selectedContacts.id, \"email\", e.target.value)}\r\n                              />\r\n                           ) : (\r\n                              \": \" + selectedContacts.email\r\n                           )}\r\n                        </td>\r\n                     </tr>\r\n                     <tr className=\"d-flex\">\r\n                        <td className=\"col-3 text-bold-400\">Phone</td>\r\n                        <td className=\"col-9\">\r\n                           {editContactFlag ? (\r\n                              <Input\r\n                                 type=\"text\"\r\n                                 name=\"phone\"\r\n                                 id=\"phone\"\r\n                                 defaultValue={selectedContacts.phone}\r\n                                 onChange={e => onChange(selectedContacts.id, \"phone\", e.target.value)}\r\n                              />\r\n                           ) : (\r\n                              \": \" + selectedContacts.phone\r\n                           )}\r\n                        </td>\r\n                     </tr>\r\n                     <tr className=\"d-flex\">\r\n                        <td className=\"col-3 text-bold-400\">Address</td>\r\n                        <td className=\"col-9\">\r\n                           {editContactFlag ? (\r\n                              <Input\r\n                                 type=\"text\"\r\n                                 name=\"address\"\r\n                                 id=\"address\"\r\n                                 defaultValue={selectedContacts.address}\r\n                                 onChange={e => onChange(selectedContacts.id, \"address\", e.target.value)}\r\n                              />\r\n                           ) : (\r\n                              \": \" + selectedContacts.address\r\n                           )}\r\n                        </td>\r\n                     </tr>\r\n                     <tr className=\"d-flex\">\r\n                        <td className=\"col-3 text-bold-400\">Note</td>\r\n                        <td className=\"col-9\">\r\n                           {editContactFlag ? (\r\n                              <Input\r\n                                 type=\"text\"\r\n                                 name=\"notes\"\r\n                                 id=\"notes\"\r\n                                 defaultValue={selectedContacts.notes}\r\n                                 onChange={e => onChange(selectedContacts.id, \"notes\", e.target.value)}\r\n                              />\r\n                           ) : (\r\n                              \": \" + selectedContacts.notes\r\n                           )}\r\n                        </td>\r\n                     </tr>\r\n                  </tbody>\r\n               </Table>\r\n            </PerfectScrollbar>\r\n         </div>\r\n      ) : (\r\n         <div className=\"row h-100\">\r\n            <div className=\"col-sm-12 my-auto\">\r\n               <div className=\"text-center\">\r\n                  <Icon.MessageSquare size={84} color=\"#ccc\" className=\"pb-3\"/>\r\n                  <h4>Please select a contact to show details.</h4>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      )}\r\n   </Fragment>\r\n);\r\n\r\nContactsDetails.prototype = {\r\n   selectedContacts: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n         id: PropTypes.number.isRequired,\r\n         firstname: PropTypes.string.isRequired,\r\n         lastname: PropTypes.string,\r\n         image: PropTypes.string,\r\n         department: PropTypes.string,\r\n         company: PropTypes.string,\r\n         phone: PropTypes.number.isRequired,\r\n         email: PropTypes.string.isRequired,\r\n         address: PropTypes.string,\r\n         notes: PropTypes.string,\r\n         frequentlycontacted: PropTypes.bool.isRequired,\r\n         starred: PropTypes.bool.isRequired,\r\n         deleted: PropTypes.bool.isRequired\r\n      }).isRequired\r\n   ).isRequired\r\n};\r\nexport default ContactsDetails;\r\n","import { connect } from \"react-redux\";\r\nimport { setEditContactFlag,updateContact } from \"../../redux/actions/contacts\";\r\nimport contactsDetails from \"../../components/contacts/contactsDetails\";\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n   selectedContacts: state.contactApp.contacts[state.contactApp.contactsDetails],\r\n   editContactFlag: state.contactApp.editContact\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n   onEditClick: () => dispatch(setEditContactFlag()),\r\n   onChange:(id, field, value) => dispatch(updateContact(id , field, value))\r\n});\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(contactsDetails);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Row } from \"reactstrap\";\r\n\r\nimport ContactsFilter from \"../../components/contacts/contactsFilter\";\r\nimport ContactsSearch from \"../../components/contacts/contactsSearch\";\r\n\r\n// import ContactsList from \"../../components/contacts/contacsList\";\r\nimport ContactsList from \"../../containers/contacts/visibleContactsList\";\r\nimport ContactsDetails from \"../../containers/contacts/visibleContactsDetails\";\r\n\r\nclass Contacts extends Component {\r\n   render() {\r\n      return (\r\n         <Fragment>\r\n            <div className=\"contact-application\">\r\n               <div className=\"content-overlay\" />\r\n               <ContactsFilter />\r\n               <Row className=\"contact-app-content\">\r\n                  <div className=\"contact-app-content-area w-100\">\r\n                     <div className=\"contact-app-list-mails p-0\">\r\n                        <ContactsSearch />\r\n                        <ContactsList />\r\n                     </div>\r\n                     <div className=\"contact-app-mail-content d-none d-md-block\">\r\n                        <ContactsDetails />\r\n                     </div>\r\n                  </div>\r\n               </Row>\r\n            </div>\r\n         </Fragment>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Contacts;\r\n"],"sourceRoot":""}