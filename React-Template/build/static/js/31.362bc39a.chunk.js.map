{"version":3,"sources":["views/components/reactstrap/examples/dropdown.js","views/components/reactstrap/examples/dropdownRightAligned.js","views/components/reactstrap/examples/dropdownSizing.js","views/components/reactstrap/examples/dropdownDirection.js","views/components/reactstrap/examples/dropdownUncontrolled.js","views/components/reactstrap/examples/dropdownModifiers.js","views/components/reactstrap/dropdowns.js","views/components/reactstrap/exampleSource/dropdown.js","views/components/reactstrap/exampleSource/dropdownRightAligned.js","views/components/reactstrap/exampleSource/dropdownSizing.js","views/components/reactstrap/exampleSource/dropdownDirection.js","views/components/reactstrap/exampleSource/dropdownUncontrolled.js","views/components/reactstrap/exampleSource/dropdownModifiers.js","components/contentHead/contentHeader.js","components/contentHead/contentSubHeader.js","components/tabs/customTabs.js"],"names":["DropdownDefault","state","dropdownOpen","toggle","_this","setState","prevState","react_default","a","createElement","reactstrap_es","isOpen","this","caret","header","disabled","divider","React","Component","DropdownRightAligned","right","DropdownSizing","lSizeDropdownOpen","mSizeDropdownOpen","sSizeDropdownOpen","lSizeToggle","mSizeToggle","sSizeToggle","className","sm","md","group","size","DropdownDirection","_this2","direction","btnDropleft","btnDropright","DropdownUncontrolled","DropdownModifiers","modifiers","setMaxHeight","enabled","order","fn","data","Object","objectSpread","styles","overflow","maxHeight","Dropdowns","react","contentHeader","contentSubHeader","customTabs","TabContent1","dropdown","TabContent2","lib","component","dropdownRightAligned","dropdownSizing","dropdownDirection","dropdownUncontrolled","dropdownModifiers","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","ContentHeader","props","concat","undefined","children","ContentSubHeader","Example","D_React_Template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_super","call","bind","D_React_Template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__","activeTab","tab","react__WEBPACK_IMPORTED_MODULE_6___default","reactstrap__WEBPACK_IMPORTED_MODULE_8__","tabs","classnames","active","onClick","react_feather__WEBPACK_IMPORTED_MODULE_7__","tabId"],"mappings":"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","file":"static/js/31.362bc39a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n   Dropdown,\r\n   DropdownToggle,\r\n   DropdownMenu,\r\n   DropdownItem\r\n} from \"reactstrap\";\r\n\r\nclass DropdownDefault extends React.Component {\r\n   state = {\r\n      dropdownOpen: false\r\n   };\r\n\r\n   toggle = () => {\r\n      this.setState(prevState => ({\r\n         dropdownOpen: !prevState.dropdownOpen\r\n      }));\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\r\n            <DropdownToggle caret>Dropdown</DropdownToggle>\r\n            <DropdownMenu>\r\n               <DropdownItem header>Header</DropdownItem>\r\n               <DropdownItem disabled>Action</DropdownItem>\r\n               <DropdownItem>Another Action</DropdownItem>\r\n               <DropdownItem divider />\r\n               <DropdownItem>Another Action</DropdownItem>\r\n            </DropdownMenu>\r\n         </Dropdown>\r\n      );\r\n   }\r\n}\r\n\r\nexport default DropdownDefault;","import React from \"react\";\r\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from \"reactstrap\";\r\n\r\nclass DropdownRightAligned extends React.Component {\r\n   state = {\r\n      dropdownOpen: false\r\n   };\r\n\r\n   toggle = () => {\r\n      this.setState(prevState => ({\r\n         dropdownOpen: !prevState.dropdownOpen\r\n      }));\r\n   };\r\n\r\n   render() {\r\n      return (\r\n         <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\r\n            <DropdownToggle caret>Right-aligned dropdown's</DropdownToggle>\r\n            <DropdownMenu right>\r\n               <DropdownItem header>Header</DropdownItem>\r\n               <DropdownItem disabled>Action</DropdownItem>\r\n               <DropdownItem>Another Action</DropdownItem>\r\n               <DropdownItem divider />\r\n               <DropdownItem>Another Really Really Long Action (Really!)</DropdownItem>\r\n            </DropdownMenu>\r\n         </Dropdown>\r\n      );\r\n   }\r\n}\r\n\r\nexport default DropdownRightAligned;\r\n","import React from \"react\";\r\nimport { Row, Col, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from \"reactstrap\";\r\n\r\nclass DropdownSizing extends React.Component {\r\n   state = {\r\n      lSizeDropdownOpen: false,\r\n      mSizeDropdownOpen: false,\r\n      sSizeDropdownOpen: false\r\n   };\r\n\r\n   lSizeToggle = () => {\r\n      this.setState(prevState => ({\r\n         lSizeDropdownOpen: !prevState.lSizeDropdownOpen\r\n      }));\r\n   };\r\n   mSizeToggle = () => {\r\n      this.setState(prevState => ({\r\n         mSizeDropdownOpen: !prevState.mSizeDropdownOpen\r\n      }));\r\n   };\r\n   sSizeToggle = () => {\r\n      this.setState(prevState => ({\r\n         sSizeDropdownOpen: !prevState.sSizeDropdownOpen\r\n      }));\r\n   };\r\n\r\n   render() {\r\n      return (\r\n         <div className=\"d-flex justify-content-around\">\r\n            <Row>\r\n               <Col sm=\"12\" md=\"4\">\r\n                  <Dropdown group isOpen={this.state.lSizeDropdownOpen} size=\"lg\" toggle={this.lSizeToggle}>\r\n                     <DropdownToggle caret>Large Size</DropdownToggle>\r\n                     <DropdownMenu>\r\n                        <DropdownItem header>Header</DropdownItem>\r\n                        <DropdownItem disabled>Action</DropdownItem>\r\n                        <DropdownItem>Another Action</DropdownItem>\r\n                        <DropdownItem divider />\r\n                        <DropdownItem>Another Action</DropdownItem>\r\n                     </DropdownMenu>\r\n                  </Dropdown>\r\n               </Col>\r\n\r\n               <Col sm=\"12\" md=\"4\">\r\n                  <Dropdown isOpen={this.state.mSizeDropdownOpen} toggle={this.mSizeToggle}>\r\n                     <DropdownToggle caret>Normal Size</DropdownToggle>\r\n                     <DropdownMenu right>\r\n                        <DropdownItem header>Header</DropdownItem>\r\n                        <DropdownItem disabled>Action</DropdownItem>\r\n                        <DropdownItem>Another Action</DropdownItem>\r\n                        <DropdownItem divider />\r\n                        <DropdownItem>Another Action</DropdownItem>\r\n                     </DropdownMenu>\r\n                  </Dropdown>\r\n               </Col>\r\n\r\n               <Col sm=\"12\" md=\"4\">\r\n                  <Dropdown group isOpen={this.state.sSizeDropdownOpen} size=\"sm\" toggle={this.sSizeToggle}>\r\n                     <DropdownToggle caret>Small Size</DropdownToggle>\r\n                     <DropdownMenu right>\r\n                        <DropdownItem header>Header</DropdownItem>\r\n                        <DropdownItem disabled>Action</DropdownItem>\r\n                        <DropdownItem>Another Action</DropdownItem>\r\n                        <DropdownItem divider />\r\n                        <DropdownItem>Another Action</DropdownItem>\r\n                     </DropdownMenu>\r\n                  </Dropdown>\r\n               </Col>\r\n            </Row>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default DropdownSizing;\r\n","import React from \"react\";\r\nimport { Row, Col, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from \"reactstrap\";\r\n\r\nclass DropdownDirection extends React.Component {\r\n   state = {\r\n      dropdownOpen: false\r\n   };\r\n\r\n   toggle = () => {\r\n      this.setState(prevState => ({\r\n         dropdownOpen: !prevState.dropdownOpen\r\n      }));\r\n   };\r\n   render() {\r\n      return (\r\n         <div className=\"d-flex justify-content-around\">\r\n            <Row>\r\n               <Col sm=\"12\" md=\"4\">\r\n                  <Dropdown direction=\"up\" isOpen={this.state.dropdownOpen} toggle={this.toggle}>\r\n                     <DropdownToggle caret>Dropup</DropdownToggle>\r\n                     <DropdownMenu>\r\n                        <DropdownItem>Another Action</DropdownItem>\r\n                        <DropdownItem>Another Action</DropdownItem>\r\n                     </DropdownMenu>\r\n                  </Dropdown>\r\n               </Col>\r\n\r\n               <Col sm=\"12\" md=\"4\">\r\n                  <Dropdown\r\n                     direction=\"left\"\r\n                     isOpen={this.state.btnDropleft}\r\n                     toggle={() => {\r\n                        this.setState({ btnDropleft: !this.state.btnDropleft });\r\n                     }}\r\n                  >\r\n                     <DropdownToggle caret>Dropleft</DropdownToggle>\r\n                     <DropdownMenu>\r\n                        <DropdownItem>Another Action</DropdownItem>\r\n                        <DropdownItem>Another Action</DropdownItem>\r\n                     </DropdownMenu>\r\n                  </Dropdown>\r\n               </Col>\r\n\r\n               <Col sm=\"12\" md=\"4\">\r\n                  <Dropdown\r\n                     direction=\"right\"\r\n                     isOpen={this.state.btnDropright}\r\n                     toggle={() => {\r\n                        this.setState({ btnDropright: !this.state.btnDropright });\r\n                     }}\r\n                  >\r\n                     <DropdownToggle caret>Dropright</DropdownToggle>\r\n                     <DropdownMenu>\r\n                        <DropdownItem>Another Action</DropdownItem>\r\n                        <DropdownItem>Another Action</DropdownItem>\r\n                     </DropdownMenu>\r\n                  </Dropdown>\r\n               </Col>\r\n            </Row>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default DropdownDirection;\r\n","import React from \"react\";\r\nimport {\r\n   UncontrolledDropdown,\r\n   DropdownToggle,\r\n   DropdownMenu,\r\n   DropdownItem\r\n} from \"reactstrap\";\r\n\r\nfunction DropdownUncontrolled() {\r\n   return (\r\n      <UncontrolledDropdown>\r\n         <DropdownToggle caret>Dropdown</DropdownToggle>\r\n         <DropdownMenu>\r\n            <DropdownItem header>Header</DropdownItem>\r\n            <DropdownItem disabled>Action</DropdownItem>\r\n            <DropdownItem>Another Action</DropdownItem>\r\n            <DropdownItem divider />\r\n            <DropdownItem>Another Action</DropdownItem>\r\n         </DropdownMenu>\r\n      </UncontrolledDropdown>\r\n   );\r\n}\r\n\r\nexport default DropdownUncontrolled;","import React from \"react\";\r\nimport {\r\n   Dropdown,\r\n   DropdownToggle,\r\n   DropdownMenu,\r\n   DropdownItem\r\n} from \"reactstrap\";\r\n\r\nclass DropdownModifiers extends React.Component {\r\n   state = {\r\n      dropdownOpen: false\r\n   };\r\n\r\n   toggle = () => {\r\n      this.setState(prevState => ({\r\n         dropdownOpen: !prevState.dropdownOpen\r\n      }));\r\n   };\r\n\r\n   render() {\r\n      return (\r\n         <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\r\n            <DropdownToggle>Dropdown</DropdownToggle>\r\n            <DropdownMenu\r\n               modifiers={{\r\n                  setMaxHeight: {\r\n                     enabled: true,\r\n                     order: 890,\r\n                     fn: data => {\r\n                        return {\r\n                           ...data,\r\n                           styles: {\r\n                              ...data.styles,\r\n                              overflow: \"auto\",\r\n                              maxHeight: 100\r\n                           }\r\n                        };\r\n                     }\r\n                  }\r\n               }}\r\n            >\r\n               <DropdownItem>Another Action</DropdownItem>\r\n               <DropdownItem>Another Action</DropdownItem>\r\n               <DropdownItem>Another Action</DropdownItem>\r\n               <DropdownItem>Another Action</DropdownItem>\r\n               <DropdownItem>Another Action</DropdownItem>\r\n               <DropdownItem>Another Action</DropdownItem>\r\n               <DropdownItem>Another Action</DropdownItem>\r\n               <DropdownItem>Another Action</DropdownItem>\r\n               <DropdownItem>Another Action</DropdownItem>\r\n               <DropdownItem>Another Action</DropdownItem>\r\n            </DropdownMenu>\r\n         </Dropdown>\r\n      );\r\n   }\r\n}\r\n\r\nexport default DropdownModifiers;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Card, CardBody, CardTitle, Row, Col } from \"reactstrap\";\r\n\r\n//Prism\r\n// eslint-disable-next-line\r\nimport Prism from \"prismjs\"; //Include JS\r\nimport \"prismjs/themes/prism-okaidia.css\"; //Include CSS\r\nimport { PrismCode } from \"react-prism\"; //Prism Component\r\n\r\n// import classnames from \"classnames\";\r\nimport CustomTabs from \"../../../components/tabs/customTabs\";\r\nimport ContentHeader from \"../../../components/contentHead/contentHeader\";\r\nimport ContentSubHeader from \"../../../components/contentHead/contentSubHeader\";\r\n\r\n// Import examples\r\nimport DropdownDefault from \"./examples/dropdown\";\r\nimport DropdownRightAligned from \"./examples/dropdownRightAligned\";\r\nimport DropdownSizing from \"./examples/dropdownSizing\";\r\nimport DropdownDirection from \"./examples/dropdownDirection\";\r\nimport DropdownUncontrolled from \"./examples/dropdownUncontrolled\";\r\nimport DropdownModifiers from \"./examples/dropdownModifiers\";\r\n\r\n// Import Example Source Code\r\nimport DropdownDefaultSource from \"./exampleSource/dropdown\";\r\nimport DropdownRightAlignedSource from \"./exampleSource/dropdownRightAligned\";\r\nimport DropdownSizingSource from \"./exampleSource/dropdownSizing\";\r\nimport DropdownDirectionSource from \"./exampleSource/dropdownDirection\";\r\nimport DropdownUncontrolledSource from \"./exampleSource/dropdownUncontrolled\";\r\nimport DropdownModifiersSource from \"./exampleSource/dropdownModifiers\";\r\n\r\nexport default class Dropdowns extends Component {\r\n   render() {\r\n      return (\r\n         <Fragment>\r\n            <ContentHeader>Dropdowns</ContentHeader>\r\n            <ContentSubHeader>\r\n               The <code>Dropdown</code> component is used to pass the{\" \"}\r\n               <code>isOpen</code> &amp; <code>toggle</code> props via context\r\n               to the following components: <code>DropdownToggle</code>,{\" \"}\r\n               <code>DropdownMenu</code>. The <code>DropdownToggle</code> uses\r\n               the <code>Button</code> component internally, meaning it also\r\n               accepts all the props the Button component accepts.\r\n            </ContentSubHeader>\r\n\r\n            <Row>\r\n               <Col sm=\"12\" md=\"6\">\r\n                  <Card>\r\n                     <CardBody>\r\n                        <CardTitle>Dropdown</CardTitle>\r\n                        <CustomTabs\r\n                           TabContent1={<DropdownDefault />}\r\n                           TabContent2={\r\n                              <PrismCode\r\n                                 component=\"pre\"\r\n                                 className=\"language-javascript\"\r\n                              >\r\n                                 {DropdownDefaultSource}\r\n                              </PrismCode>\r\n                           }\r\n                        />\r\n                     </CardBody>\r\n                  </Card>\r\n               </Col>\r\n\r\n               <Col sm=\"12\" md=\"6\">\r\n                  <Card>\r\n                     <CardBody>\r\n                        <CardTitle>Right Aligned</CardTitle>\r\n                        <CustomTabs\r\n                           TabContent1={<DropdownRightAligned />}\r\n                           TabContent2={\r\n                              <PrismCode\r\n                                 component=\"pre\"\r\n                                 className=\"language-javascript\"\r\n                              >\r\n                                 {DropdownRightAlignedSource}\r\n                              </PrismCode>\r\n                           }\r\n                        />\r\n                     </CardBody>\r\n                  </Card>\r\n               </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n               <Col sm=\"12\">\r\n                  <Card>\r\n                     <CardBody>\r\n                        <CardTitle>Dropdown Sizing</CardTitle>\r\n                        <CustomTabs\r\n                           TabContent1={<DropdownSizing />}\r\n                           TabContent2={\r\n                              <PrismCode\r\n                                 component=\"pre\"\r\n                                 className=\"language-javascript\"\r\n                              >\r\n                                 {DropdownSizingSource}\r\n                              </PrismCode>\r\n                           }\r\n                        />\r\n                     </CardBody>\r\n                  </Card>\r\n               </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n               <Col sm=\"12\">\r\n                  <Card>\r\n                     <CardBody>\r\n                        <CardTitle>Dropdown Directions</CardTitle>\r\n                        <CustomTabs\r\n                           TabContent1={<DropdownDirection />}\r\n                           TabContent2={\r\n                              <PrismCode\r\n                                 component=\"pre\"\r\n                                 className=\"language-javascript\"\r\n                              >\r\n                                 {DropdownDirectionSource}\r\n                              </PrismCode>\r\n                           }\r\n                        />\r\n                     </CardBody>\r\n                  </Card>\r\n               </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n               <Col sm=\"12\" md=\"6\">\r\n                  <Card>\r\n                     <CardBody>\r\n                        <CardTitle>Uncontrolled</CardTitle>\r\n                        <CustomTabs\r\n                           TabContent1={<DropdownUncontrolled />}\r\n                           TabContent2={\r\n                              <PrismCode\r\n                                 component=\"pre\"\r\n                                 className=\"language-javascript\"\r\n                              >\r\n                                 {DropdownUncontrolledSource}\r\n                              </PrismCode>\r\n                           }\r\n                        />\r\n                     </CardBody>\r\n                  </Card>\r\n               </Col>\r\n\r\n               <Col sm=\"12\" md=\"6\">\r\n                  <Card>\r\n                     <CardBody>\r\n                        <CardTitle>Modifiers</CardTitle>\r\n                        <CustomTabs\r\n                           TabContent1={<DropdownModifiers />}\r\n                           TabContent2={\r\n                              <PrismCode\r\n                                 component=\"pre\"\r\n                                 className=\"language-javascript\"\r\n                              >\r\n                                 {DropdownModifiersSource}\r\n                              </PrismCode>\r\n                           }\r\n                        />\r\n                     </CardBody>\r\n                  </Card>\r\n               </Col>\r\n            </Row>\r\n         </Fragment>\r\n      );\r\n   }\r\n}\r\n","const DropdownDefaultSource = `import React from \"react\";\r\nimport {\r\n   Dropdown,\r\n   DropdownToggle,\r\n   DropdownMenu,\r\n   DropdownItem\r\n} from \"reactstrap\";\r\n\r\nclass DropdownDefault extends React.Component {\r\n   state = {\r\n      dropdownOpen: false\r\n   };\r\n\r\n   toggle = () => {\r\n      this.setState(prevState => ({\r\n         dropdownOpen: !prevState.dropdownOpen\r\n      }));\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\r\n            <DropdownToggle caret>Dropdown</DropdownToggle>\r\n            <DropdownMenu>\r\n               <DropdownItem header>Header</DropdownItem>\r\n               <DropdownItem disabled>Action</DropdownItem>\r\n               <DropdownItem>Another Action</DropdownItem>\r\n               <DropdownItem divider />\r\n               <DropdownItem>Another Action</DropdownItem>\r\n            </DropdownMenu>\r\n         </Dropdown>\r\n      );\r\n   }\r\n}\r\n\r\nexport default DropdownDefault;`;\r\n\r\nexport default DropdownDefaultSource;","const DropdownRightAlignedSource = `import React from \"react\";\r\nimport {\r\n   Dropdown,\r\n   DropdownToggle,\r\n   DropdownMenu,\r\n   DropdownItem\r\n} from \"reactstrap\";\r\n\r\nclass DropdownRightAligned extends React.Component {\r\n   state = {\r\n      dropdownOpen: false\r\n   };\r\n\r\n   toggle = () => {\r\n      this.setState(prevState => ({\r\n         dropdownOpen: !prevState.dropdownOpen\r\n      }));\r\n   };\r\n\r\n   render() {\r\n      return (\r\n         <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\r\n            <DropdownToggle caret>\r\n               This dropdown's menu is right-aligned\r\n            </DropdownToggle>\r\n            <DropdownMenu right>\r\n               <DropdownItem header>Header</DropdownItem>\r\n               <DropdownItem disabled>Action</DropdownItem>\r\n               <DropdownItem>Another Action</DropdownItem>\r\n               <DropdownItem divider />\r\n               <DropdownItem>Another Action</DropdownItem>\r\n            </DropdownMenu>\r\n         </Dropdown>\r\n      );\r\n   }\r\n}\r\n\r\nexport default DropdownRightAligned;`;\r\n\r\nexport default DropdownRightAlignedSource;","const DropdownSizingSource = `import React from \"react\";\r\nimport {\r\n   Dropdown,\r\n   DropdownToggle,\r\n   DropdownMenu,\r\n   DropdownItem\r\n} from \"reactstrap\";\r\n\r\nclass DropdownSizing extends React.Component {\r\n   state = {\r\n      lSizeDropdownOpen: false,\r\n      mSizeDropdownOpen: false,\r\n      sSizeDropdownOpen: false\r\n   };\r\n\r\n   lSizeToggle = () => {\r\n      this.setState(prevState => ({\r\n         lSizeDropdownOpen: !prevState.lSizeDropdownOpen\r\n      }));\r\n   };\r\n   mSizeToggle = () => {\r\n      this.setState(prevState => ({\r\n         mSizeDropdownOpen: !prevState.mSizeDropdownOpen\r\n      }));\r\n   };\r\n   sSizeToggle = () => {\r\n      this.setState(prevState => ({\r\n         sSizeDropdownOpen: !prevState.sSizeDropdownOpen\r\n      }));\r\n   };\r\n\r\n   render() {\r\n      return (\r\n         <div className=\"d-flex justify-content-around\">\r\n            <div>\r\n               <Dropdown\r\n                  group\r\n                  isOpen={this.state.lSizeDropdownOpen}\r\n                  size=\"lg\"\r\n                  toggle={this.lSizeToggle}\r\n               >\r\n                  <DropdownToggle caret>Dropdown</DropdownToggle>\r\n                  <DropdownMenu>\r\n                     <DropdownItem header>Header</DropdownItem>\r\n                     <DropdownItem disabled>Action</DropdownItem>\r\n                     <DropdownItem>Another Action</DropdownItem>\r\n                     <DropdownItem divider />\r\n                     <DropdownItem>Another Action</DropdownItem>\r\n                  </DropdownMenu>\r\n               </Dropdown>\r\n            </div>\r\n\r\n            <div>\r\n               <Dropdown\r\n                  isOpen={this.state.mSizeDropdownOpen}\r\n                  toggle={this.mSizeToggle}\r\n               >\r\n                  <DropdownToggle caret>Dropdown</DropdownToggle>\r\n                  <DropdownMenu right>\r\n                     <DropdownItem header>Header</DropdownItem>\r\n                     <DropdownItem disabled>Action</DropdownItem>\r\n                     <DropdownItem>Another Action</DropdownItem>\r\n                     <DropdownItem divider />\r\n                     <DropdownItem>Another Action</DropdownItem>\r\n                  </DropdownMenu>\r\n               </Dropdown>\r\n            </div>\r\n\r\n            <div>\r\n               <Dropdown\r\n                  group\r\n                  isOpen={this.state.sSizeDropdownOpen}\r\n                  size=\"sm\"\r\n                  toggle={this.sSizeToggle}\r\n               >\r\n                  <DropdownToggle caret>Dropdown</DropdownToggle>\r\n                  <DropdownMenu right>\r\n                     <DropdownItem header>Header</DropdownItem>\r\n                     <DropdownItem disabled>Action</DropdownItem>\r\n                     <DropdownItem>Another Action</DropdownItem>\r\n                     <DropdownItem divider />\r\n                     <DropdownItem>Another Action</DropdownItem>\r\n                  </DropdownMenu>\r\n               </Dropdown>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default DropdownSizing;`;\r\n\r\nexport default DropdownSizingSource;\r\n","const DropdownDirectionSource = `import React from \"react\";\r\nimport {\r\n   Dropdown,\r\n   DropdownToggle,\r\n   DropdownMenu,\r\n   DropdownItem\r\n} from \"reactstrap\";\r\n\r\nclass DropdownDirection extends React.Component {\r\n   render() {\r\n      return (\r\n         <div className=\"d-flex justify-content-around\">\r\n            <div>\r\n               <Dropdown direction=\"up\" isOpen={this.state.btnDropUp} toggle={() => { this.setState({ btnDropUp: !this.state.btnDropUp }); }}>\r\n                  <DropdownToggle caret>Dropup</DropdownToggle>\r\n                  <DropdownMenu>\r\n                     <DropdownItem>Another Action</DropdownItem>\r\n                     <DropdownItem>Another Action</DropdownItem>\r\n                  </DropdownMenu>\r\n               </Dropdown>\r\n            </div>\r\n\r\n            <div>\r\n               <Dropdown\r\n                  direction=\"left\"\r\n                  isOpen={this.state.btnDropleft}\r\n                  toggle={() => {\r\n                     this.setState({ btnDropleft: !this.state.btnDropleft });\r\n                  }}\r\n               >\r\n                  <DropdownToggle caret>Dropleft</DropdownToggle>\r\n                  <DropdownMenu>\r\n                     <DropdownItem>Another Action</DropdownItem>\r\n                     <DropdownItem>Another Action</DropdownItem>\r\n                  </DropdownMenu>\r\n               </Dropdown>\r\n            </div>\r\n\r\n            <div>\r\n               <Dropdown\r\n                  direction=\"right\"\r\n                  isOpen={this.state.btnDropright}\r\n                  toggle={() => {\r\n                     this.setState({ btnDropright: !this.state.btnDropright });\r\n                  }}\r\n               >\r\n                  <DropdownToggle caret>Dropright</DropdownToggle>\r\n                  <DropdownMenu>\r\n                     <DropdownItem>Another Action</DropdownItem>\r\n                     <DropdownItem>Another Action</DropdownItem>\r\n                  </DropdownMenu>\r\n               </Dropdown>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default DropdownDirection;`;\r\n\r\nexport default DropdownDirectionSource;","const DropdownUncontrolledSource = `import React from \"react\";\r\nimport {\r\n   UncontrolledDropdown,\r\n   DropdownToggle,\r\n   DropdownMenu,\r\n   DropdownItem\r\n} from \"reactstrap\";\r\n\r\nfunction DropdownUncontrolled() {\r\n   return (\r\n      <UncontrolledDropdown>\r\n         <DropdownToggle caret>Dropdown</DropdownToggle>\r\n         <DropdownMenu>\r\n            <DropdownItem header>Header</DropdownItem>\r\n            <DropdownItem disabled>Action</DropdownItem>\r\n            <DropdownItem>Another Action</DropdownItem>\r\n            <DropdownItem divider />\r\n            <DropdownItem>Another Action</DropdownItem>\r\n         </DropdownMenu>\r\n      </UncontrolledDropdown>\r\n   );\r\n}\r\n\r\nexport default DropdownUncontrolled;`;\r\n\r\nexport default DropdownUncontrolledSource;","const DropdownModifiersSource = `import React from \"react\";\r\nimport {\r\n   Dropdown,\r\n   DropdownToggle,\r\n   DropdownMenu,\r\n   DropdownItem\r\n} from \"reactstrap\";\r\n\r\nclass DropdownModifiers extends React.Component {\r\n   state = {\r\n      dropdownOpen: false\r\n   };\r\n\r\n   toggle = () => {\r\n      this.setState(prevState => ({\r\n         dropdownOpen: !prevState.dropdownOpen\r\n      }));\r\n   };\r\n\r\n   render() {\r\n      return (\r\n         <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\r\n            <DropdownToggle>Dropdown</DropdownToggle>\r\n            <DropdownMenu\r\n               modifiers={{\r\n                  setMaxHeight: {\r\n                     enabled: true,\r\n                     order: 890,\r\n                     fn: data => {\r\n                        return {\r\n                           ...data,\r\n                           styles: {\r\n                              ...data.styles,\r\n                              overflow: \"auto\",\r\n                              maxHeight: 100\r\n                           }\r\n                        };\r\n                     }\r\n                  }\r\n               }}\r\n            >\r\n               <DropdownItem>Another Action</DropdownItem>\r\n               <DropdownItem>Another Action</DropdownItem>\r\n               <DropdownItem>Another Action</DropdownItem>\r\n               <DropdownItem>Another Action</DropdownItem>\r\n               <DropdownItem>Another Action</DropdownItem>\r\n               <DropdownItem>Another Action</DropdownItem>\r\n               <DropdownItem>Another Action</DropdownItem>\r\n               <DropdownItem>Another Action</DropdownItem>\r\n               <DropdownItem>Another Action</DropdownItem>\r\n               <DropdownItem>Another Action</DropdownItem>\r\n            </DropdownMenu>\r\n         </Dropdown>\r\n      );\r\n   }\r\n}\r\n\r\nexport default DropdownModifiers;`;\r\n\r\nexport default DropdownModifiersSource;\r\n","import React from \"react\";\r\n\r\nconst ContentHeader = props => {\r\n  const {className} = props;\r\n   return (\r\n      <div\r\n         className={`content-header${\r\n            className === undefined ? \"\" : ` ${className}`\r\n         }`}\r\n      >\r\n         {props.children}\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default ContentHeader;\r\n","import React from \"react\";\r\n\r\nconst ContentSubHeader = props => {\r\n   const { className } = props;\r\n   return (\r\n      <div\r\n         className={`content-sub-header${\r\n            className === undefined ? \"\" : ` ${className}`\r\n         }`}\r\n      >\r\n         {props.children}\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default ContentSubHeader;\r\n","import React from \"react\";\r\nimport { Eye, Code } from 'react-feather';\r\nimport {\r\n   TabContent,\r\n   TabPane,\r\n   Nav,\r\n   NavItem,\r\n   NavLink,   \r\n   Row,\r\n   Col\r\n} from \"reactstrap\";\r\nimport classnames from \"classnames\";\r\n\r\nexport default class Example extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n\r\n      this.toggle = this.toggle.bind(this);\r\n      this.state = {\r\n         activeTab: \"1\"\r\n      };\r\n   }\r\n\r\n   toggle(tab) {\r\n      if (this.state.activeTab !== tab) {\r\n         this.setState({\r\n            activeTab: tab\r\n         });\r\n      }\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div className=\"nav-tabs-vc\">\r\n            <Nav tabs>\r\n               <NavItem>\r\n                  <NavLink\r\n                     className={classnames({\r\n                        active: this.state.activeTab === \"1\"\r\n                     })}\r\n                     onClick={() => {\r\n                        this.toggle(\"1\");\r\n                     }}\r\n                  >\r\n                     <Eye size={18} />\r\n                  </NavLink>\r\n               </NavItem>\r\n               <NavItem>\r\n                  <NavLink\r\n                     className={classnames({\r\n                        active: this.state.activeTab === \"2\"\r\n                     })}\r\n                     onClick={() => {\r\n                        this.toggle(\"2\");\r\n                     }}\r\n                  >\r\n                     <Code size={18} />\r\n                  </NavLink>\r\n               </NavItem>\r\n            </Nav>\r\n            \r\n            <TabContent activeTab={this.state.activeTab} className=\"px-0\">\r\n               <TabPane tabId=\"1\">\r\n                  <Row>\r\n                     <Col sm=\"12\">\r\n                        {this.props.TabContent1}\r\n                     </Col>\r\n                  </Row>\r\n               </TabPane>\r\n               <TabPane tabId=\"2\">\r\n                  <Row>\r\n                     <Col sm=\"12\">\r\n                        {this.props.TabContent2}\r\n                     </Col>\r\n                  </Row>\r\n               </TabPane>\r\n            </TabContent>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n"],"sourceRoot":""}