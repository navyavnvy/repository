{"version":3,"sources":["../node_modules/react-copy-to-clipboard/lib/index.js","../node_modules/react-copy-to-clipboard/lib/Component.js","../node_modules/copy-to-clipboard/index.js","../node_modules/toggle-selection/index.js","views/components/reactstrap/examples/tabs.js","views/components/reactstrap/examples/tabsJustified.js","views/components/reactstrap/examples/tabsBorderBottom.js","views/components/reactstrap/examples/tabsVertical.js","views/components/reactstrap/examples/tabsPills.js","views/components/reactstrap/exampleSource/tabs.js","views/components/reactstrap/tabs.js","components/contentHead/contentHeader.js","components/contentHead/contentSubHeader.js","components/tabs/customTabs.js"],"names":["CopyToClipboard","__webpack_require__","module","exports","Object","defineProperty","value","_react","_interopRequireDefault","_copyToClipboard","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","length","indexOf","_objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","call","_defineProperties","props","descriptor","configurable","writable","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_assertThisInitialized","self","ReferenceError","_setPrototypeOf","p","_defineProperty","_React$PureComponent","_getPrototypeOf2","_this","instance","Constructor","TypeError","_classCallCheck","this","_len","arguments","args","Array","_key","concat","event","_this$props","text","onCopy","children","options","elem","Children","only","result","onClick","protoProps","staticProps","subClass","superClass","create","_inherits","PureComponent","_this$props2","cloneElement","forEach","getOwnPropertyDescriptors","defineProperties","_objectSpread","undefined","deselectCurrent","clipboardToIE11Formatting","text/plain","text/html","defaultMessage","debug","message","reselectPrevious","range","selection","mark","success","document","createRange","getSelection","createElement","textContent","style","all","position","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","addEventListener","e","stopPropagation","format","preventDefault","clipboardData","console","warn","window","clearData","setData","body","appendChild","selectNodeContents","addRange","execCommand","Error","err","error","copyKey","test","navigator","userAgent","replace","prompt","removeRange","removeAllRanges","removeChild","rangeCount","active","activeElement","ranges","getRangeAt","tagName","toUpperCase","blur","type","focus","Tabs","state","activeTab","toggle","tab","setState","_this2","react_default","a","reactstrap_es","tabs","className","classnames","tabId","sm","Component","TabsExampleSource","react","md","lg","lib","copied","react_prism_lib","component","React","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","ContentHeader","ContentSubHeader","Example","D_React_Template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_super","bind","D_React_Template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_6___default","reactstrap__WEBPACK_IMPORTED_MODULE_8__","react_feather__WEBPACK_IMPORTED_MODULE_7__","size","TabContent1","TabContent2"],"mappings":"2FAEA,IACAA,EADeC,EAAQ,KACvBD,gBAEAA,oBACAE,EAAAC,QAAAH,oCCJAI,OAAAC,eAAAF,EAAA,cACAG,OAAA,IAEAH,EAAAH,qBAAA,EAEA,IAAAO,EAAAC,EAAoCP,EAAQ,IAE5CQ,EAAAD,EAA8CP,EAAQ,MAEtD,SAAAO,EAAAE,GACA,OAAAA,KAAAC,WAAAD,EAAA,CACAE,QAAAF,GAIA,SAAAG,EAAAH,GAWA,OATAG,EADA,oBAAAC,QAAA,kBAAAA,OAAAC,SACA,SAAAL,GACA,cAAAA,GAGA,SAAAA,GACA,OAAAA,GAAA,oBAAAI,QAAAJ,EAAAM,cAAAF,QAAAJ,IAAAI,OAAAG,UAAA,gBAAAP,IAIAA,GAGA,SAAAQ,EAAAC,EAAAC,GACA,IAAAC,EAAAjB,OAAAiB,KAAAF,GAEA,GAAAf,OAAAkB,sBAAA,CACA,IAAAC,EAAAnB,OAAAkB,sBAAAH,GACAC,IAAAG,IAAAC,OAAA,SAAAC,GACA,OAAArB,OAAAsB,yBAAAP,EAAAM,GAAAE,cAEAN,EAAAO,KAAAC,MAAAR,EAAAE,GAGA,OAAAF,EAuBA,SAAAS,EAAAC,EAAAC,GACA,SAAAD,EAAA,SAEA,IAEAE,EAAAC,EAFAC,EAkBA,SAAAJ,EAAAC,GACA,SAAAD,EAAA,SACA,IAEAE,EAAAC,EAFAC,EAAA,GACAC,EAAAhC,OAAAiB,KAAAU,GAGA,IAAAG,EAAA,EAAaA,EAAAE,EAAAC,OAAuBH,IACpCD,EAAAG,EAAAF,GACAF,EAAAM,QAAAL,IAAA,IACAE,EAAAF,GAAAF,EAAAE,IAGA,OAAAE,EA9BAI,CAAAR,EAAAC,GAIA,GAAA5B,OAAAkB,sBAAA,CACA,IAAAkB,EAAApC,OAAAkB,sBAAAS,GAEA,IAAAG,EAAA,EAAeA,EAAAM,EAAAH,OAA6BH,IAC5CD,EAAAO,EAAAN,GACAF,EAAAM,QAAAL,IAAA,GACA7B,OAAAa,UAAAwB,qBAAAC,KAAAX,EAAAE,KACAE,EAAAF,GAAAF,EAAAE,IAIA,OAAAE,EAwBA,SAAAQ,EAAAR,EAAAS,GACA,QAAAV,EAAA,EAAiBA,EAAAU,EAAAP,OAAkBH,IAAA,CACnC,IAAAW,EAAAD,EAAAV,GACAW,EAAAlB,WAAAkB,EAAAlB,aAAA,EACAkB,EAAAC,cAAA,EACA,UAAAD,MAAAE,UAAA,GACA3C,OAAAC,eAAA8B,EAAAU,EAAAZ,IAAAY,IAkBA,SAAAG,EAAAC,GAIA,OAHAD,EAAA5C,OAAA8C,eAAA9C,OAAA+C,eAAA,SAAAF,GACA,OAAAA,EAAAG,WAAAhD,OAAA+C,eAAAF,KAEAA,GAGA,SAAAI,EAAAC,GACA,YAAAA,EACA,UAAAC,eAAA,6DAGA,OAAAD,EAkBA,SAAAE,EAAAP,EAAAQ,GAMA,OALAD,EAAApD,OAAA8C,gBAAA,SAAAD,EAAAQ,GAEA,OADAR,EAAAG,UAAAK,EACAR,IAGAA,EAAAQ,GAGA,SAAAC,EAAAhD,EAAAuB,EAAA3B,GAYA,OAXA2B,KAAAvB,EACAN,OAAAC,eAAAK,EAAAuB,EAAA,CACA3B,QACAqB,YAAA,EACAmB,cAAA,EACAC,UAAA,IAGArC,EAAAuB,GAAA3B,EAGAI,EAGA,IAAAV,EAAA,SAAA2D,GAGA,SAAA3D,IACA,IAAA4D,EAEAC,EApEAP,EAAAZ,GAtBA,SAAAoB,EAAAC,GACA,KAAAD,aAAAC,GACA,UAAAC,UAAA,qCA0FAC,CAAAC,KAAAlE,GAEA,QAAAmE,EAAAC,UAAA/B,OAAAgC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAuEA,EAAAJ,EAAaI,IACpFF,EAAAE,GAAAH,UAAAG,GA0BA,OAnGAjB,EA4EAY,KA5EAxB,GA4EAkB,EAAAZ,EAAAhD,IAAA0C,KAAAb,MAAA+B,EAAA,CAAAM,MAAAM,OAAAH,IAAAR,GA3EAnB,GAAA,WAAA7B,EAAA6B,IAAA,oBAAAA,EAIAW,EAAAC,GAHAZ,EA4EAgB,EAAAL,EAAAQ,GAAA,mBAAAY,GACA,IAAAC,EAAAb,EAAAjB,MACA+B,EAAAD,EAAAC,KACAC,EAAAF,EAAAE,OACAC,EAAAH,EAAAG,SACAC,EAAAJ,EAAAI,QAEAC,EAAAxE,EAAA,QAAAyE,SAAAC,KAAAJ,GAEAK,GAAA,EAAAzE,EAAA,SAAAkE,EAAAG,GAEAF,GACAA,EAAAD,EAAAO,GAIAH,KAAAnC,OAAA,oBAAAmC,EAAAnC,MAAAuC,SACAJ,EAAAnC,MAAAuC,QAAAV,KAIAZ,EAzGA,IAAAE,EAAAqB,EAAAC,EA8HA,OAjGA,SAAAC,EAAAC,GACA,uBAAAA,GAAA,OAAAA,EACA,UAAAvB,UAAA,sDAGAsB,EAAArE,UAAAb,OAAAoF,OAAAD,KAAAtE,UAAA,CACAD,YAAA,CACAV,MAAAgF,EACAvC,UAAA,EACAD,cAAA,KAGAyC,GAAA/B,EAAA8B,EAAAC,GA4BAE,CAAAzF,EA0DCO,EAAA,WAAAmF,eA/HD3B,EA4GA/D,GA5GAoF,EA4GA,EACAnD,IAAA,SACA3B,MAAA,WACA,IAAAqF,EAAAzB,KAAAtB,MAIAiC,GAHAc,EAAAhB,KACAgB,EAAAf,OACAe,EAAAb,QACAa,EAAAd,UACAjC,EAAAd,EAAA6D,EAAA,wCAEAZ,EAAAxE,EAAA,QAAAyE,SAAAC,KAAAJ,GAEA,OAAAtE,EAAA,QAAAqF,aAAAb,EAhMA,SAAA5C,GACA,QAAAD,EAAA,EAAiBA,EAAAkC,UAAA/B,OAAsBH,IAAA,CACvC,IAAAH,EAAA,MAAAqC,UAAAlC,GAAAkC,UAAAlC,GAAA,GAEAA,EAAA,EACAhB,EAAAa,GAAA,GAAA8D,QAAA,SAAA5D,GACAyB,EAAAvB,EAAAF,EAAAF,EAAAE,MAEK7B,OAAA0F,0BACL1F,OAAA2F,iBAAA5D,EAAA/B,OAAA0F,0BAAA/D,IAEAb,EAAAa,GAAA8D,QAAA,SAAA5D,GACA7B,OAAAC,eAAA8B,EAAAF,EAAA7B,OAAAsB,yBAAAK,EAAAE,MAKA,OAAAE,EA+KA6D,CAAA,GAAkEpD,EAAA,CAClEuC,QAAAjB,KAAAiB,gBAxHAxC,EAAAoB,EAAA9C,UAAAmE,GACAC,GAAA1C,EAAAoB,EAAAsB,GA4HArF,EA1DA,GA6DAG,EAAAH,kBAEA0D,EAAA1D,EAAA,gBACA4E,YAAAqB,EACAnB,aAAAmB,sCCxPA,IAAAC,EAAsBjG,EAAQ,KAE9BkG,EAAA,CACAC,aAAA,OACAC,YAAA,MACAzF,QAAA,QAEA0F,EAAA,mCA6GApG,EAAAC,QAtGA,SAAAwE,EAAAG,GACA,IAAAyB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAAA,EAEA/B,IACAA,EAAA,IAGAyB,EAAAzB,EAAAyB,QAAA,EAEA,IAiDA,GAhDAE,EAAAP,IACAQ,EAAAI,SAAAC,cACAJ,EAAAG,SAAAE,gBACAJ,EAAAE,SAAAG,cAAA,SACAC,YAAAvC,EAEAiC,EAAAO,MAAAC,IAAA,QAEAR,EAAAO,MAAAE,SAAA,QACAT,EAAAO,MAAAG,IAAA,EACAV,EAAAO,MAAAI,KAAA,mBAEAX,EAAAO,MAAAK,WAAA,MAEAZ,EAAAO,MAAAM,iBAAA,OACAb,EAAAO,MAAAO,cAAA,OACAd,EAAAO,MAAAQ,aAAA,OACAf,EAAAO,MAAAS,WAAA,OACAhB,EAAAiB,iBAAA,gBAAAC,GAGA,GAFAA,EAAAC,kBAEAjD,EAAAkD,OAGA,GAFAF,EAAAG,iBAEA,qBAAAH,EAAAI,cAAA,CAEA3B,GAAA4B,QAAAC,KAAA,iCACA7B,GAAA4B,QAAAC,KAAA,4BACAC,OAAAH,cAAAI,YACA,IAAAN,EAAA7B,EAAArB,EAAAkD,SAAA7B,EAAA,QACAkC,OAAAH,cAAAK,QAAAP,EAAArD,QAGAmD,EAAAI,cAAAI,YACAR,EAAAI,cAAAK,QAAAzD,EAAAkD,OAAArD,GAIAG,EAAAF,SACAkD,EAAAG,iBACAnD,EAAAF,OAAAkD,EAAAI,kBAGApB,SAAA0B,KAAAC,YAAA7B,GACAF,EAAAgC,mBAAA9B,GACAD,EAAAgC,SAAAjC,IACAI,SAAA8B,YAAA,QAGA,UAAAC,MAAA,iCAGAhC,GAAA,EACG,MAAAiC,GACHvC,GAAA4B,QAAAY,MAAA,qCAAAD,GACAvC,GAAA4B,QAAAC,KAAA,4BAEA,IACAC,OAAAH,cAAAK,QAAAzD,EAAAkD,QAAA,OAAArD,GACAG,EAAAF,QAAAE,EAAAF,OAAAyD,OAAAH,eACArB,GAAA,EACK,MAAAiC,GACLvC,GAAA4B,QAAAY,MAAA,uCAAAD,GACAvC,GAAA4B,QAAAY,MAAA,0BACAvC,EArFA,SAAAA,GACA,IAAAwC,GAAA,YAAAC,KAAAC,UAAAC,WAAA,sBACA,OAAA3C,EAAA4C,QAAA,gBAAsCJ,GAmFtChB,CAAA,YAAAlD,IAAA0B,QAAAF,GACA+B,OAAAgB,OAAA7C,EAAA7B,IAEG,QACHgC,IACA,mBAAAA,EAAA2C,YACA3C,EAAA2C,YAAA5C,GAEAC,EAAA4C,mBAIA3C,GACAE,SAAA0B,KAAAgB,YAAA5C,GAGAH,IAGA,OAAAI,sBCnHA3G,EAAAC,QAAA,WACA,IAAAwG,EAAAG,SAAAE,eAEA,IAAAL,EAAA8C,WACA,oBAMA,IAHA,IAAAC,EAAA5C,SAAA6C,cACAC,EAAA,GAEA1H,EAAA,EAAiBA,EAAAyE,EAAA8C,WAA0BvH,IAC3C0H,EAAAhI,KAAA+E,EAAAkD,WAAA3H,IAGA,OAAAwH,EAAAI,QAAAC,eAEA,YACA,eACAL,EAAAM,OACA,MAEA,QACAN,EAAA,KAKA,OADA/C,EAAA4C,kBACA,WACA,UAAA5C,EAAAsD,MAAAtD,EAAA4C,kBAEA5C,EAAA8C,YACAG,EAAA/D,QAAA,SAAAa,GACAC,EAAAgC,SAAAjC,KAIAgD,KAAAQ,ynBCgFeC,oMAnGZC,MAAQ,CACLC,UAAW,OAGdC,OAAS,SAAAC,GACF1G,EAAKuG,MAAMC,YAAcE,GAC1B1G,EAAK2G,SAAS,CACXH,UAAWE,4DAIX,IAAAE,EAAAvG,KACN,OACGwG,EAAAC,EAAA1D,cAAA,WACGyD,EAAAC,EAAA1D,cAAC2D,EAAA,EAAD,CAAKC,MAAI,GACNH,EAAAC,EAAA1D,cAAC2D,EAAA,GAAD,KACGF,EAAAC,EAAA1D,cAAC2D,EAAA,GAAD,CACGE,UAAWC,IAAW,CACnBrB,OAAiC,MAAzBxF,KAAKkG,MAAMC,YAEtBlF,QAAS,WACNsF,EAAKH,OAAO,OALlB,iBAWHI,EAAAC,EAAA1D,cAAC2D,EAAA,GAAD,KACGF,EAAAC,EAAA1D,cAAC2D,EAAA,GAAD,CACGE,UAAWC,IAAW,CACnBrB,OAAiC,MAAzBxF,KAAKkG,MAAMC,YAEtBlF,QAAS,WACNsF,EAAKH,OAAO,OALlB,oBAWHI,EAAAC,EAAA1D,cAAC2D,EAAA,GAAD,KACGF,EAAAC,EAAA1D,cAAC2D,EAAA,GAAD,CACGE,UAAWC,IAAW,CACnBrB,OAAiC,MAAzBxF,KAAKkG,MAAMC,YAEtBlF,QAAS,WACNsF,EAAKH,OAAO,OALlB,iBAYNI,EAAAC,EAAA1D,cAAC2D,EAAA,GAAD,CAAYP,UAAWnG,KAAKkG,MAAMC,WAC/BK,EAAAC,EAAA1D,cAAC2D,EAAA,GAAD,CAASI,MAAM,KACZN,EAAAC,EAAA1D,cAAC2D,EAAA,GAAD,KACGF,EAAAC,EAAA1D,cAAC2D,EAAA,EAAD,CAAKK,GAAG,MACLP,EAAAC,EAAA1D,cAAA,4BACAyD,EAAAC,EAAA1D,cAAA,6iBAITyD,EAAAC,EAAA1D,cAAC2D,EAAA,GAAD,CAASI,MAAM,KACZN,EAAAC,EAAA1D,cAAC2D,EAAA,GAAD,KACGF,EAAAC,EAAA1D,cAAC2D,EAAA,EAAD,CAAKK,GAAG,KACLP,EAAAC,EAAA1D,cAAC2D,EAAA,EAAD,CAAMpC,MAAI,GACPkC,EAAAC,EAAA1D,cAAC2D,EAAA,EAAD,gCACAF,EAAAC,EAAA1D,cAAC2D,EAAA,EAAD,+EAIAF,EAAAC,EAAA1D,cAAC2D,EAAA,EAAD,CAAQE,UAAU,mBAAlB,kBAGNJ,EAAAC,EAAA1D,cAAC2D,EAAA,EAAD,CAAKK,GAAG,KACLP,EAAAC,EAAA1D,cAAC2D,EAAA,EAAD,CAAMpC,MAAI,GACPkC,EAAAC,EAAA1D,cAAC2D,EAAA,EAAD,gCACAF,EAAAC,EAAA1D,cAAC2D,EAAA,EAAD,+EAIAF,EAAAC,EAAA1D,cAAC2D,EAAA,EAAD,CAAQE,UAAU,kBAAlB,oBAKZJ,EAAAC,EAAA1D,cAAC2D,EAAA,GAAD,CAASI,MAAM,KACZN,EAAAC,EAAA1D,cAAC2D,EAAA,GAAD,KACGF,EAAAC,EAAA1D,cAAC2D,EAAA,EAAD,CAAKK,GAAG,MACLP,EAAAC,EAAA1D,cAAA,4BACAyD,EAAAC,EAAA1D,cAAA,sjBA1FLiE,qcCASA,ocCAGA,ocCAJA,ocCAHA,gBCkFTC,EAlGQ,07ICwKjBhB,+JAEM,IAAAtG,EAAAK,KACN,OACGwG,EAAAC,EAAA1D,cAACmE,EAAA,SAAD,KACGV,EAAAC,EAAA1D,cAAC2D,EAAA,GAAD,KACGF,EAAAC,EAAA1D,cAAC2D,EAAA,EAAD,CAAKS,GAAG,KAAKC,GAAG,MACbZ,EAAAC,EAAA1D,cAAC2D,EAAA,EAAD,KACGF,EAAAC,EAAA1D,cAAC2D,EAAA,EAAD,KACGF,EAAAC,EAAA1D,cAAC2D,EAAA,EAAD,aACAF,EAAAC,EAAA1D,cAAC2D,EAAA,EAAD,CAAKS,GAAG,KAAKC,GAAG,IAAIR,UAAU,WAC3BJ,EAAAC,EAAA1D,cAAC4D,EAAD,MACAH,EAAAC,EAAA1D,cAAA,OAAK6D,UAAU,IACZJ,EAAAC,EAAA1D,cAAA,OAAK6D,UAAU,gBAAf,gBAEAJ,EAAAC,EAAA1D,cAAC2D,EAAA,EAAD,CAAKS,GAAG,KAAKP,UAAU,WACpBJ,EAAAC,EAAA1D,cAAA,OAAK6D,UAAU,sBACZJ,EAAAC,EAAA1D,cAAA,OAAK6D,UAAU,qBAAf,kEACAJ,EAAAC,EAAA1D,cAAA,OAAK6D,UAAU,oBAAf,qDAKZJ,EAAAC,EAAA1D,cAAC2D,EAAA,EAAD,CAAKS,GAAG,KAAKC,GAAG,IAAIR,UAAU,YAC9BJ,EAAAC,EAAA1D,cAACsE,EAAA,gBAAD,CAAiB5G,KAAMwG,EACjBvG,OAAQ,kBAAMf,EAAK2G,SAAS,CAACgB,QAAQ,MACrCd,EAAAC,EAAA1D,cAAA,QAAM6D,UAAU,aAAhB,cAEAJ,EAAAC,EAAA1D,cAACwE,EAAA,UAAD,CACGC,UAAU,MACVZ,UAAU,uBAETK,gBAhCfQ,IAAMT,WA0DVf,6CClOf,IAAAyB,EAAA3L,EAAA,GAAA4L,EAAA5L,EAAA6L,EAAAF,GAeeG,IAbO,SAAAnJ,GAAS,IACtBkI,EAAalI,EAAbkI,UACN,OACGe,EAAAlB,EAAA1D,cAAA,OACG6D,UAAS,iBAAAtG,YACQyB,IAAd6E,EAA0B,GAA1B,IAAAtG,OAAmCsG,KAGrClI,EAAMiC,4CCVhB,IAAA+G,EAAA3L,EAAA,GAAA4L,EAAA5L,EAAA6L,EAAAF,GAeeI,IAbU,SAAApJ,GAAS,IACvBkI,EAAclI,EAAdkI,UACR,OACGe,EAAAlB,EAAA1D,cAAA,OACG6D,UAAS,qBAAAtG,YACQyB,IAAd6E,EAA0B,GAA1B,IAAAtG,OAAmCsG,KAGrClI,EAAMiC,6mBCGKoH,0CAClB,SAAAA,EAAYrJ,GAAO,IAAAiB,EAAA,OAAAzD,OAAA8L,EAAA,EAAA9L,CAAA8D,KAAA+H,IAChBpI,EAAAsI,EAAAzJ,KAAAwB,KAAMtB,IAED0H,OAASzG,EAAKyG,OAAO8B,KAAZhM,OAAAiM,EAAA,EAAAjM,CAAAyD,IACdA,EAAKuG,MAAQ,CACVC,UAAW,KALExG,qDASZ0G,GACArG,KAAKkG,MAAMC,YAAcE,GAC1BrG,KAAKsG,SAAS,CACXH,UAAWE,qCAKX,IAAAE,EAAAvG,KACN,OACGoI,EAAA3B,EAAA1D,cAAA,OAAK6D,UAAU,eACZwB,EAAA3B,EAAA1D,cAACsF,EAAA,EAAD,CAAK1B,MAAI,GACNyB,EAAA3B,EAAA1D,cAACsF,EAAA,GAAD,KACGD,EAAA3B,EAAA1D,cAACsF,EAAA,GAAD,CACGzB,UAAWC,IAAW,CACnBrB,OAAiC,MAAzBxF,KAAKkG,MAAMC,YAEtBlF,QAAS,WACNsF,EAAKH,OAAO,OAGfgC,EAAA3B,EAAA1D,cAACuF,EAAA,IAAD,CAAKC,KAAM,OAGjBH,EAAA3B,EAAA1D,cAACsF,EAAA,GAAD,KACGD,EAAA3B,EAAA1D,cAACsF,EAAA,GAAD,CACGzB,UAAWC,IAAW,CACnBrB,OAAiC,MAAzBxF,KAAKkG,MAAMC,YAEtBlF,QAAS,WACNsF,EAAKH,OAAO,OAGfgC,EAAA3B,EAAA1D,cAACuF,EAAA,KAAD,CAAMC,KAAM,QAKrBH,EAAA3B,EAAA1D,cAACsF,EAAA,GAAD,CAAYlC,UAAWnG,KAAKkG,MAAMC,UAAWS,UAAU,QACpDwB,EAAA3B,EAAA1D,cAACsF,EAAA,GAAD,CAASvB,MAAM,KACZsB,EAAA3B,EAAA1D,cAACsF,EAAA,GAAD,KACGD,EAAA3B,EAAA1D,cAACsF,EAAA,EAAD,CAAKtB,GAAG,MACJ/G,KAAKtB,MAAM8J,eAIrBJ,EAAA3B,EAAA1D,cAACsF,EAAA,GAAD,CAASvB,MAAM,KACZsB,EAAA3B,EAAA1D,cAACsF,EAAA,GAAD,KACGD,EAAA3B,EAAA1D,cAACsF,EAAA,EAAD,CAAKtB,GAAG,MACJ/G,KAAKtB,MAAM+J,wBA3DChB,IAAMT","file":"static/js/32.da9aa700.chunk.js","sourcesContent":["\"use strict\";\n\nvar _require = require('./Component'),\n    CopyToClipboard = _require.CopyToClipboard;\n\nCopyToClipboard.CopyToClipboard = CopyToClipboard;\nmodule.exports = CopyToClipboard;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CopyToClipboard = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _copyToClipboard = _interopRequireDefault(require(\"copy-to-clipboard\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar CopyToClipboard = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(CopyToClipboard, _React$PureComponent);\n\n  function CopyToClipboard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CopyToClipboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CopyToClipboard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"onClick\", function (event) {\n      var _this$props = _this.props,\n          text = _this$props.text,\n          onCopy = _this$props.onCopy,\n          children = _this$props.children,\n          options = _this$props.options;\n\n      var elem = _react[\"default\"].Children.only(children);\n\n      var result = (0, _copyToClipboard[\"default\"])(text, options);\n\n      if (onCopy) {\n        onCopy(text, result);\n      } // Bypass onClick if it was present\n\n\n      if (elem && elem.props && typeof elem.props.onClick === 'function') {\n        elem.props.onClick(event);\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CopyToClipboard, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          _text = _this$props2.text,\n          _onCopy = _this$props2.onCopy,\n          _options = _this$props2.options,\n          children = _this$props2.children,\n          props = _objectWithoutProperties(_this$props2, [\"text\", \"onCopy\", \"options\", \"children\"]);\n\n      var elem = _react[\"default\"].Children.only(children);\n\n      return _react[\"default\"].cloneElement(elem, _objectSpread({}, props, {\n        onClick: this.onClick\n      }));\n    }\n  }]);\n\n  return CopyToClipboard;\n}(_react[\"default\"].PureComponent);\n\nexports.CopyToClipboard = CopyToClipboard;\n\n_defineProperty(CopyToClipboard, \"defaultProps\", {\n  onCopy: undefined,\n  options: undefined\n});","\"use strict\";\n\nvar deselectCurrent = require(\"toggle-selection\");\n\nvar clipboardToIE11Formatting = {\n  \"text/plain\": \"Text\",\n  \"text/html\": \"Url\",\n  \"default\": \"Text\"\n};\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"⌘\" : \"Ctrl\") + \"+C\";\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n      message,\n      reselectPrevious,\n      range,\n      selection,\n      mark,\n      success = false;\n\n  if (!options) {\n    options = {};\n  }\n\n  debug = options.debug || false;\n\n  try {\n    reselectPrevious = deselectCurrent();\n    range = document.createRange();\n    selection = document.getSelection();\n    mark = document.createElement(\"span\");\n    mark.textContent = text; // reset user styles for span element\n\n    mark.style.all = \"unset\"; // prevents scrolling to the end of the page\n\n    mark.style.position = \"fixed\";\n    mark.style.top = 0;\n    mark.style.clip = \"rect(0, 0, 0, 0)\"; // used to preserve spaces and line breaks\n\n    mark.style.whiteSpace = \"pre\"; // do not inherit user-select (it may be `none`)\n\n    mark.style.webkitUserSelect = \"text\";\n    mark.style.MozUserSelect = \"text\";\n    mark.style.msUserSelect = \"text\";\n    mark.style.userSelect = \"text\";\n    mark.addEventListener(\"copy\", function (e) {\n      e.stopPropagation();\n\n      if (options.format) {\n        e.preventDefault();\n\n        if (typeof e.clipboardData === \"undefined\") {\n          // IE 11\n          debug && console.warn(\"unable to use e.clipboardData\");\n          debug && console.warn(\"trying IE specific stuff\");\n          window.clipboardData.clearData();\n          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting[\"default\"];\n          window.clipboardData.setData(format, text);\n        } else {\n          // all other browsers\n          e.clipboardData.clearData();\n          e.clipboardData.setData(options.format, text);\n        }\n      }\n\n      if (options.onCopy) {\n        e.preventDefault();\n        options.onCopy(e.clipboardData);\n      }\n    });\n    document.body.appendChild(mark);\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n    var successful = document.execCommand(\"copy\");\n\n    if (!successful) {\n      throw new Error(\"copy command was unsuccessful\");\n    }\n\n    success = true;\n  } catch (err) {\n    debug && console.error(\"unable to copy using execCommand: \", err);\n    debug && console.warn(\"trying IE specific stuff\");\n\n    try {\n      window.clipboardData.setData(options.format || \"text\", text);\n      options.onCopy && options.onCopy(window.clipboardData);\n      success = true;\n    } catch (err) {\n      debug && console.error(\"unable to copy using clipboardData: \", err);\n      debug && console.error(\"falling back to prompt\");\n      message = format(\"message\" in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == \"function\") {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;","module.exports = function () {\n  var selection = document.getSelection();\n\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n\n  var active = document.activeElement;\n  var ranges = [];\n\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) {\n    // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' && selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function (range) {\n        selection.addRange(range);\n      });\n    }\n\n    active && active.focus();\n  };\n};","import React, { Component } from \"react\";\r\nimport {\r\n   TabContent,\r\n   TabPane,\r\n   Nav,\r\n   NavItem,\r\n   NavLink,\r\n   Card,\r\n   Button,\r\n   CardTitle,\r\n   CardText,\r\n   Row,\r\n   Col\r\n} from \"reactstrap\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Tabs extends Component {\r\n   state = {\r\n      activeTab: \"1\"\r\n   };\r\n\r\n   toggle = tab => {\r\n      if (this.state.activeTab !== tab) {\r\n         this.setState({\r\n            activeTab: tab\r\n         });\r\n      }\r\n   };\r\n   render() {\r\n      return (\r\n         <div>\r\n            <Nav tabs>\r\n               <NavItem>\r\n                  <NavLink\r\n                     className={classnames({\r\n                        active: this.state.activeTab === \"1\"\r\n                     })}\r\n                     onClick={() => {\r\n                        this.toggle(\"1\");\r\n                     }}\r\n                  >\r\n                     Demo Content\r\n                  </NavLink>\r\n               </NavItem>\r\n               <NavItem>\r\n                  <NavLink\r\n                     className={classnames({\r\n                        active: this.state.activeTab === \"2\"\r\n                     })}\r\n                     onClick={() => {\r\n                        this.toggle(\"2\");\r\n                     }}\r\n                  >\r\n                     Example Content\r\n                  </NavLink>\r\n               </NavItem>\r\n               <NavItem>\r\n                  <NavLink\r\n                     className={classnames({\r\n                        active: this.state.activeTab === \"3\"\r\n                     })}\r\n                     onClick={() => {\r\n                        this.toggle(\"3\");\r\n                     }}\r\n                  >\r\n                     Tab Content\r\n                  </NavLink>\r\n               </NavItem>\r\n            </Nav>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n               <TabPane tabId=\"1\">\r\n                  <Row>\r\n                     <Col sm=\"12\">\r\n                        <h4>Tab 1 Contents</h4>\r\n                        <p>Lemon drops pastry chocolate. Jujubes sweet roll tootsie roll. Oat cake donut bonbon chocolate croissant candy candy brownie. Wafer jelly beans jelly ice cream caramels. Cookie bonbon lemon drops cheesecake brownie cake macaroon sweet. Toffee pie icing candy ice cream croissant caramels jelly. Muffin jelly gummies icing cheesecake chocolate cake. Sweet chupa chups croissant pudding sesame snaps soufflé. Marzipan cotton candy jujubes halvah cheesecake. Cupcake wafer gummies croissant candy brownie jelly. Sweet wafer chocolate halvah.</p>\r\n                     </Col>\r\n                  </Row>\r\n               </TabPane>\r\n               <TabPane tabId=\"2\">\r\n                  <Row>\r\n                     <Col sm=\"6\">\r\n                        <Card body>\r\n                           <CardTitle>Special Title Treatment</CardTitle>\r\n                           <CardText>\r\n                              With supporting text below as a natural lead-in to\r\n                              additional content.\r\n                           </CardText>\r\n                           <Button className=\"btn btn-success\">Go somewhere</Button>\r\n                        </Card>\r\n                     </Col>\r\n                     <Col sm=\"6\">\r\n                        <Card body>\r\n                           <CardTitle>Special Title Treatment</CardTitle>\r\n                           <CardText>\r\n                              With supporting text below as a natural lead-in to\r\n                              additional content.\r\n                           </CardText>\r\n                           <Button className=\"btn btn-danger\">Go somewhere</Button>\r\n                        </Card>\r\n                     </Col>\r\n                  </Row>\r\n               </TabPane>\r\n               <TabPane tabId=\"3\">\r\n                  <Row>\r\n                     <Col sm=\"12\">\r\n                        <h4>Tab 3 Contents</h4>\r\n                        <p>Lemon drops pastry chocolate. Jujubes sweet roll tootsie roll. Oat cake donut bonbon chocolate croissant candy candy brownie. Wafer jelly beans jelly ice cream caramels. Cookie bonbon lemon drops cheesecake brownie cake macaroon sweet. Toffee pie icing candy ice cream croissant caramels jelly. Muffin jelly gummies icing cheesecake chocolate cake. Sweet chupa chups croissant pudding sesame snaps soufflé. Marzipan cotton candy jujubes halvah cheesecake. Cupcake wafer gummies croissant candy brownie jelly. Sweet wafer chocolate halvah.</p>\r\n                     </Col>\r\n                  </Row>\r\n               </TabPane>\r\n            </TabContent>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Tabs;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n   TabContent,\r\n   TabPane,\r\n   Nav,\r\n   NavItem,\r\n   NavLink,\r\n   Card,\r\n   Button,\r\n   CardTitle,\r\n   CardText,\r\n   Row,\r\n   Col\r\n} from \"reactstrap\";\r\nimport classnames from \"classnames\";\r\n\r\nclass TabsJustified extends Component {\r\n   state = {\r\n      activeTab: \"1\"\r\n   };\r\n\r\n   toggle = tab => {\r\n      if (this.state.activeTab !== tab) {\r\n         this.setState({\r\n            activeTab: tab\r\n         });\r\n      }\r\n   };\r\n   render() {\r\n      return (\r\n         <div>\r\n            <Nav tabs className=\"nav-justified\">\r\n               <NavItem>\r\n                  <NavLink\r\n                     className={classnames({\r\n                        active: this.state.activeTab === \"1\"\r\n                     })}\r\n                     onClick={() => {\r\n                        this.toggle(\"1\");\r\n                     }}\r\n                  >\r\n                     Demo Content\r\n                  </NavLink>\r\n               </NavItem>\r\n               <NavItem>\r\n                  <NavLink\r\n                     className={classnames({\r\n                        active: this.state.activeTab === \"2\"\r\n                     })}\r\n                     onClick={() => {\r\n                        this.toggle(\"2\");\r\n                     }}\r\n                  >\r\n                     Example Content\r\n                  </NavLink>\r\n               </NavItem>\r\n               <NavItem>\r\n                  <NavLink\r\n                     className={classnames({\r\n                        active: this.state.activeTab === \"3\"\r\n                     })}\r\n                     onClick={() => {\r\n                        this.toggle(\"3\");\r\n                     }}\r\n                  >\r\n                     Tab Content\r\n                  </NavLink>\r\n               </NavItem>\r\n            </Nav>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n               <TabPane tabId=\"1\">\r\n                  <Row>\r\n                     <Col sm=\"12\">\r\n                        <h4>Tab 1 Contents</h4>\r\n                        <p>Lemon drops pastry chocolate. Jujubes sweet roll tootsie roll. Oat cake donut bonbon chocolate croissant candy candy brownie. Wafer jelly beans jelly ice cream caramels. Cookie bonbon lemon drops cheesecake brownie cake macaroon sweet. Toffee pie icing candy ice cream croissant caramels jelly. Muffin jelly gummies icing cheesecake chocolate cake. Sweet chupa chups croissant pudding sesame snaps soufflé. Marzipan cotton candy jujubes halvah cheesecake. Cupcake wafer gummies croissant candy brownie jelly. Sweet wafer chocolate halvah.</p>\r\n                     </Col>\r\n                  </Row>\r\n               </TabPane>\r\n               <TabPane tabId=\"2\">\r\n                  <Row>\r\n                     <Col sm=\"6\">\r\n                        <Card body>\r\n                           <CardTitle>Special Title Treatment</CardTitle>\r\n                           <CardText>\r\n                              With supporting text below as a natural lead-in to\r\n                              additional content.\r\n                           </CardText>\r\n                           <Button className=\"btn btn-success\">Go somewhere</Button>\r\n                        </Card>\r\n                     </Col>\r\n                     <Col sm=\"6\">\r\n                        <Card body>\r\n                           <CardTitle>Special Title Treatment</CardTitle>\r\n                           <CardText>\r\n                              With supporting text below as a natural lead-in to\r\n                              additional content.\r\n                           </CardText>\r\n                           <Button className=\"btn btn-danger\">Go somewhere</Button>\r\n                        </Card>\r\n                     </Col>\r\n                  </Row>\r\n               </TabPane>\r\n               <TabPane tabId=\"3\">\r\n                  <Row>\r\n                     <Col sm=\"12\">\r\n                        <h4>Tab 3 Contents</h4>\r\n                        <p>Lemon drops pastry chocolate. Jujubes sweet roll tootsie roll. Oat cake donut bonbon chocolate croissant candy candy brownie. Wafer jelly beans jelly ice cream caramels. Cookie bonbon lemon drops cheesecake brownie cake macaroon sweet. Toffee pie icing candy ice cream croissant caramels jelly. Muffin jelly gummies icing cheesecake chocolate cake. Sweet chupa chups croissant pudding sesame snaps soufflé. Marzipan cotton candy jujubes halvah cheesecake. Cupcake wafer gummies croissant candy brownie jelly. Sweet wafer chocolate halvah.</p>\r\n                     </Col>\r\n                  </Row>\r\n               </TabPane>\r\n            </TabContent>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default TabsJustified;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n   TabContent,\r\n   TabPane,\r\n   Nav,\r\n   NavItem,\r\n   NavLink,\r\n   Card,\r\n   Button,\r\n   CardTitle,\r\n   CardText,\r\n   Row,\r\n   Col\r\n} from \"reactstrap\";\r\nimport classnames from \"classnames\";\r\n\r\nclass TabsBorderBottom extends Component {\r\n   state = {\r\n      activeTab: \"1\"\r\n   };\r\n\r\n   toggle = tab => {\r\n      if (this.state.activeTab !== tab) {\r\n         this.setState({\r\n            activeTab: tab\r\n         });\r\n      }\r\n   };\r\n   render() {\r\n      return (\r\n         <div>\r\n            <Nav tabs className=\"nav-border-bottom\">\r\n               <NavItem>\r\n                  <NavLink\r\n                     className={classnames({\r\n                        active: this.state.activeTab === \"1\"\r\n                     })}\r\n                     onClick={() => {\r\n                        this.toggle(\"1\");\r\n                     }}\r\n                  >\r\n                     Demo Content\r\n                  </NavLink>\r\n               </NavItem>\r\n               <NavItem>\r\n                  <NavLink\r\n                     className={classnames({\r\n                        active: this.state.activeTab === \"2\"\r\n                     })}\r\n                     onClick={() => {\r\n                        this.toggle(\"2\");\r\n                     }}\r\n                  >\r\n                     Example Content\r\n                  </NavLink>\r\n               </NavItem>\r\n               <NavItem>\r\n                  <NavLink\r\n                     className={classnames({\r\n                        active: this.state.activeTab === \"3\"\r\n                     })}\r\n                     onClick={() => {\r\n                        this.toggle(\"3\");\r\n                     }}\r\n                  >\r\n                     Tab Content\r\n                  </NavLink>\r\n               </NavItem>\r\n            </Nav>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n               <TabPane tabId=\"1\">\r\n                  <Row>\r\n                     <Col sm=\"12\">\r\n                        <h4>Tab 1 Contents</h4>\r\n                        <p>Lemon drops pastry chocolate. Jujubes sweet roll tootsie roll. Oat cake donut bonbon chocolate croissant candy candy brownie. Wafer jelly beans jelly ice cream caramels. Cookie bonbon lemon drops cheesecake brownie cake macaroon sweet. Toffee pie icing candy ice cream croissant caramels jelly. Muffin jelly gummies icing cheesecake chocolate cake. Sweet chupa chups croissant pudding sesame snaps soufflé. Marzipan cotton candy jujubes halvah cheesecake. Cupcake wafer gummies croissant candy brownie jelly. Sweet wafer chocolate halvah.</p>\r\n                     </Col>\r\n                  </Row>\r\n               </TabPane>\r\n               <TabPane tabId=\"2\">\r\n                  <Row>\r\n                     <Col sm=\"6\">\r\n                        <Card body>\r\n                           <CardTitle>Special Title Treatment</CardTitle>\r\n                           <CardText>\r\n                              With supporting text below as a natural lead-in to\r\n                              additional content.\r\n                           </CardText>\r\n                           <Button className=\"btn btn-success\">Go somewhere</Button>\r\n                        </Card>\r\n                     </Col>\r\n                     <Col sm=\"6\">\r\n                        <Card body>\r\n                           <CardTitle>Special Title Treatment</CardTitle>\r\n                           <CardText>\r\n                              With supporting text below as a natural lead-in to\r\n                              additional content.\r\n                           </CardText>\r\n                           <Button className=\"btn btn-danger\">Go somewhere</Button>\r\n                        </Card>\r\n                     </Col>\r\n                  </Row>\r\n               </TabPane>\r\n               <TabPane tabId=\"3\">\r\n                  <Row>\r\n                     <Col sm=\"12\">\r\n                        <h4>Tab 3 Contents</h4>\r\n                        <p>Lemon drops pastry chocolate. Jujubes sweet roll tootsie roll. Oat cake donut bonbon chocolate croissant candy candy brownie. Wafer jelly beans jelly ice cream caramels. Cookie bonbon lemon drops cheesecake brownie cake macaroon sweet. Toffee pie icing candy ice cream croissant caramels jelly. Muffin jelly gummies icing cheesecake chocolate cake. Sweet chupa chups croissant pudding sesame snaps soufflé. Marzipan cotton candy jujubes halvah cheesecake. Cupcake wafer gummies croissant candy brownie jelly. Sweet wafer chocolate halvah.</p>\r\n                     </Col>\r\n                  </Row>\r\n               </TabPane>\r\n            </TabContent>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default TabsBorderBottom;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n   TabContent,\r\n   TabPane,\r\n   Nav,\r\n   NavItem,\r\n   NavLink,\r\n   Card,\r\n   Button,\r\n   CardTitle,\r\n   CardText,\r\n   Row,\r\n   Col\r\n} from \"reactstrap\";\r\nimport classnames from \"classnames\";\r\n\r\nclass TabsVertical extends Component {\r\n   state = {\r\n      activeTab: \"1\"\r\n   };\r\n\r\n   toggle = tab => {\r\n      if (this.state.activeTab !== tab) {\r\n         this.setState({\r\n            activeTab: tab\r\n         });\r\n      }\r\n   };\r\n   render() {\r\n      return (\r\n         <div className=\"tabs-vertical\">\r\n            <Nav tabs>\r\n               <NavItem>\r\n                  <NavLink\r\n                     className={classnames({\r\n                        active: this.state.activeTab === \"1\"\r\n                     })}\r\n                     onClick={() => {\r\n                        this.toggle(\"1\");\r\n                     }}\r\n                  >\r\n                     Demo Content\r\n                  </NavLink>\r\n               </NavItem>\r\n               <NavItem>\r\n                  <NavLink\r\n                     className={classnames({\r\n                        active: this.state.activeTab === \"2\"\r\n                     })}\r\n                     onClick={() => {\r\n                        this.toggle(\"2\");\r\n                     }}\r\n                  >\r\n                     Example Content\r\n                  </NavLink>\r\n               </NavItem>\r\n               <NavItem>\r\n                  <NavLink\r\n                     className={classnames({\r\n                        active: this.state.activeTab === \"3\"\r\n                     })}\r\n                     onClick={() => {\r\n                        this.toggle(\"3\");\r\n                     }}\r\n                  >\r\n                     Tab Content\r\n                  </NavLink>\r\n               </NavItem>\r\n            </Nav>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n               <TabPane tabId=\"1\">\r\n                  <Row>\r\n                     <Col sm=\"12\">\r\n                        <h4>Tab 1 Contents</h4>\r\n                        <p>Lemon drops pastry chocolate. Jujubes sweet roll tootsie roll. Oat cake donut bonbon chocolate croissant candy candy brownie. Wafer jelly beans jelly ice cream caramels. Cookie bonbon lemon drops cheesecake brownie cake macaroon sweet. Toffee pie icing candy ice cream croissant caramels jelly. Muffin jelly gummies icing cheesecake chocolate cake. Sweet chupa chups croissant pudding sesame snaps soufflé. Marzipan cotton candy jujubes halvah cheesecake. Cupcake wafer gummies croissant candy brownie jelly. Sweet wafer chocolate halvah.</p>\r\n                     </Col>\r\n                  </Row>\r\n               </TabPane>\r\n               <TabPane tabId=\"2\">\r\n                  <Row>\r\n                     <Col sm=\"6\">\r\n                        <Card body>\r\n                           <CardTitle>Special Title Treatment</CardTitle>\r\n                           <CardText>\r\n                              With supporting text below as a natural lead-in to\r\n                              additional content.\r\n                           </CardText>\r\n                           <Button className=\"btn btn-success\">Go somewhere</Button>\r\n                        </Card>\r\n                     </Col>\r\n                     <Col sm=\"6\">\r\n                        <Card body>\r\n                           <CardTitle>Special Title Treatment</CardTitle>\r\n                           <CardText>\r\n                              With supporting text below as a natural lead-in to\r\n                              additional content.\r\n                           </CardText>\r\n                           <Button className=\"btn btn-danger\">Go somewhere</Button>\r\n                        </Card>\r\n                     </Col>\r\n                  </Row>\r\n               </TabPane>\r\n               <TabPane tabId=\"3\">\r\n                  <Row>\r\n                     <Col sm=\"12\">\r\n                        <h4>Tab 3 Contents</h4>\r\n                        <p>Lemon drops pastry chocolate. Jujubes sweet roll tootsie roll. Oat cake donut bonbon chocolate croissant candy candy brownie. Wafer jelly beans jelly ice cream caramels. Cookie bonbon lemon drops cheesecake brownie cake macaroon sweet. Toffee pie icing candy ice cream croissant caramels jelly. Muffin jelly gummies icing cheesecake chocolate cake. Sweet chupa chups croissant pudding sesame snaps soufflé. Marzipan cotton candy jujubes halvah cheesecake. Cupcake wafer gummies croissant candy brownie jelly. Sweet wafer chocolate halvah.</p>\r\n                     </Col>\r\n                  </Row>\r\n               </TabPane>\r\n            </TabContent>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default TabsVertical;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n   TabContent,\r\n   TabPane,\r\n   Nav,\r\n   NavItem,\r\n   NavLink,\r\n   Card,\r\n   Button,\r\n   CardTitle,\r\n   CardText,\r\n   Row,\r\n   Col\r\n} from \"reactstrap\";\r\nimport classnames from \"classnames\";\r\n\r\nclass TabsPills extends Component {\r\n   state = {\r\n      activeTab: \"1\"\r\n   };\r\n\r\n   toggle = tab => {\r\n      if (this.state.activeTab !== tab) {\r\n         this.setState({\r\n            activeTab: tab\r\n         });\r\n      }\r\n   };\r\n   render() {\r\n      return (\r\n         <div>\r\n            <Nav pills>\r\n               <NavItem>\r\n                  <NavLink\r\n                     className={classnames({\r\n                        active: this.state.activeTab === \"1\"\r\n                     })}\r\n                     onClick={() => {\r\n                        this.toggle(\"1\");\r\n                     }}\r\n                  >\r\n                     Pill1\r\n                  </NavLink>\r\n               </NavItem>\r\n               <NavItem>\r\n                  <NavLink\r\n                     className={classnames({\r\n                        active: this.state.activeTab === \"2\"\r\n                     })}\r\n                     onClick={() => {\r\n                        this.toggle(\"2\");\r\n                     }}\r\n                  >\r\n                     Pill2\r\n                  </NavLink>\r\n               </NavItem>\r\n            </Nav>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n               <TabPane tabId=\"1\">\r\n                  <Row>\r\n                     <Col sm=\"12\">\r\n                        <h4>Pill 1 Contents</h4>\r\n                        <p>Lemon drops pastry chocolate. Jujubes sweet roll tootsie roll. Oat cake donut bonbon chocolate croissant candy candy brownie. Wafer jelly beans jelly ice cream caramels. Cookie bonbon lemon drops cheesecake brownie cake macaroon sweet. Toffee pie icing candy ice cream croissant caramels jelly. Muffin jelly gummies icing cheesecake chocolate cake. Sweet chupa chups croissant pudding sesame snaps soufflé. Marzipan cotton candy jujubes halvah cheesecake. Cupcake wafer gummies croissant candy brownie jelly. Sweet wafer chocolate halvah. Danish sweet roll cheesecake candy canes marzipan liquorice. Sugar plum halvah lemon drops donut sesame snaps lollipop oat cake. Cake dessert topping tiramisu jelly beans. Gummies oat cake sugar plum cookie carrot cake halvah powder sesame snaps. Bear claw gummi bears marzipan powder pudding lemon drops cotton candy sweet roll chupa chups. Marzipan tootsie roll tart lemon drops gummies. Cheesecake wafer carrot cake chocolate jelly beans candy liquorice fruitcake pastry. Gummi bears cheesecake macaroon jelly beans wafer cookie. Gingerbread chocolate bar icing. Candy canes donut icing macaroon cupcake. Ice cream ice cream cake pudding gummi bears.</p>\r\n                     </Col>\r\n                  </Row>\r\n               </TabPane>\r\n               <TabPane tabId=\"2\">\r\n                  <Row>\r\n                     <Col sm=\"6\">\r\n                        <Card body>\r\n                           <CardTitle>Special Title Treatment</CardTitle>\r\n                           <CardText>\r\n                              With supporting text below as a natural lead-in to\r\n                              additional content.\r\n                           </CardText>\r\n                           <Button className=\"btn btn-success\">Go somewhere</Button>\r\n                        </Card>\r\n                     </Col>\r\n                     <Col sm=\"6\">\r\n                        <Card body>\r\n                           <CardTitle>Special Title Treatment</CardTitle>\r\n                           <CardText>\r\n                              With supporting text below as a natural lead-in to\r\n                              additional content.\r\n                           </CardText>\r\n                           <Button className=\"btn btn-danger\">Go somewhere</Button>\r\n                        </Card>\r\n                     </Col>\r\n                  </Row>\r\n               </TabPane>\r\n            </TabContent>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default TabsPills;\r\n","const TabsExampleSource = `import React, { Component } from \"react\";\r\nimport {\r\n   TabContent,\r\n   TabPane,\r\n   Nav,\r\n   NavItem,\r\n   NavLink,\r\n   Card,\r\n   Button,\r\n   CardTitle,\r\n   CardText,\r\n   Row,\r\n   Col\r\n} from \"reactstrap\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Tabs extends Component {\r\n   state = {\r\n      activeTab: \"1\"\r\n   };\r\n\r\n   toggle = tab => {\r\n      if (this.state.activeTab !== tab) {\r\n         this.setState({\r\n            activeTab: tab\r\n         });\r\n      }\r\n   };\r\n   render() {\r\n      return (\r\n         <div>\r\n            <Nav tabs>\r\n               <NavItem>\r\n                  <NavLink\r\n                     className={classnames({\r\n                        active: this.state.activeTab === \"1\"\r\n                     })}\r\n                     onClick={() => {\r\n                        this.toggle(\"1\");\r\n                     }}\r\n                  >\r\n                     Tab1\r\n                  </NavLink>\r\n               </NavItem>\r\n               <NavItem>\r\n                  <NavLink\r\n                     className={classnames({\r\n                        active: this.state.activeTab === \"2\"\r\n                     })}\r\n                     onClick={() => {\r\n                        this.toggle(\"2\");\r\n                     }}\r\n                  >\r\n                     Tab2\r\n                  </NavLink>\r\n               </NavItem>\r\n            </Nav>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n               <TabPane tabId=\"1\">\r\n                  <Row>\r\n                     <Col sm=\"12\">\r\n                        <h4>Tab 1 Contents</h4>\r\n                        <p>Lemon drops pastry chocolate. Jujubes sweet roll tootsie roll. Oat cake donut bonbon chocolate croissant candy candy brownie. Wafer jelly beans jelly ice cream caramels. Cookie bonbon lemon drops cheesecake brownie cake macaroon sweet. Toffee pie icing candy ice cream croissant caramels jelly. Muffin jelly gummies icing cheesecake chocolate cake. Sweet chupa chups croissant pudding sesame snaps soufflé. Marzipan cotton candy jujubes halvah cheesecake. Cupcake wafer gummies croissant candy brownie jelly. Sweet wafer chocolate halvah. Danish sweet roll cheesecake candy canes marzipan liquorice. Sugar plum halvah lemon drops donut sesame snaps lollipop oat cake. Cake dessert topping tiramisu jelly beans. Gummies oat cake sugar plum cookie carrot cake halvah powder sesame snaps. Bear claw gummi bears marzipan powder pudding lemon drops cotton candy sweet roll chupa chups. Marzipan tootsie roll tart lemon drops gummies. Cheesecake wafer carrot cake chocolate jelly beans candy liquorice fruitcake pastry. Gummi bears cheesecake macaroon jelly beans wafer cookie. Gingerbread chocolate bar icing. Candy canes donut icing macaroon cupcake. Ice cream ice cream cake pudding gummi bears.</p>\r\n                     </Col>\r\n                  </Row>\r\n               </TabPane>\r\n               <TabPane tabId=\"2\">\r\n                  <Row>\r\n                     <Col sm=\"6\">\r\n                        <Card body>\r\n                           <CardTitle>Special Title Treatment</CardTitle>\r\n                           <CardText>\r\n                              With supporting text below as a natural lead-in to\r\n                              additional content.\r\n                           </CardText>\r\n                           <Button className=\"btn btn-success\">Go somewhere</Button>\r\n                        </Card>\r\n                     </Col>\r\n                     <Col sm=\"6\">\r\n                        <Card body>\r\n                           <CardTitle>Special Title Treatment</CardTitle>\r\n                           <CardText>\r\n                              With supporting text below as a natural lead-in to\r\n                              additional content.\r\n                           </CardText>\r\n                           <Button className=\"btn btn-danger\">Go somewhere</Button>\r\n                        </Card>\r\n                     </Col>\r\n                  </Row>\r\n               </TabPane>\r\n            </TabContent>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Tabs;`;\r\n\r\nexport default TabsExampleSource;\r\n","// import React, { Fragment } from \"react\";\r\n// import { Card, CardBody, CardTitle, Row, Col } from \"reactstrap\";\r\n\r\n// //Prism\r\n// // eslint-disable-next-line\r\n// import Prism from \"prismjs\";  //Include JS\r\n// import \"prismjs/themes/prism-okaidia.css\"; //Include CSS\r\n// import { PrismCode } from \"react-prism\"; //Prism Component\r\n\r\n// // import classnames from \"classnames\";\r\n// import CustomTabs from \"../../../components/tabs/customTabs\";\r\n// import ContentHeader from \"../../../components/contentHead/contentHeader\";\r\n// import ContentSubHeader from \"../../../components/contentHead/contentSubHeader\";\r\n\r\n// // Import examples\r\n// import TabsExample from \"./examples/tabs\";\r\n// import TabsJustified from \"./examples/tabsJustified\";\r\n// import TabsBorderBottom from \"./examples/tabsBorderBottom\";\r\n// import TabsVertical from \"./examples/tabsVertical\";\r\n// import TabsPills from \"./examples/tabsPills\";\r\n\r\n// // Import Example Source Code\r\n// import TabsExampleSource from \"./exampleSource/tabs\";\r\n// import TabsJustifiedSource from \"./exampleSource/tabsJustified\";\r\n// import TabsBorderBottomSource from \"./exampleSource/tabsBorderBottom\";\r\n// import TabsVerticalSource from \"./exampleSource/tabsVertical\";\r\n// import TabsPillsSource from \"./exampleSource/tabsPills\";\r\n\r\n// class Tabs extends React.Component {\r\n   \r\n//    render() {\r\n//       return (\r\n//          <Fragment>\r\n//             <ContentHeader>Tabs</ContentHeader>\r\n//             <ContentSubHeader>Tabs React Component.</ContentSubHeader>\r\n//             <Row>\r\n//                <Col md=\"12\" lg=\"6\">\r\n//                   <Card>\r\n//                      <CardBody>\r\n//                         <CardTitle>Tabs</CardTitle>\r\n//                         <CustomTabs\r\n//                            TabContent1={<TabsExample />}\r\n//                            TabContent2={\r\n//                               <PrismCode\r\n//                                  component=\"pre\"\r\n//                                  className=\"language-javascript\"\r\n//                               >\r\n//                                  {TabsExampleSource}\r\n//                               </PrismCode>\r\n//                            }\r\n//                         />\r\n//                      </CardBody>\r\n//                   </Card>\r\n//                </Col>\r\n//                <Col md=\"12\" lg=\"6\">\r\n//                   <Card>\r\n//                      <CardBody>\r\n//                         <CardTitle>Justified Tabs</CardTitle>\r\n//                         <CustomTabs\r\n//                            TabContent1={<TabsJustified />}\r\n//                            TabContent2={\r\n//                               <PrismCode\r\n//                                  component=\"pre\"\r\n//                                  className=\"language-javascript\"\r\n//                               >\r\n//                                  {TabsJustifiedSource}\r\n//                               </PrismCode>\r\n//                            }\r\n//                         />\r\n//                      </CardBody>\r\n//                   </Card>\r\n//                </Col>\r\n//             </Row>\r\n\r\n//             <Row>\r\n//                <Col md=\"12\" lg=\"6\">\r\n//                   <Card>\r\n//                      <CardBody>\r\n//                         <CardTitle>Border Bottom Tabs</CardTitle>\r\n//                         <CustomTabs\r\n//                            TabContent1={<TabsBorderBottom />}\r\n//                            TabContent2={\r\n//                               <PrismCode\r\n//                                  component=\"pre\"\r\n//                                  className=\"language-javascript\"\r\n//                               >\r\n//                                  {TabsBorderBottomSource}\r\n//                               </PrismCode>\r\n//                            }\r\n//                         />\r\n//                      </CardBody>\r\n//                   </Card>\r\n//                </Col>\r\n//                <Col md=\"12\" lg=\"6\">\r\n//                   <Card>\r\n//                      <CardBody>\r\n//                         <CardTitle>Vertical Tabs</CardTitle>\r\n//                         <CustomTabs\r\n//                            TabContent1={<TabsVertical />}\r\n//                            TabContent2={\r\n//                               <PrismCode\r\n//                                  component=\"pre\"\r\n//                                  className=\"language-javascript\"\r\n//                               >\r\n//                                  {TabsVerticalSource}\r\n//                               </PrismCode>\r\n//                            }\r\n//                         />\r\n//                      </CardBody>\r\n//                   </Card>\r\n//                </Col>\r\n//             </Row>\r\n\r\n//             <Row>\r\n//                <Col sm=\"12\">\r\n//                   <Card>\r\n//                      <CardBody>\r\n//                         <CardTitle>Pills</CardTitle>\r\n//                         <CustomTabs\r\n//                            TabContent1={<TabsPills />}\r\n//                            TabContent2={\r\n//                               <PrismCode\r\n//                                  component=\"pre\"\r\n//                                  className=\"language-javascript\"\r\n//                               >\r\n//                                  {TabsPillsSource}\r\n//                               </PrismCode>\r\n//                            }\r\n//                         />\r\n//                      </CardBody>\r\n//                   </Card>\r\n//                </Col>\r\n//             </Row>\r\n//          </Fragment>\r\n//       );\r\n//    }\r\n// }\r\n\r\n// export default Tabs;\r\n\r\nimport React, { Fragment } from \"react\";\r\nimport { Card, CardBody, CardTitle, Row, Col } from \"reactstrap\";\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\n//Prism\r\n// eslint-disable-next-line\r\nimport Prism from \"prismjs\";  //Include JS\r\nimport \"prismjs/themes/prism-okaidia.css\"; //Include CSS\r\nimport { PrismCode } from \"react-prism\"; //Prism Component\r\n\r\n// import classnames from \"classnames\";\r\nimport CustomTabs from \"../../../components/tabs/customTabs\";\r\nimport ContentHeader from \"../../../components/contentHead/contentHeader\";\r\nimport ContentSubHeader from \"../../../components/contentHead/contentSubHeader\";\r\n\r\n// Import examples\r\nimport TabsExample from \"./examples/tabs\";\r\nimport TabsJustified from \"./examples/tabsJustified\";\r\nimport TabsBorderBottom from \"./examples/tabsBorderBottom\";\r\nimport TabsVertical from \"./examples/tabsVertical\";\r\nimport TabsPills from \"./examples/tabsPills\";\r\n\r\n// Import Example Source Code\r\nimport TabsExampleSource from \"./exampleSource/tabs\";\r\nimport TabsJustifiedSource from \"./exampleSource/tabsJustified\";\r\nimport TabsBorderBottomSource from \"./exampleSource/tabsBorderBottom\";\r\nimport TabsVerticalSource from \"./exampleSource/tabsVertical\";\r\nimport TabsPillsSource from \"./exampleSource/tabsPills\";\r\n\r\nclass Tabs extends React.Component {\r\n   \r\n   render() {\r\n      return (\r\n         <Fragment>\r\n            <Row>\r\n               <Col md=\"12\" lg=\"12\">\r\n                  <Card>\r\n                     <CardBody>\r\n                        <CardTitle>Tabs</CardTitle>\r\n                        <Col md=\"12\" lg=\"6\" className=\"leftDiv\">\r\n                           <TabsExample />\r\n                           <div className=\"\">\r\n                              <div className=\"installation\">Installation</div>\r\n                        \r\n                              <Col md=\"12\" className=\"leftDiv\">\r\n                                 <div className=\"installation-steps\">\r\n                                    <div className=\"installation-text\">Download and install the package. Use Node.js v8.0.0 or later.</div>\r\n                                    <div className=\"installation-box\">npm install --save reactstrap react react-dom</div>\r\n                                 </div>\r\n                              </Col>\r\n                           </div>\r\n                        </Col>\r\n                        <Col md=\"12\" lg=\"6\" className=\"rightDiv\">\r\n                        <CopyToClipboard text={TabsExampleSource}\r\n                              onCopy={() => this.setState({copied: true})}>\r\n                              <span className=\"copy-code\">Copy Code</span>\r\n                           </CopyToClipboard>\r\n                              <PrismCode\r\n                                 component=\"pre\"\r\n                                 className=\"language-javascript\"\r\n                              >\r\n                                 {TabsExampleSource}\r\n                              </PrismCode>\r\n                           \r\n                        </Col>\r\n                        {/* <CustomTabs\r\n                           \r\n                           TabContent2={\r\n                              <PrismCode\r\n                                 component=\"pre\"\r\n                                 className=\"language-javascript\"\r\n                              >\r\n                                 {TabsExampleSource}\r\n                              </PrismCode>\r\n                           }\r\n                        /> */}\r\n                     </CardBody>\r\n                  </Card>\r\n               </Col>\r\n              \r\n            </Row>\r\n\r\n         </Fragment>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Tabs;\r\n","import React from \"react\";\r\n\r\nconst ContentHeader = props => {\r\n  const {className} = props;\r\n   return (\r\n      <div\r\n         className={`content-header${\r\n            className === undefined ? \"\" : ` ${className}`\r\n         }`}\r\n      >\r\n         {props.children}\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default ContentHeader;\r\n","import React from \"react\";\r\n\r\nconst ContentSubHeader = props => {\r\n   const { className } = props;\r\n   return (\r\n      <div\r\n         className={`content-sub-header${\r\n            className === undefined ? \"\" : ` ${className}`\r\n         }`}\r\n      >\r\n         {props.children}\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default ContentSubHeader;\r\n","import React from \"react\";\r\nimport { Eye, Code } from 'react-feather';\r\nimport {\r\n   TabContent,\r\n   TabPane,\r\n   Nav,\r\n   NavItem,\r\n   NavLink,   \r\n   Row,\r\n   Col\r\n} from \"reactstrap\";\r\nimport classnames from \"classnames\";\r\n\r\nexport default class Example extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n\r\n      this.toggle = this.toggle.bind(this);\r\n      this.state = {\r\n         activeTab: \"1\"\r\n      };\r\n   }\r\n\r\n   toggle(tab) {\r\n      if (this.state.activeTab !== tab) {\r\n         this.setState({\r\n            activeTab: tab\r\n         });\r\n      }\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div className=\"nav-tabs-vc\">\r\n            <Nav tabs>\r\n               <NavItem>\r\n                  <NavLink\r\n                     className={classnames({\r\n                        active: this.state.activeTab === \"1\"\r\n                     })}\r\n                     onClick={() => {\r\n                        this.toggle(\"1\");\r\n                     }}\r\n                  >\r\n                     <Eye size={18} />\r\n                  </NavLink>\r\n               </NavItem>\r\n               <NavItem>\r\n                  <NavLink\r\n                     className={classnames({\r\n                        active: this.state.activeTab === \"2\"\r\n                     })}\r\n                     onClick={() => {\r\n                        this.toggle(\"2\");\r\n                     }}\r\n                  >\r\n                     <Code size={18} />\r\n                  </NavLink>\r\n               </NavItem>\r\n            </Nav>\r\n            \r\n            <TabContent activeTab={this.state.activeTab} className=\"px-0\">\r\n               <TabPane tabId=\"1\">\r\n                  <Row>\r\n                     <Col sm=\"12\">\r\n                        {this.props.TabContent1}\r\n                     </Col>\r\n                  </Row>\r\n               </TabPane>\r\n               <TabPane tabId=\"2\">\r\n                  <Row>\r\n                     <Col sm=\"12\">\r\n                        {this.props.TabContent2}\r\n                     </Col>\r\n                  </Row>\r\n               </TabPane>\r\n            </TabContent>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n"],"sourceRoot":""}