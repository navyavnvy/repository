{"version":3,"sources":["views/calender/calender.js","redux/actions/calenderAction/calenderAction.js"],"names":["ReactBigCalender","momentLocalizer","moment","allViews","Object","keys","Views","map","k","Calender","state","modal","start","Date","end","eventTitle","events","toggleModal","_this","setState","prevState","handleChange","e","target","value","handleStartDateTimeChange","date","_d","handleEndDateTimeChange","handleSubmit","handleAddEvent","props","_this$state","concat","toConsumableArray","title","allDay","_this$state2","handleSlotSelect","slotInfo","calender","this","_this$state3","react_default","a","createElement","react","reactstrap_es","isOpen","toggle","onChange","DateTime_default","defaultValue","startDate","color","onClick","xs","className","href","rel","src","alt","style","height","lib_default","views","step","defaultDate","selectable","onSelectSlot","Component","connect","_ref","type","payload"],"mappings":"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","file":"static/js/18.5c906ec8.chunk.js","sourcesContent":["// import external modules\r\nimport React, { Fragment, Component } from \"react\";\r\nimport {\r\n   Row,\r\n   Col,\r\n   Modal,\r\n   ModalBody,\r\n   ModalFooter,\r\n   Button,\r\n   Input,\r\n   Card,\r\n   CardBody\r\n} from \"reactstrap\";\r\nimport ReactBigCalender from \"react-big-calendar\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport moment from \"moment\";\r\nimport { connect } from \"react-redux\";\r\nimport DateTimePicker from \"react-datetime\";\r\nimport \"react-datetime/css/react-datetime.css\";\r\n\r\nimport { handleAddEvent } from \"../../redux/actions/calenderAction/calenderAction\";\r\n\r\nReactBigCalender.momentLocalizer(moment);\r\nconst allViews = Object.keys(ReactBigCalender.Views).map(\r\n   k => ReactBigCalender.Views[k]\r\n);\r\n\r\nclass Calender extends Component {\r\n   state = {\r\n      modal: false,\r\n      start: new Date(),\r\n      end: new Date(),\r\n      eventTitle: \"Enter Your Title\",\r\n      events: []\r\n   };\r\n\r\n   toggleModal = () => {\r\n      this.setState(prevState => ({\r\n         modal: !prevState.modal\r\n      }));\r\n   };\r\n\r\n   handleChange = e => {\r\n      this.setState({\r\n         eventTitle: e.target.value\r\n      });\r\n   };\r\n\r\n   handleStartDateTimeChange = date => {\r\n      this.setState(prevState => ({\r\n         start: date._d\r\n      }));\r\n   };\r\n\r\n   handleEndDateTimeChange = date => {\r\n      this.setState(prevState => ({\r\n         end: date._d\r\n      }));\r\n   };\r\n\r\n   handleSubmit = () => {\r\n      const { handleAddEvent } = this.props;\r\n\r\n      this.setState(\r\n         prevState => {\r\n            const { start, eventTitle, end, events } = this.state;\r\n            return {\r\n               events: [\r\n                  ...events,\r\n                  {\r\n                     title: eventTitle,\r\n                     allDay: true,\r\n                     start: start,\r\n                     end: end\r\n                  }\r\n               ]\r\n            };\r\n         },\r\n         () => {\r\n            const { start, end, eventTitle, events } = this.state;\r\n            let param = {\r\n               start,\r\n               eventTitle,\r\n               end\r\n            };\r\n            handleAddEvent(param, events);\r\n         }\r\n      );\r\n      this.toggleModal();\r\n   };\r\n\r\n   handleSlotSelect = slotInfo => {\r\n      this.toggleModal();\r\n      this.setState(prevState => ({\r\n         start: slotInfo.start,\r\n         end: slotInfo.end,\r\n         eventTitle: \"Enter Your Title\"\r\n      }));\r\n   };\r\n\r\n   render() {\r\n      const { calender } = this.props;\r\n      const { modal, eventTitle, start, end } = this.state;\r\n      return (\r\n         <Fragment>\r\n            <Modal isOpen={modal} toggle={this.toggleModal}>\r\n               <ModalBody>\r\n                  <label>Event Title</label>\r\n                  <Input value={eventTitle} onChange={this.handleChange} />\r\n                  <Fragment>\r\n                     <div>\r\n                        <label>Start Date</label>\r\n                        <DateTimePicker\r\n                           onChange={this.handleStartDateTimeChange}\r\n                           defaultValue={calender.startDate}\r\n                           value={start}\r\n                        />\r\n                     </div>\r\n                     <div>\r\n                        <label>End Date</label>\r\n                        <DateTimePicker\r\n                           onChange={this.handleEndDateTimeChange}\r\n                           defaultValue={calender.startDate}\r\n                           value={end}\r\n                        />\r\n                     </div>\r\n                  </Fragment>\r\n               </ModalBody>\r\n               <ModalFooter>\r\n                  <Button color=\"secondary\" onClick={this.toggleModal}>\r\n                     Cancel\r\n                  </Button>\r\n                  <Button color=\"success\" onClick={this.handleSubmit}>\r\n                     Submit\r\n                  </Button>\r\n               </ModalFooter>\r\n            </Modal>\r\n            <Row>\r\n               <Col xs=\"12\">\r\n                  <div className=\"content-header\">Calendar</div>\r\n                  <p className=\"content-sub-header\">\r\n                     <a href=\"https://github.com/intljusticemission/react-big-calendar\" target=\"_blank\" rel=\"noopener noreferrer\">React Big Calendar</a> is gcal/outlook like calendar component. This is the most advanced example having various features.\r\n                     This example lists all the events on the calendar with Add new event functionality.\r\n                     <a href=\"https://github.com/intljusticemission/react-big-calendar\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <img src=\"https://img.shields.io/github/stars/intljusticemission/react-big-calendar.svg?style=social\" alt=\"Stars\" />\r\n                        <img src=\"https://img.shields.io/npm/dm/react-big-calendar.svg\" alt=\"Downloads\"/>\r\n                     </a>\r\n                  </p>\r\n               </Col>\r\n            </Row>\r\n\r\n            <Card>\r\n               <CardBody>\r\n                  <div style={{ height: 700 }}>\r\n                     <ReactBigCalender\r\n                        events={calender.events}\r\n                        views={allViews}\r\n                        step={60}\r\n                        defaultDate={new Date()}\r\n                        selectable={true}\r\n                        onSelectSlot={this.handleSlotSelect}\r\n                     />\r\n                  </div>\r\n               </CardBody>\r\n            </Card>\r\n         </Fragment>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   calender: state.calender\r\n});\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   { handleAddEvent }\r\n)(Calender);\r\n","const handleAddEvent = ({ start, end, eventTitle }, events) => {\r\n   return {\r\n      type: 'ADD_EVENT',\r\n      payload: { start, end, eventTitle, events }\r\n   };\r\n};\r\n\r\nexport { handleAddEvent };\r\n"],"sourceRoot":""}