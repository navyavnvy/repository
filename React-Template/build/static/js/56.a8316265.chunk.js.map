{"version":3,"sources":["views/forms/example-source/validform.js","views/forms/validation.js","components/contentHead/contentHeader.js","components/contentHead/contentSubHeader.js"],"names":["ValidFormExampleSource","formSchema","Yup","shape","required","email","number","url","date","minlength","min","maxlength","max","Validation","_this","this","react_default","a","createElement","react","reactstrap_es","className","sm","md","lg","formik_esm","initialValues","validationSchema","onSubmit","values","console","log","_ref","errors","touched","for","name","id","concat","type","react_copy_to_clipboard_lib","text","onCopy","setState","copied","react_prism_lib","component","Component","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","ContentHeader","props","undefined","children","ContentSubHeader"],"mappings":"8NAqFeA,EArFa,klGCmB5B,IAAMC,EAAaC,WAAaC,MAAM,CACnCC,SAAUF,WACNE,SAAS,YACbC,MAAOH,WACHG,MAAM,iBACND,SAAS,YACbE,OAAQJ,WACJE,SAAS,YACbG,IAAKL,WACDK,MACAH,SAAS,YACbI,KAAMN,SACFE,SAAS,YACbK,UAAWP,WACPQ,IAAI,EAAG,cACPN,SAAS,YACbO,UAAWT,WACPU,IAAI,EAAG,aACPR,SAAS,cAGVS,+JACM,IAAAC,EAAAC,KACN,OACGC,EAAAC,EAAAC,cAACC,EAAA,SAAD,KAEGH,EAAAC,EAAAC,cAACE,EAAA,GAAD,CAAKC,UAAU,iBACZL,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKE,GAAG,MACLN,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACGJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACGJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,+BAEAJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKG,GAAG,KAAKC,GAAG,IAAIH,UAAU,WAC3BL,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACMC,cAAe,CACZtB,SAAU,GACVC,MAAO,GACPE,IAAK,GACLD,OAAQ,GACRE,KAAM,GACNC,UAAW,GACXE,UAAW,IAEdgB,iBAAkB1B,EAClB2B,SAAU,SAAAC,GAEPC,QAAQC,IAAIF,KAGd,SAAAG,GAAA,IAAGC,EAAHD,EAAGC,OAAQC,EAAXF,EAAWE,QAAX,OACElB,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACGT,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACGJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOe,IAAI,YAAX,YACAnB,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAOW,KAAK,WAAWC,GAAG,WAAWhB,UAAS,gBAAAiB,OAAkBL,EAAO7B,UAAY8B,EAAQ9B,UAAY,gBACtG6B,EAAO7B,UAAY8B,EAAQ9B,SAAWY,EAAAC,EAAAC,cAAA,OAAKG,UAAU,oBAAoBY,EAAO7B,UAAkB,MAEtGY,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACGJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOe,IAAI,SAAX,SACAnB,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAOc,KAAK,QAAQH,KAAK,QAAQC,GAAG,QAAQhB,UAAS,gBAAAiB,OAAkBL,EAAO5B,OAAS6B,EAAQ7B,OAAS,gBACvG4B,EAAO5B,OAAS6B,EAAQ7B,MAAQW,EAAAC,EAAAC,cAAA,OAAKG,UAAU,oBAAoBY,EAAO5B,OAAe,MAE7FW,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACGJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOe,IAAI,OAAX,eACAnB,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAOW,KAAK,MAAMC,GAAG,MAAMhB,UAAS,gBAAAiB,OAAkBL,EAAO1B,KAAO2B,EAAQ3B,KAAO,gBAClF0B,EAAO1B,KAAO2B,EAAQ3B,IAAMS,EAAAC,EAAAC,cAAA,OAAKG,UAAU,oBAAoBY,EAAO1B,KAAa,MAEvFS,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACGJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOe,IAAI,UAAX,UACAnB,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAOW,KAAK,SAASC,GAAG,SAAShB,UAAS,gBAAAiB,OAAkBL,EAAO3B,QAAU4B,EAAQ5B,QAAU,gBAC9F2B,EAAO3B,QAAU4B,EAAQ5B,OAASU,EAAAC,EAAAC,cAAA,OAAKG,UAAU,oBAAoBY,EAAO3B,QAAgB,MAEhGU,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACGJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOe,IAAI,QAAX,QACAnB,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAOc,KAAK,OAAOH,KAAK,OAAOC,GAAG,OAAOhB,UAAS,gBAAAiB,OAAkBL,EAAOzB,MAAQ0B,EAAQ1B,MAAQ,gBAClGyB,EAAOzB,MAAQ0B,EAAQ1B,KAAOQ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,oBAAoBY,EAAOzB,MAAc,MAE1FQ,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACGJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOe,IAAI,aAAX,qCACAnB,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAOW,KAAK,YAAYC,GAAG,YAAYhB,UAAS,gBAAAiB,OAAkBL,EAAOxB,WAAayB,EAAQzB,WAAa,gBAC1GwB,EAAOxB,WAAayB,EAAQzB,UAAYO,EAAAC,EAAAC,cAAA,OAAKG,UAAU,oBAAoBY,EAAOxB,WAAmB,MAEzGO,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACGJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOe,IAAI,aAAX,qCACAnB,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAOW,KAAK,YAAYC,GAAG,YAAYhB,UAAS,gBAAAiB,OAAkBL,EAAOtB,WAAauB,EAAQvB,WAAa,gBAC1GsB,EAAOtB,WAAauB,EAAQvB,UAAYK,EAAAC,EAAAC,cAAA,OAAKG,UAAU,oBAAoBY,EAAOtB,WAAmB,MAEzGK,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQmB,KAAK,UAAb,aAITvB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,IACZL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBAAf,gBAEAL,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKG,GAAG,KAAKF,UAAU,WACpBL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,sBACZL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,qBAAf,kEACAL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,oBACZL,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,+CACAF,EAAAC,EAAAC,cAAA,iEAMlBF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKG,GAAG,KAAKC,GAAG,IAAIH,UAAU,YACxBL,EAAAC,EAAAC,cAACsB,EAAA,gBAAD,CAAiBC,KAAMzC,EACpB0C,OAAQ,kBAAM5B,EAAK6B,SAAS,CAACC,QAAQ,MACrC5B,EAAAC,EAAAC,cAAA,QAAMG,UAAU,aAAhB,cAEHL,EAAAC,EAAAC,cAAC2B,EAAA,UAAD,CACGC,UAAU,MACVzB,UAAU,uBAETrB,gBA9FT+C,aA2GVlC,6CCnJf,IAAAmC,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAeeI,IAbO,SAAAC,GAAS,IACtBhC,EAAagC,EAAbhC,UACN,OACG6B,EAAAjC,EAAAC,cAAA,OACGG,UAAS,iBAAAiB,YACQgB,IAAdjC,EAA0B,GAA1B,IAAAiB,OAAmCjB,KAGrCgC,EAAME,4CCVhB,IAAAP,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAeeQ,IAbU,SAAAH,GAAS,IACvBhC,EAAcgC,EAAdhC,UACR,OACG6B,EAAAjC,EAAAC,cAAA,OACGG,UAAS,qBAAAiB,YACQgB,IAAdjC,EAA0B,GAA1B,IAAAiB,OAAmCjB,KAGrCgC,EAAME","file":"static/js/56.a8316265.chunk.js","sourcesContent":["const ValidFormExampleSource = `\r\nimport React, { Component, Fragment } from \"react\";\r\nimport { Card, CardBody, CardTitle, Row, Col, Button, FormGroup, Label } from \"reactstrap\";\r\nimport { Formik, Field, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\n// import classnames from \"classnames\";\r\nimport ContentHeader from \"../../components/contentHead/contentHeader\";\r\nimport ContentSubHeader from \"../../components/contentHead/contentSubHeader\";\r\n\r\n//Prism\r\n// eslint-disable-next-line\r\nimport Prism from \"prismjs\";  //Include JS\r\nimport \"prismjs/themes/prism-okaidia.css\"; //Include CSS\r\nimport { PrismCode } from \"react-prism\"; //Prism Component\r\n\r\n\r\n\r\n\r\nconst formSchema = Yup.object().shape({\r\n   required: Yup.string()\r\n      .required(\"Required\"),\r\n   email: Yup.string()\r\n      .email(\"Invalid email\")\r\n      .required(\"Required\"),\r\n   number: Yup.number()\r\n      .required(\"Required\"),\r\n   url: Yup.string()\r\n      .url()\r\n      .required(\"Required\"),\r\n   date: Yup.date()\r\n      .required(\"Required\"),\r\n   minlength: Yup.string()\r\n      .min(4, \"Too Short!\")\r\n      .required(\"Required\"),\r\n   maxlength: Yup.string()\r\n      .max(5, \"Too Long!\")\r\n      .required(\"Required\"),\r\n});\r\n\r\nclass Validation extends Component {\r\n   render() {\r\n      return (\r\n         <Fragment>\r\n            <ContentHeader>Form Validation</ContentHeader>\r\n            <Row>\r\n               <Col sm=\"12\">\r\n                  <Card>\r\n                     <CardBody>\r\n                        <CardTitle>Formik</CardTitle>\r\n                           <Col md=\"12\" lg=\"6\" className=\"leftDiv\">\r\n                              <Formik\r\n                                 initialValues={{\r\n                                    required: \"\",\r\n                                    email: \"\",\r\n                                    url: \"\",\r\n                                    number: \"\",\r\n                                    date: \"\",\r\n                                    minlength: \"\",\r\n                                    maxlength: \"\"\r\n                                 }}\r\n                                 validationSchema={formSchema}\r\n                                 onSubmit={values => {\r\n                                    // same shape as initial values\r\n                                    console.log(values);\r\n                                 }}\r\n                              >\r\n                                 \r\n                              </Formik>\r\n                           </Col>\r\n                           \r\n                        \r\n                         \r\n                     </CardBody>\r\n                  </Card>\r\n               </Col>\r\n            </Row>\r\n         </Fragment>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Validation;\r\n`;\r\n\r\nexport default ValidFormExampleSource;","import React, { Component, Fragment } from \"react\";\r\nimport { Card, CardBody, CardTitle, Row, Col, Button, FormGroup, Label } from \"reactstrap\";\r\nimport { Formik, Field, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\n// import classnames from \"classnames\";\r\nimport ContentHeader from \"../../components/contentHead/contentHeader\";\r\nimport ContentSubHeader from \"../../components/contentHead/contentSubHeader\";\r\n//Prism\r\n// eslint-disable-next-line\r\nimport Prism from \"prismjs\";  //Include JS\r\nimport \"prismjs/themes/prism-okaidia.css\"; //Include CSS\r\nimport { PrismCode } from \"react-prism\"; //Prism Component\r\n\r\n\r\nimport ValidFormExampleSource from \"./example-source/validform\";\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\n\r\n\r\nconst formSchema = Yup.object().shape({\r\n   required: Yup.string()\r\n      .required(\"Required\"),\r\n   email: Yup.string()\r\n      .email(\"Invalid email\")\r\n      .required(\"Required\"),\r\n   number: Yup.number()\r\n      .required(\"Required\"),\r\n   url: Yup.string()\r\n      .url()\r\n      .required(\"Required\"),\r\n   date: Yup.date()\r\n      .required(\"Required\"),\r\n   minlength: Yup.string()\r\n      .min(4, \"Too Short!\")\r\n      .required(\"Required\"),\r\n   maxlength: Yup.string()\r\n      .max(5, \"Too Long!\")\r\n      .required(\"Required\"),\r\n});\r\n\r\nclass Validation extends Component {\r\n   render() {\r\n      return (\r\n         <Fragment>\r\n            \r\n            <Row className=\"row-eq-height\">\r\n               <Col sm=\"12\">\r\n                  <Card>\r\n                     <CardBody>\r\n                        <CardTitle>Form Validation Design</CardTitle>\r\n                        \r\n                        <Col md=\"12\" lg=\"6\" className=\"leftDiv\">\r\n                           <Formik\r\n                                 initialValues={{\r\n                                    required: \"\",\r\n                                    email: \"\",\r\n                                    url: \"\",\r\n                                    number: \"\",\r\n                                    date: \"\",\r\n                                    minlength: \"\",\r\n                                    maxlength: \"\"\r\n                                 }}\r\n                                 validationSchema={formSchema}\r\n                                 onSubmit={values => {\r\n                                    // same shape as initial values\r\n                                    console.log(values);\r\n                                 }}\r\n                              >\r\n                                 {({ errors, touched }) => (\r\n                                    <Form>\r\n                                       <FormGroup>\r\n                                          <Label for=\"required\">Required</Label>\r\n                                          <Field name=\"required\" id=\"required\" className={`form-control ${errors.required && touched.required && 'is-invalid'}`} />\r\n                                          {errors.required && touched.required ? <div className=\"invalid-feedback\">{errors.required}</div> : null}\r\n                                       </FormGroup>\r\n                                       <FormGroup>\r\n                                          <Label for=\"email\">Email</Label>\r\n                                          <Field type=\"email\" name=\"email\" id=\"email\" className={`form-control ${errors.email && touched.email && 'is-invalid'}`} />\r\n                                          {errors.email && touched.email ? <div className=\"invalid-feedback\">{errors.email}</div> : null}\r\n                                       </FormGroup>\r\n                                       <FormGroup>\r\n                                          <Label for=\"url\">Website URL</Label>\r\n                                          <Field name=\"url\" id=\"url\" className={`form-control ${errors.url && touched.url && 'is-invalid'}`} />\r\n                                          {errors.url && touched.url ? <div className=\"invalid-feedback\">{errors.url}</div> : null}\r\n                                       </FormGroup>\r\n                                       <FormGroup>\r\n                                          <Label for=\"number\">Number</Label>\r\n                                          <Field name=\"number\" id=\"number\" className={`form-control ${errors.number && touched.number && 'is-invalid'}`} />\r\n                                          {errors.number && touched.number ? <div className=\"invalid-feedback\">{errors.number}</div> : null}\r\n                                       </FormGroup>\r\n                                       <FormGroup>\r\n                                          <Label for=\"date\">Date</Label>\r\n                                          <Field type=\"date\" name=\"date\" id=\"date\" className={`form-control ${errors.date && touched.date && 'is-invalid'}`} />\r\n                                          {errors.date && touched.date ? <div className=\"invalid-feedback\">{errors.date}</div> : null}\r\n                                       </FormGroup>\r\n                                       <FormGroup>\r\n                                          <Label for=\"minlength\">Min Length (Minimum 4 Characters)</Label>\r\n                                          <Field name=\"minlength\" id=\"minlength\" className={`form-control ${errors.minlength && touched.minlength && 'is-invalid'}`} />\r\n                                          {errors.minlength && touched.minlength ? <div className=\"invalid-feedback\">{errors.minlength}</div> : null}\r\n                                       </FormGroup>\r\n                                       <FormGroup>\r\n                                          <Label for=\"maxlength\">Max Length (Maximum 5 Characters)</Label>\r\n                                          <Field name=\"maxlength\" id=\"maxlength\" className={`form-control ${errors.maxlength && touched.maxlength && 'is-invalid'}`} />\r\n                                          {errors.maxlength && touched.maxlength ? <div className=\"invalid-feedback\">{errors.maxlength}</div> : null}\r\n                                       </FormGroup>\r\n                                       <Button type=\"submit\">Submit</Button>\r\n                                    </Form>\r\n                                 )}\r\n                              </Formik>\r\n                              <div className=\"\">\r\n                                 <div className=\"installation\">Installation</div>\r\n                           \r\n                                 <Col md=\"12\" className=\"leftDiv\">\r\n                                    <div className=\"installation-steps\">\r\n                                       <div className=\"installation-text\">Download and install the package. Use Node.js v8.0.0 or later.</div>\r\n                                       <div className=\"installation-box\">\r\n                                          <div>npm install formik --save</div>\r\n                                          <div>npm install -S yup</div>\r\n                                          <div>npm install react-feather --save</div>\r\n                                          <div>npm install --save reactstrap react react-dom</div>\r\n                                       </div>\r\n                                    </div>\r\n                                 </Col>\r\n                              </div>\r\n                        </Col>\r\n                        <Col md=\"12\" lg=\"6\" className=\"rightDiv\">\r\n                              <CopyToClipboard text={ValidFormExampleSource}\r\n                                 onCopy={() => this.setState({copied: true})}>\r\n                                 <span className=\"copy-code\">Copy Code</span>\r\n                              </CopyToClipboard>\r\n                              <PrismCode\r\n                                 component=\"pre\"\r\n                                 className=\"language-javascript\"\r\n                              >\r\n                                 {ValidFormExampleSource}\r\n                              </PrismCode>\r\n                           \r\n                        </Col>\r\n                     </CardBody>\r\n                  </Card>\r\n               </Col>\r\n            </Row>\r\n         </Fragment>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Validation;\r\n","import React from \"react\";\r\n\r\nconst ContentHeader = props => {\r\n  const {className} = props;\r\n   return (\r\n      <div\r\n         className={`content-header${\r\n            className === undefined ? \"\" : ` ${className}`\r\n         }`}\r\n      >\r\n         {props.children}\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default ContentHeader;\r\n","import React from \"react\";\r\n\r\nconst ContentSubHeader = props => {\r\n   const { className } = props;\r\n   return (\r\n      <div\r\n         className={`content-sub-header${\r\n            className === undefined ? \"\" : ` ${className}`\r\n         }`}\r\n      >\r\n         {props.children}\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default ContentSubHeader;\r\n"],"sourceRoot":""}