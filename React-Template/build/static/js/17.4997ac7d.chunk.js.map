{"version":3,"sources":["components/todo/Link.js","containers/todo/todoFilterLink.js","containers/todo/addTodo.js","components/todo/todoFilter.js","components/todo/Search.js","containers/todo/todoFilterSearch.js","components/todo/todoSearch.js","components/todo/todo.js","components/todo/todoList.js","containers/todo/visibleTodoList.js","components/todo/todoDetails.js","containers/todo/visibleTodoDetails.js","views/todo/todo.js"],"names":["Link","_ref","active","children","onClick","react_default","a","createElement","className","connect","state","ownProps","filter","todoApp","todoVisibilityFilter","dispatch","setTodoVisibilityFilter","id","todo","length","full_name","task","start_date","due_date","project","priority","tag","comments","Fragment","reactstrap_es","onSubmit","e","preventDefault","value","trim","addTodo","md","for","type","name","ref","node","required","color","TodoFilter","props","_this","Object","classCallCheck","this","_super","call","modal","toggle","bind","assertThisInitialized","setState","lib_default","dist","size","todoFilterLink","todoVisiblityFilter","SHOW_ALL","PROJECT_A_TODO","PROJECT_B_TODO","STARRED_TODO","PRIORITY_TODO","COMPLETED_TODO","UIUX_TODO","departmentValue","FRONTEND_TODO","BACKEND_TODO","isOpen","React","Component","Search","onChange","placeholder","target","defaultValue","todoSearch","TodoSearch","todoFilterSearch","Todo","onCheckboxChange","onTodoClick","onStarredClick","onPriorityClick","completed","image","starred","xl","xs","check","defaultChecked","style","src","alt","TodoList","toggleTodo","toggleStarredTodo","togglePriorityTodo","deleteTodo","todoDetails","map","todo_todo","assign","key","onDeleteClick","prototype","PropTypes","arrayOf","shape","number","isRequired","string","bool","deleted","func","getVisibleTodo","c","toLocaleLowerCase","includes","Error","todoList","TodoDetails","selectedTodo","onEditClick","editTodoFlag","react","sm","object","border","rows","editTodo","setEditTodoFlag","field","updateTodo","todoFilter","todo_todoSearch","visibleTodoList","visibleTodoDetails"],"mappings":"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","file":"static/js/17.4997ac7d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst Link = ({ active, children, onClick }) => (\r\n   <li className={\"list-group-item list-group-item-action \" + (active ? \"active\" : \"\") + \" no-border-top-radius no-border-bottom-radius no-border px-2 py-1\"} onClick={onClick}>\r\n      {children} \r\n   </li>\r\n);\r\n\r\nLink.propTypes = {\r\n   active: PropTypes.bool.isRequired,\r\n   children: PropTypes.node.isRequired,\r\n   onClick: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Link;\r\n","import { connect } from \"react-redux\";\r\nimport { setTodoVisibilityFilter } from \"../../redux/actions/todo/todoActions\";\r\nimport Link from \"../../components/todo/Link\";\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n   active: ownProps.filter === state.todoApp.todoVisibilityFilter\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n   onClick: () => dispatch(setTodoVisibilityFilter(ownProps.filter))\r\n});\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(Link);\r\n","import React from \"react\";\r\nimport { Col, Row, Form, FormGroup, Label, Button, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { addTodo } from \"../../redux/actions/todo/todoActions\";\r\n\r\nconst mapStateToProps = state => ({\r\n   id: state.todoApp.todo.length\r\n});\r\n\r\nconst AddTodo = ({ id, dispatch }) => {\r\n   let full_name, task, start_date, due_date, project, priority, tag, comments;\r\n\r\n   return (\r\n      <React.Fragment>\r\n         <Form\r\n            onSubmit={e => {\r\n               e.preventDefault();\r\n               if (!full_name.value.trim() || !task.value.trim() || !project.value.trim()) {\r\n                  return;\r\n               }\r\n               dispatch(\r\n                  addTodo(\r\n                     id,\r\n                     full_name.value,\r\n                     task.value,\r\n                     start_date.value,\r\n                     due_date.value,\r\n                     project.value,\r\n                     priority.value,\r\n                     tag.value,\r\n                     comments.value\r\n                  )\r\n               );\r\n               full_name.value = \"\";\r\n               project.value = \"\";\r\n               task.value = \"\";\r\n               start_date.value = \"\";\r\n               due_date.value = \"\";\r\n               project.value = \"\";\r\n               priority.value = false;\r\n               tag.value = \"\";\r\n               comments.value = \"\";\r\n            }}\r\n         >\r\n            <ModalBody>\r\n               <Row>\r\n                  <Col md={12}>\r\n                     <FormGroup>\r\n                        <Label for=\"firstName\">Title</Label>\r\n                        <input\r\n                           className=\"form-control\"\r\n                           type=\"text\"\r\n                           name=\"task\"\r\n                           id=\"task\"\r\n                           ref={node => (task = node)}\r\n                           required\r\n                        />\r\n                     </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                     <FormGroup>\r\n                        <Label for=\"fullName\">Owner</Label>\r\n                        <input\r\n                           className=\"form-control\"\r\n                           type=\"text\"\r\n                           name=\"full_name\"\r\n                           id=\"fullName\"\r\n                           ref={node => (full_name = node)}\r\n                           required\r\n                        />\r\n                     </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                     <FormGroup>\r\n                        <Label for=\"lastName\">Project</Label>\r\n                        <select\r\n                           className=\"form-control\"\r\n                           type=\"select\"\r\n                           name=\"project\"\r\n                           id=\"project\"\r\n                           ref={node => (project = node)}\r\n                           required\r\n                        >\r\n                           <option value=\"Project A\">Project A</option>\r\n                           <option value=\"Project B\">Project B</option>\r\n                        </select>\r\n                     </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                     <FormGroup>\r\n                        <Label for=\"start-date\">Start Date</Label>\r\n                        <input\r\n                           className=\"form-control\"\r\n                           type=\"text\"\r\n                           name=\"start-date\"\r\n                           id=\"start-date\"\r\n                           ref={node => (start_date = node)}\r\n                        />\r\n                     </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                     <FormGroup>\r\n                        <Label for=\"due-date\">Due Date</Label>\r\n                        <input\r\n                           className=\"form-control\"\r\n                           type=\"text\"\r\n                           name=\"due-date\"\r\n                           id=\"due-date\"\r\n                           ref={node => (due_date = node)}\r\n                        />\r\n                     </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                     <FormGroup>\r\n                        <Label for=\"priority\">Priority</Label>\r\n                        <input\r\n                           className=\"form-control\"\r\n                           type=\"checkbox\"\r\n                           name=\"priority\"\r\n                           id=\"priority\"\r\n                           ref={node => (priority = node)}\r\n                        />\r\n                     </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                     <FormGroup>\r\n                        <Label for=\"tag\">Tag</Label>\r\n                        <select\r\n                           className=\"form-control\"\r\n                           type=\"select\"\r\n                           name=\"tag\"\r\n                           id=\"tag\"\r\n                           ref={node => (tag = node)}\r\n                           required\r\n                        >\r\n                           <option value=\"uiux\">UI/UX</option>\r\n                           <option value=\"frontend\">Frontend</option>\r\n                           <option value=\"backend\">Backend</option>\r\n                        </select>\r\n                     </FormGroup>\r\n                  </Col>\r\n                  <Col md={12}>\r\n                     <FormGroup>\r\n                        <Label for=\"comments\">Comments</Label>\r\n                        <input\r\n                           className=\"form-control\"\r\n                           type=\"comments\"\r\n                           name=\"comments\"\r\n                           id=\"comments\"\r\n                           ref={node => (comments = node)}\r\n                        />\r\n                     </FormGroup>\r\n                  </Col>\r\n               </Row>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n               <Button color=\"primary\" type=\"submit\">\r\n                  Add Task\r\n               </Button>\r\n            </ModalFooter>\r\n         </Form>\r\n      </React.Fragment>\r\n   );\r\n};\r\n\r\nexport default connect(mapStateToProps)(AddTodo);\r\n","import React from \"react\";\r\nimport { Modal, ModalHeader } from \"reactstrap\";\r\nimport FilterLink from \"../../containers/todo/todoFilterLink\";\r\nimport { todoVisiblityFilter } from \"../../redux/actions/todo/todoActions\";\r\nimport AddTodo from \"../../containers/todo/addTodo\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport * as Icon from \"react-feather\";\r\n\r\nclass TodoFilter extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         modal: false\r\n      };\r\n\r\n      this.toggle = this.toggle.bind(this);\r\n   }\r\n\r\n   toggle() {\r\n      this.setState({\r\n         modal: !this.state.modal\r\n      });\r\n   }\r\n   render() {\r\n      return (\r\n         <div className=\"todo-app-sidebar float-left d-none d-xl-block\">\r\n            <PerfectScrollbar>\r\n               <div className=\"todo-app-sidebar-content\">\r\n                  <div className=\"todo-app-menu\">\r\n                     <div className=\"form-group form-group-compose text-center\">\r\n                        <button\r\n                           type=\"button\"\r\n                           className=\"btn btn-raised btn-danger btn-block my-2 shadow-z-2\"\r\n                           onClick={this.toggle}\r\n                        >\r\n                           <Icon.Plus size={18} className=\"mr-1\" /> Add Task\r\n                        </button>\r\n                     </div>\r\n                     <ul className=\"list-group list-group-messages\">\r\n                     <FilterLink filter={todoVisiblityFilter.SHOW_ALL}>\r\n                        <Icon.Users size={18} className=\"mr-1\" /> All\r\n                     </FilterLink>\r\n                     </ul>\r\n                     <h6 className=\"text-muted font-small-3 text-bold-600 text-uppercase my-3\">Projects</h6>\r\n                     <ul className=\"list-group list-group-messages\">\r\n                        <FilterLink filter={todoVisiblityFilter.PROJECT_A_TODO}>\r\n                           <Icon.Briefcase size={18} className=\"mr-1\" /> Project A\r\n                        </FilterLink>\r\n                        <FilterLink filter={todoVisiblityFilter.PROJECT_B_TODO}>\r\n                           <Icon.Briefcase size={18} className=\"mr-1\" /> Project B\r\n                        </FilterLink>\r\n                     </ul>\r\n                     <h6 className=\"text-muted font-small-3 text-bold-600 text-uppercase my-3\">Filters</h6>\r\n                     <ul className=\"list-group list-group-messages\">\r\n                        <FilterLink filter={todoVisiblityFilter.STARRED_TODO}>\r\n                           <Icon.Star size={18} className=\"mr-1\" /> Starred\r\n                        </FilterLink>\r\n                        <FilterLink filter={todoVisiblityFilter.PRIORITY_TODO}>\r\n                           <Icon.AlertCircle size={18} className=\"mr-1\" /> Priority\r\n                        </FilterLink>\r\n                        <FilterLink filter={todoVisiblityFilter.COMPLETED_TODO}>\r\n                           <Icon.Check size={18} className=\"mr-1\" /> Done\r\n                        </FilterLink>\r\n                     </ul>\r\n                     <h6 className=\"text-muted font-small-3 text-bold-600 text-uppercase my-3\">Tags</h6>\r\n                     <ul className=\"list-group list-group-messages\">\r\n                        <FilterLink filter={todoVisiblityFilter.UIUX_TODO} departmentValue=\"UIUX\">\r\n                           <Icon.Tag size={18} className=\"mr-1 info\" />\r\n                           UI/UX\r\n                        </FilterLink>\r\n                        <FilterLink filter={todoVisiblityFilter.FRONTEND_TODO} departmentValue=\"Frontend\">\r\n                           <Icon.Tag size={18} className=\"mr-1 warning\" />\r\n                           Frontend\r\n                        </FilterLink>\r\n                        <FilterLink filter={todoVisiblityFilter.BACKEND_TODO} departmentValue=\"Backend\">\r\n                           <Icon.Tag size={18} className=\"mr-1 success\" />\r\n                           Backend\r\n                        </FilterLink>\r\n                     </ul>\r\n                  </div>\r\n               </div>\r\n               <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className} size=\"md\">\r\n                  <ModalHeader toggle={this.toggle}>Add Task</ModalHeader>\r\n                  <AddTodo />\r\n               </Modal>\r\n            </PerfectScrollbar>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default TodoFilter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst Search = ({ value, onChange }) => (   \r\n   <input type=\"text\" className=\"form-control round\" placeholder=\"Search todo\" onChange={(e) => onChange(e.target.value)} defaultValue={value}/>\r\n);\r\n\r\nSearch.propTypes = {\r\n   onChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Search;\r\n","import { connect } from \"react-redux\";\r\nimport { todoSearch } from \"../../redux/actions/todo/todoActions\";\r\nimport Search from \"../../components/todo/Search\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n   value: state.todoApp.todoSearch\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n   onChange:  value => dispatch(todoSearch(value)),\r\n});\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(Search);\r\n","import React from \"react\";\r\nimport FilterSearch from \"../../containers/todo/todoFilterSearch\";\r\n\r\nclass TodoSearch extends React.Component {\r\n   render() {\r\n      return (\r\n         <div className=\"todo-search-box w-100 bg-white pt-4 px-2 pb-2\">\r\n            <div className=\"media\">\r\n               <span className=\"todo-app-sidebar-toggle ft-align-justify font-large-1 mr-2 d-xl-none\" />\r\n               <div className=\"media-body\">\r\n                  <FilterSearch />\r\n               </div>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default TodoSearch;\r\n","import React from \"react\";\r\nimport { Label, Row, Col, CustomInput } from \"reactstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Star, AlertCircle } from \"react-feather\";\r\n\r\nconst Todo = ({\r\n   onCheckboxChange,\r\n   onTodoClick,\r\n   onStarredClick,\r\n   onPriorityClick,\r\n   id,\r\n   task,\r\n   completed,\r\n   image,\r\n   project,\r\n   starred,\r\n   priority,\r\n   tag,\r\n   active\r\n}) => (   \r\n   <li className={\"list-group-item list-group-item-action no-border \" + ((active === id) ? \"bg-grey bg-lighten-4\" : \"\")}>\r\n      <Row className=\"todo-list-group-item\">\r\n         <Col xl={1} xs={1}>\r\n            <Label check>\r\n               <CustomInput type=\"checkbox\" onChange={onCheckboxChange} id={\"exampleCustomCheckbox-\"+id} defaultChecked={completed} />\r\n            </Label>\r\n         </Col>\r\n         <Col xl={1} xs={1}>\r\n            <Star size={20} onClick={onStarredClick} style={{ color: starred ? \"#FFC107\" : \"#495057\" }} />            \r\n            <AlertCircle size={20} onClick={onPriorityClick} style={{ color: priority ? \"#FF586B\" : \"#495057\" }} />\r\n         </Col>\r\n         <Col xl={10} xs={9} onClick={onTodoClick}>\r\n            <p className=\"mb-0 text-truncate\">\r\n               {completed ? <s>{task}</s> : task}\r\n               <img src={image} className=\"rounded-circle width-25 float-right d-none d-xl-block\" alt={image} />\r\n            </p>\r\n            <p className=\"mb-0 font-small-3\">\r\n               {project}{\" \"}\r\n               <span\r\n                  className={\r\n                     \"float-right badge \" +\r\n                     (tag === \"uiux\" ? \"badge-info\" : \"\") +\r\n                     (tag === \"frontend\" ? \"badge-warning\" : \"\") +\r\n                     (tag === \"backend\" ? \"badge-success\" : \"\") +\r\n                     \" mr-1\"\r\n                  }\r\n               >\r\n                  {tag}\r\n               </span>\r\n            </p>\r\n         </Col>\r\n      </Row>\r\n   </li>\r\n);\r\n\r\nTodo.propTypes = {\r\n   task: PropTypes.string.isRequired,\r\n   image: PropTypes.string.isRequired,\r\n   project: PropTypes.string.isRequired,\r\n   starred: PropTypes.bool.isRequired,\r\n   onCheckboxChange: PropTypes.func.isRequired,\r\n   onStarredClick: PropTypes.func.isRequired,\r\n   onPriorityClick: PropTypes.func.isRequired,\r\n   onTodoClick: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Todo;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Todo from \"./todo\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n\r\nconst TodoList = ({ todo, active, toggleTodo, toggleStarredTodo, togglePriorityTodo, deleteTodo, todoDetails }) => (\r\n   <div className=\"todo-app-list\">\r\n      <PerfectScrollbar>\r\n         <div id=\"users-list\">\r\n            <ul className=\"list-group\">\r\n               {todo.map(todo => (\r\n                  <Todo\r\n                     key={todo.id}\r\n                     active={active}\r\n                     {...todo}\r\n                     onCheckboxChange={() => toggleTodo(todo.id)}\r\n                     onStarredClick={() => toggleStarredTodo(todo.id)}\r\n                     onPriorityClick={() => togglePriorityTodo(todo.id)}\r\n                     onDeleteClick={() => deleteTodo(todo.id)}\r\n                     onTodoClick={() => todoDetails(todo.id)}\r\n                  />\r\n               ))}\r\n            </ul>\r\n         </div>\r\n      </PerfectScrollbar>\r\n   </div>\r\n);\r\n\r\nTodoList.prototype = {\r\n   todo: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n         id: PropTypes.number.isRequired,\r\n         full_name: PropTypes.string.isRequired,\r\n         image: PropTypes.string,\r\n         task: PropTypes.string,\r\n         start_date: PropTypes.number.isRequired,\r\n         due_date: PropTypes.number.isRequired,\r\n         project: PropTypes.string,\r\n         priority: PropTypes.bool.isRequired,\r\n         tag: PropTypes.bool.isRequired,\r\n         comments: PropTypes.string,\r\n         completed: PropTypes.bool.isRequired,\r\n         starred: PropTypes.bool.isRequired,\r\n         deleted: PropTypes.bool.isRequired\r\n      }).isRequired\r\n   ).isRequired,\r\n   toggleStarredTodo: PropTypes.func.isRequired,\r\n   deleteTodo: PropTypes.func.isRequired,\r\n   todoDetails: PropTypes.func.isRequired\r\n};\r\nexport default TodoList;\r\n","import { connect } from \"react-redux\";\r\nimport {\r\n   toggleTodo,\r\n   toggleStarredTodo,\r\n   togglePriorityTodo,\r\n   deleteTodo,\r\n   todoVisiblityFilter,\r\n   todoDetails\r\n} from \"../../redux/actions/todo/todoActions\";\r\nimport todoList from \"../../components/todo/todoList\";\r\n\r\nconst getVisibleTodo = (todo, filter, todoSearch) => {\r\n   switch (filter) {\r\n      case todoVisiblityFilter.SHOW_ALL:\r\n         return todo.filter(c => !c.deleted && c.task.toLocaleLowerCase().includes(todoSearch.toLocaleLowerCase()));\r\n\r\n      // Project Filter\r\n      case todoVisiblityFilter.PROJECT_A_TODO:\r\n         return todo.filter(\r\n            c =>\r\n               c.project === \"Project A\" && !c.deleted && c.task.toLocaleLowerCase().includes(todoSearch.toLocaleLowerCase())\r\n         );\r\n      case todoVisiblityFilter.PROJECT_B_TODO:\r\n         return todo.filter(\r\n            c =>\r\n               c.project === \"Project B\" && !c.deleted && c.task.toLocaleLowerCase().includes(todoSearch.toLocaleLowerCase())\r\n         );\r\n\r\n      // Filters\r\n      case todoVisiblityFilter.STARRED_TODO:\r\n         return todo.filter(\r\n            c => c.starred && !c.deleted && c.task.toLocaleLowerCase().includes(todoSearch.toLocaleLowerCase())\r\n         );\r\n      case todoVisiblityFilter.PRIORITY_TODO:\r\n         return todo.filter(\r\n            c => c.priority && !c.deleted && c.task.toLocaleLowerCase().includes(todoSearch.toLocaleLowerCase())\r\n         );\r\n      case todoVisiblityFilter.COMPLETED_TODO:\r\n         return todo.filter(\r\n            c => c.completed && !c.deleted && c.task.toLocaleLowerCase().includes(todoSearch.toLocaleLowerCase())\r\n         );\r\n\r\n      // Tag filter\r\n      case todoVisiblityFilter.UIUX_TODO:\r\n         return todo.filter(\r\n            c => c.tag === \"uiux\" && !c.deleted && c.task.toLocaleLowerCase().includes(todoSearch.toLocaleLowerCase())\r\n         );\r\n      case todoVisiblityFilter.FRONTEND_TODO:\r\n         return todo.filter(\r\n            c => c.tag === \"frontend\" && !c.deleted && c.task.toLocaleLowerCase().includes(todoSearch.toLocaleLowerCase())\r\n         );\r\n      case todoVisiblityFilter.BACKEND_TODO:\r\n         return todo.filter(\r\n            c => c.tag === \"backend\" && !c.deleted && c.task.toLocaleLowerCase().includes(todoSearch.toLocaleLowerCase())\r\n         );\r\n      default:\r\n         throw new Error(\"Unknown filter: \" + filter);\r\n   }\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n   // Mapping todo object and Visiblityfilter state to Object\r\n   todo: getVisibleTodo(state.todoApp.todo, state.todoApp.todoVisibilityFilter, state.todoApp.todoSearch),\r\n   active: state.todoApp.todoDetails\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n   toggleTodo: id => dispatch(toggleTodo(id)),\r\n   toggleStarredTodo: id => dispatch(toggleStarredTodo(id)),\r\n   togglePriorityTodo: id => dispatch(togglePriorityTodo(id)),\r\n   deleteTodo: id => dispatch(deleteTodo(id)),\r\n   todoDetails: id => dispatch(todoDetails(id))\r\n});\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(todoList);\r\n","import React, { Fragment } from \"react\";\r\nimport { Row, Col, Media, Button, Input } from \"reactstrap\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Icon from \"react-feather\";\r\n\r\nconst TodoDetails = ({ selectedTodo, toggleStarredTodo, togglePriorityTodo, onEditClick, editTodoFlag, onChange }) => (\r\n   <Fragment>\r\n      {selectedTodo ? (\r\n         <div className=\"todo-app-content-detail\">\r\n            <Row>\r\n               <Col className=\"\">\r\n                  <Icon.Star\r\n                     size={20}\r\n                     className=\"my-2 mx-1\"\r\n                     onClick={() => toggleStarredTodo(selectedTodo.id)}\r\n                     style={{ color: selectedTodo.starred ? \"#FFC107\" : \"#495057\" }}\r\n                  />\r\n                  <Icon.AlertCircle\r\n                     size={20}\r\n                     className=\"my-2 mx-1\"\r\n                     onClick={() => togglePriorityTodo(selectedTodo.id)}\r\n                     style={{ color: selectedTodo.priority ? \"#FF586B\" : \"#495057\" }}\r\n                  />\r\n               </Col>\r\n               <Col className=\"text-right\">\r\n                  <Button className=\"btn-outline-success mr-1 mt-1\" size=\"sm\" onClick={onEditClick}>\r\n                     {editTodoFlag ? <Icon.Check size={16} /> : <Icon.Edit2 size={16} />}\r\n                  </Button>\r\n               </Col>\r\n            </Row>\r\n            <PerfectScrollbar>\r\n               <Row>\r\n                  <Col>\r\n                     {editTodoFlag ? (\r\n                        <Input\r\n                           type=\"text\"\r\n                           name=\"task\"\r\n                           id=\"task\"\r\n                           defaultValue={selectedTodo.task}\r\n                           onChange={e => onChange(selectedTodo.id, \"task\", e.target.value)}\r\n                        />\r\n                     ) : (\r\n                        <p className=\"lead\">{selectedTodo.completed ? <s>{selectedTodo.task}</s> : selectedTodo.task}</p>\r\n                     )}\r\n                  </Col>\r\n               </Row>\r\n               <Row className=\"mt-1\">\r\n                  <Col>\r\n                     <Row>\r\n                        <Col sm=\"3\">\r\n                           <Media\r\n                              object\r\n                              src={selectedTodo.image}\r\n                              alt=\"Generic placeholder image\"\r\n                              className=\"img-fluid rounded-circle width-25\"\r\n                           />\r\n                        </Col>\r\n                        <Col sm=\"9\" className=\"text-truncate\">\r\n                           {editTodoFlag ? (\r\n                              <Input\r\n                                 type=\"text\"\r\n                                 className=\"w-80\"\r\n                                 name=\"full_name\"\r\n                                 id=\"full_name\"\r\n                                 defaultValue={selectedTodo.full_name}\r\n                                 onChange={e => onChange(selectedTodo.id, \"full_name\", e.target.value)}\r\n                              />\r\n                           ) : (\r\n                              selectedTodo.full_name\r\n                           )}\r\n                        </Col>\r\n                     </Row>\r\n                  </Col>\r\n                  <Col>\r\n                     <Row>\r\n                        <Col sm=\"3\">\r\n                           <Icon.Calendar size={19} />\r\n                        </Col>\r\n                        <Col sm=\"9\" className=\"text-truncate\">\r\n                           {editTodoFlag ? (\r\n                              <Input\r\n                                 type=\"text\"\r\n                                 className=\"w-80\"\r\n                                 name=\"due_date\"\r\n                                 id=\"due_date\"\r\n                                 defaultValue={selectedTodo.due_date}\r\n                                 onChange={e => onChange(selectedTodo.id, \"due_date\", e.target.value)}\r\n                              />\r\n                           ) : (\r\n                              selectedTodo.due_date\r\n                           )}\r\n                        </Col>\r\n                     </Row>\r\n                  </Col>\r\n               </Row>\r\n               <hr style={{ border: \"1px solid #e6ecf5\" }} />\r\n               <Row className=\"mb-2\">\r\n                  <Col>\r\n                     {editTodoFlag ? (\r\n                        <Input\r\n                           type=\"textarea\"\r\n                           rows=\"4\"\r\n                           name=\"comments\"\r\n                           id=\"comments\"\r\n                           defaultValue={selectedTodo.comments}\r\n                           onChange={e => onChange(selectedTodo.id, \"comments\", e.target.value)}\r\n                        />\r\n                     ) : (\r\n                        selectedTodo.comments\r\n                     )}\r\n                  </Col>\r\n               </Row>\r\n               <Row className=\"mt-1\">\r\n                  <Col sm=\"1\">\r\n                     <Icon.Briefcase size={20} />\r\n                  </Col>\r\n                  <Col sm=\"5\">\r\n                     {editTodoFlag ? (\r\n                        <Input\r\n                           type=\"select\"\r\n                           name=\"project\"\r\n                           id=\"project\"\r\n                           className=\"w-80\"\r\n                           defaultValue={selectedTodo.project}\r\n                           onChange={e => onChange(selectedTodo.id, \"project\", e.target.value)}\r\n                        >\r\n                           <option value=\"Project A\">Project A</option>\r\n                           <option value=\"Project B\">Project B</option>\r\n                        </Input>\r\n                     ) : (\r\n                        selectedTodo.project\r\n                     )}\r\n                  </Col>\r\n                  <Col sm=\"1\">\r\n                     <Icon.Tag size={20} />\r\n                  </Col>\r\n                  <Col sm=\"5\">\r\n                     {editTodoFlag ? (\r\n                        <Input\r\n                           type=\"select\"\r\n                           name=\"tag\"\r\n                           id=\"tag\"\r\n                           className=\"w-80\"\r\n                           defaultValue={selectedTodo.tag}\r\n                           onChange={e => onChange(selectedTodo.id, \"tag\", e.target.value)}\r\n                        >\r\n                           <option value=\"uiux\">UI/UX</option>\r\n                           <option value=\"frontend\">Frontend</option>\r\n                           <option value=\"backend\">Backend</option>\r\n                        </Input>\r\n                     ) : (\r\n                        selectedTodo.tag\r\n                     )}\r\n                  </Col>\r\n               </Row>\r\n               <hr style={{ border: \"1px solid #e6ecf5\" }} />\r\n               <Row>\r\n                  <Col>\r\n                     <p className=\"font-small-2 mb-0\">\r\n                        <span className=\"text-bold-400\">{selectedTodo.full_name}</span> created task on{\" \"}\r\n                        {selectedTodo.start_date}.\r\n                     </p>\r\n                     <p className=\"font-small-2 mb-0\">\r\n                        <span className=\"text-bold-400\">{selectedTodo.full_name}</span> added to {selectedTodo.project}.\r\n                     </p>\r\n                     <p className=\"font-small-2 mb-0\">\r\n                        <span className=\"text-bold-400\">{selectedTodo.full_name}</span> added to {selectedTodo.tag}.\r\n                     </p>\r\n                  </Col>\r\n               </Row>\r\n            </PerfectScrollbar>\r\n         </div>\r\n      ) : (\r\n         <div className=\"row h-100\">\r\n            <div className=\"col-sm-12 my-auto\">\r\n               <div className=\"text-center\">\r\n                  <Icon.CheckSquare size={84} color=\"#ccc\" className=\"pb-3\" />\r\n                  <h4>Please select a todo to show details.</h4>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      )}\r\n   </Fragment>\r\n);\r\n\r\nTodoDetails.prototype = {\r\n   selectedTodo: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n         id: PropTypes.number.isRequired,\r\n         full_name: PropTypes.string.isRequired,\r\n         image: PropTypes.string,\r\n         task: PropTypes.string,\r\n         start_date: PropTypes.number.isRequired,\r\n         due_date: PropTypes.number.isRequired,\r\n         project: PropTypes.string,\r\n         priority: PropTypes.bool.isRequired,\r\n         tag: PropTypes.bool.isRequired,\r\n         comments: PropTypes.string,\r\n         completed: PropTypes.bool.isRequired,\r\n         starred: PropTypes.bool.isRequired,\r\n         deleted: PropTypes.bool.isRequired\r\n      }).isRequired\r\n   ).isRequired,\r\n   starred: PropTypes.bool.isRequired,\r\n   priority: PropTypes.bool.isRequired,\r\n   toggleStarredTodo: PropTypes.func.isRequired,\r\n   togglePriorityTodo: PropTypes.func.isRequired\r\n};\r\nexport default TodoDetails;\r\n","import { connect } from \"react-redux\";\r\nimport { setEditTodoFlag,updateTodo, toggleStarredTodo, togglePriorityTodo} from \"../../redux/actions/todo/todoActions\";\r\nimport todoDetails from \"../../components/todo/todoDetails\";\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n   selectedTodo: state.todoApp.todo[state.todoApp.todoDetails],\r\n   editTodoFlag: state.todoApp.editTodo\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n   onEditClick: () => dispatch(setEditTodoFlag()),\r\n   onChange:(id, field, value) => dispatch(updateTodo(id , field, value)),\r\n   toggleStarredTodo: id => dispatch(toggleStarredTodo(id)),\r\n   togglePriorityTodo: id => dispatch(togglePriorityTodo(id))\r\n   \r\n});\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(todoDetails);\r\n","\r\nimport React, { Component, Fragment } from \"react\";\r\nimport { Row } from \"reactstrap\";\r\n\r\nimport TodoFilter from \"../../components/todo/todoFilter\";\r\nimport TodoSearch from \"../../components/todo/todoSearch\";\r\n\r\n// import TodoList from \"../../components/todo/contacsList\";\r\nimport TodoList from \"../../containers/todo/visibleTodoList\";\r\nimport TodoDetails from \"../../containers/todo/visibleTodoDetails\";\r\n\r\nclass Todo extends Component {\r\n   render() {\r\n      return (\r\n         <Fragment>\r\n            <div className=\"todo-application\">\r\n               <div className=\"content-overlay\" />\r\n               <TodoFilter />\r\n               <Row className=\"todo-app-content\">\r\n                  <div className=\"todo-app-content-area w-100\">\r\n                     <div className=\"todo-app-list-mails p-0\">\r\n                        <TodoSearch />\r\n                        <TodoList />\r\n                     </div>\r\n                     <div className=\"todo-app-mail-content d-none d-md-block\">\r\n                        <TodoDetails />\r\n                     </div>\r\n                  </div>\r\n               </Row>\r\n            </div>\r\n         </Fragment>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Todo;\r\n"],"sourceRoot":""}