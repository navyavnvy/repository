{"version":3,"sources":["components/chat/chatListItem.js","components/chat/chatList.js","containers/chat/chatList.js","redux/actions/chat/chatActions.js","components/chat/chatSearch.js","containers/chat/chatSearch.js","components/chat/chatContent.js","containers/chat/chatContent.js","components/chat/chatMsgForm.js","containers/chat/chatMsgSend.js","views/chat/chat.js"],"names":["ChatListItem","_ref","onClick","contactName","chatExcerpt","time","thumb","react_default","a","createElement","Link","to","className","reactstrap_es","left","object","src","alt","body","ChatList","chats","openChat","id","map","chat","chatListItem","Object","assign","key","name","excerpt","connect","state","chatApp","chatSearch","filter","t","toLocaleLowerCase","includes","dispatch","type","chatList","ChatSearch","onChange","searchTerm","e","target","value","dist","size","Search","ChatContent","_this","this","chatDetails","props","width","lib_default","containerRef","ref","chatScrollHandler","keys","chatHistory","k","v","UserImg","Component","chatContent","ChatMsgForm","msg","handleChatMsgChange","setState","onChatMsgSubmit","preventDefault","stopPropagation","_this2","onSubmit","placeholder","chatMsg","sendMsg","chatMsgForm","Chat","react","containers_chat_chatSearch","chat_chatList","chat_chatContent","chatMsgSend"],"mappings":"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","file":"static/js/15.1ef9d842.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Media } from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// import { Star, Pocket } from \"react-feather\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ChatListItem = ({ onClick, contactName, chatExcerpt, time, thumb }) => (\r\n    <Link to=\"/chat\" className=\"list-group-item no-border\" onClick={onClick}>\r\n        <Media>\r\n            <Media left>\r\n                <Media object src={thumb} alt=\"Generic placeholder image\" className=\"media-object d-flex mr-3 bg-primary height-50 rounded-circle\" />\r\n            </Media>\r\n            <Media body>\r\n                <h6 className=\"list-group-item-heading\">{contactName}\r\n                  <span className=\"font-small-3 float-right primary\">{time}</span>\r\n                </h6>\r\n                <p className=\"list-group-item-text text-muted\"><i className=\"ft-check primary font-small-2\"></i> {chatExcerpt} <span className=\"float-right primary\"><i className=\"font-medium-1 icon-pin blue-grey lighten-3\"></i></span></p>\r\n            </Media>\r\n        </Media>\r\n    </Link>\r\n);\r\n\r\nChatListItem.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n    contactName: PropTypes.string.isRequired,\r\n    chatExcerpt: PropTypes.string.isRequired,\r\n    time: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default ChatListItem;\r\n","import React from \"react\";\r\n// import PropTypes from 'prop-types'\r\nimport Chat from \"./chatListItem\";\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ChatList = ({ chats, openChat }) => (\r\n    <div className=\"list-group position-relative\" id=\"users-list\">\r\n        <div className=\"users-list-padding\">\r\n            {chats.map(chat => (\r\n                <Chat\r\n                    key={chat.id}\r\n                    {...chat}\r\n                    onClick={() => openChat(chat.id)}\r\n                    thumb={chat.thumb}\r\n                    contactName={chat.name}\r\n                    chatExcerpt={chat.excerpt}\r\n                />\r\n            ))}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nChatList.propTypes = {\r\n    chats: PropTypes.array.isRequired,\r\n    openChat: PropTypes.func.isRequired\r\n}\r\nexport default ChatList;\r\n","import { connect } from 'react-redux'\r\nimport chatList from '../../components/chat/chatList'\r\nimport { openChat } from '../../redux/actions/chat/chatActions'\r\n\r\nconst filterChats = (chats, chatSearch) => {\r\n    if(chatSearch !== '')\r\n        return chats.filter(t => t.name.toLocaleLowerCase().includes(chatSearch.toLocaleLowerCase()))\r\n    else\r\n        return chats\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    chats: filterChats(state.chatApp.chats, state.chatApp.chatSearch)\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    openChat: id => dispatch(openChat(id)),\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(chatList)","// import {\r\n//    HANDLE_FILTER_USER,\r\n//    HANDLE_SEND_MESSAGE,\r\n//    HANDLE_SELECT_USER\r\n// } from \"../types/types\";\r\n\r\n// const filterUser = searchTerm => ({\r\n//    type: HANDLE_FILTER_USER,\r\n//    payload: searchTerm\r\n// });\r\n\r\n// const sendMsg = ({ chatMsg, currentUser, users: Users }) => ({\r\n//    type: HANDLE_SEND_MESSAGE,\r\n//    payload: { chatMsg, currentUser, Users }\r\n// });\r\n\r\n// const selectCurrentUser = ({ users, id }) => ({\r\n//    type: HANDLE_SELECT_USER,\r\n//    payload: { users, id }\r\n// });\r\n\r\n// export { filterUser, sendMsg, selectCurrentUser };\r\n\r\nexport const openChat = id => ({\r\n    type: 'OPEN_CHAT',\r\n    id\r\n})\r\n\r\nexport const chatSearch = (searchTerm) => ({\r\n    type: 'FILTER_CHAT',\r\n    searchTerm\r\n})\r\n\r\nexport const sendMsg = (id, chatMsg) => ({\r\n    type: 'SEND_MSG',\r\n    id,\r\n    chatMsg\r\n})","import React from \"react\";\r\nimport { Form, Input } from \"reactstrap\";\r\nimport { User } from \"react-feather\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ChatSearch = ({onChange, searchTerm}) => (\r\n    <div className=\"chat-fixed-search p-2\">\r\n        <Form>\r\n            <div className=\"position-relative has-icon-left\">\r\n                <Input \r\n                    className=\"form-control\"\r\n                    id=\"searchUser\"\r\n                    name=\"searchUser\"\r\n                    type=\"text\"\r\n                    onChange={e => onChange(e.target.value)}\r\n                    value= {searchTerm}\r\n                />\r\n                <div className=\"form-control-position\">\r\n                    <User size={16} />\r\n                </div>\r\n            </div>\r\n        </Form>\r\n    </div>\r\n);\r\n\r\nChatSearch.propTypes = {\r\n    onChange: PropTypes.func.isRequired,\r\n    searchTerm: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default ChatSearch;","import { connect } from \"react-redux\";\r\nimport { chatSearch } from \"../../redux/actions/chat/chatActions\";\r\nimport Search from \"../../components/chat/chatSearch\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n   searchTerm: state.chatApp.chatSearch\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n   onChange:  searchTerm => dispatch(chatSearch(searchTerm)),\r\n});\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(Search);\r\n","import React, {Component} from \"react\";\r\n// import { Button } from \"reactstrap\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport PropTypes from 'prop-types';\r\nimport { MoreVertical } from 'react-feather';\r\n\r\nimport UserImg from \"../../assets/img/portrait/small/avatar-s-1.png\";\r\n\r\n// import PropTypes from 'prop-types'\r\n// import { AlertOctagon, Trash2 } from \"react-feather\";\r\n\r\nclass ChatContent extends Component {\r\n    \r\n    render() {\r\n    let chatDetails = this.props.chatDetails;\r\n     return <div>\r\n        <div className=\"chat-name p-2 bg-white\">\r\n            <div className=\"media\">\r\n                <span className=\"chat-app-sidebar-toggle ft-align-justify font-large-1 mr-2 d-none d-block d-sm-block d-md-none\"></span>\r\n                <div className=\"media-body\">\r\n                <img src={ chatDetails.thumb } width=\"37\" className=\"rounded-circle mr-1\" alt=\"avatar\" />\r\n                <span>{ chatDetails.name }</span>\r\n                <MoreVertical size={18} className=\"ft-more-vertical float-right mt-1\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <PerfectScrollbar \r\n            containerRef={(ref) => {\r\n                this.chatScrollHandler = ref;\r\n            }}\r\n        >\r\n            <section className=\"chat-app-window\">\r\n                <div className=\"badge badge-dark mb-1\">Chat History</div>\r\n                    <div className=\"chats\">\r\n                        {Object.keys(chatDetails.chatHistory).map((chat) =>\r\n                            (Object.keys(chatDetails.chatHistory[chat]).map((key) =>\r\n                                (Object.keys(chatDetails.chatHistory[chat][key]).map((k) => \r\n                                    ( k === 'from') ?\r\n                                        <div className=\"chat chat-left\" key={k}>\r\n                                            <div className=\"chat-avatar\">\r\n                                                <img src={chatDetails.thumb } className=\"width-50 rounded-circle\" alt=\"avatar\" />\r\n                                            </div>\r\n                                            <div className=\"chat-body\">\r\n                                                {(chatDetails.chatHistory[chat][key][k]).map((v) =>    \r\n                                                    <div className=\"chat-content\" key={v}>\r\n                                                        <p>{v}</p>\r\n                                                    </div>\r\n                                                )}\r\n                                            </div>\r\n                                        </div>\r\n                                    :\r\n                                        <div className=\"chat\" key={k}>\r\n                                            <div className=\"chat-avatar\">\r\n                                                <img src={UserImg} className=\"width-50 rounded-circle\" alt=\"avatar\" />\r\n                                            </div>\r\n                                            <div className=\"chat-body\">\r\n                                                    {(chatDetails.chatHistory[chat][key][k]).map((v) =>\r\n                                                        <div className=\"chat-content\" key={v}> \r\n                                                            <p>{v}</p>\r\n                                                        </div>\r\n                                                    )}\r\n                                            </div>\r\n                                        </div>\r\n                                ))\r\n                            ))\r\n                        )}\r\n                    </div>\r\n            </section>\r\n        </PerfectScrollbar>\r\n    </div>\r\n}\r\n}\r\n\r\nexport default ChatContent;\r\n\r\nChatContent.propTypes = {\r\n    chatDetails: PropTypes.object.isRequired\r\n}","import { connect } from 'react-redux'\r\nimport chatContent from '../../components/chat/chatContent'\r\n\r\nconst mapStateToProps = state => ({\r\n    chatDetails: state.chatApp.chats[state.chatApp.chatContent - 1]\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(chatContent)","import React, {Component} from \"react\";\r\nimport { Form, Input } from 'reactstrap';\r\nimport { Image } from 'react-feather';\r\n\r\n// import PropTypes from 'prop-types'\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ChatMsgForm extends Component {\r\n    state = {\r\n        msg: \"\"\r\n    };\r\n    handleChatMsgChange = e => {\r\n        this.setState({\r\n           msg: e.target.value\r\n        });\r\n    };\r\n\r\n    onChatMsgSubmit = e => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        this.props.onClick(this.props.id, this.state.msg)\r\n        this.setState({msg: \"\"})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"chat-app-form bg-blue-grey bg-lighten-5\">\r\n                <Form className=\"chat-app-input row\" onSubmit={this.onChatMsgSubmit}>\r\n                    <fieldset className=\"col-lg-10 col-8 m-0\"> \r\n                        <Input \r\n                            type=\"text\" \r\n                            className=\"form-control\" \r\n                            id=\"iconLeft4\" \r\n                            placeholder=\"Type your message\" \r\n                            onChange={this.handleChatMsgChange}\r\n                            value={this.state.msg} \r\n                        />\r\n                        <div className=\"form-control-position control-position-right\">\r\n                            <Image size={18} />\r\n                        </div>\r\n                    </fieldset>\r\n                    <fieldset className=\"form-group position-relative has-icon-left col-lg-2 col-4 m-0\">\r\n                        <button type=\"button\" className=\"btn btn-raised btn-primary\" onClick={() => {\r\n                            this.props.onClick(this.props.id, this.state.msg)\r\n                            this.setState({msg: \"\"})\r\n                            } }>\r\n                            <i className=\"fa fa-paper-plane-o hidden-lg-up\"></i> Send\r\n                        </button>\r\n                    </fieldset>\r\n                </Form>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nChatMsgForm.propTypes = {\r\n    onClick: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ChatMsgForm;\r\n","import { connect } from \"react-redux\";\r\nimport { sendMsg } from \"../../redux/actions/chat/chatActions\";\r\nimport chatMsgForm from \"../../components/chat/chatMsgForm\";\r\n\r\nconst mapStateToProps = state => ({\r\n    id: state.chatApp.chatContent\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n   onClick: (id, chatMsg) => dispatch(sendMsg(id, chatMsg)),\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(chatMsgForm);","import React, { Component, Fragment } from \"react\";\r\nimport ChatList from \"../../containers/chat/chatList\";\r\nimport ChatSearch from \"../../containers/chat/chatSearch\";\r\nimport ChatContent from \"../../containers/chat/chatContent\";\r\nimport ChatMsgSend from \"../../containers/chat/chatMsgSend\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n\r\nclass Chat extends Component {\r\n    \r\n   render() {\r\n      return (\r\n         <Fragment>\r\n            <div className=\"chat-application\">\r\n                <div className=\"content-overlay\"></div>\r\n                <div className=\"chat-sidebar float-left d-none d-sm-none d-md-block d-lg-block\">\r\n                    <PerfectScrollbar>\r\n                        <div className=\"chat-sidebar-content\">\r\n                            <ChatSearch />\r\n                            <ChatList />\r\n                        </div>\r\n                    </PerfectScrollbar>\r\n                </div>\r\n\r\n                <ChatContent />\r\n\r\n                <ChatMsgSend />\r\n            </div>\r\n         </Fragment>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Chat;\r\n"],"sourceRoot":""}