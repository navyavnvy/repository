{"version":3,"sources":["views/components/extra/examples/dropzoneBasic.js","views/components/extra/examples/dropzoneProgramaticDialog.js","views/components/extra/examples/dropzoneFileType.js","views/components/extra/examples/dropzoneDisabled.js","views/components/extra/upload.js","views/components/extra/exampleSource/dropzoneBasic.js","views/components/extra/exampleSource/dropzoneFileType.js","views/components/extra/exampleSource/dropzoneProgramaticDialog.js","views/components/extra/exampleSource/dropzoneDisabled.js","components/contentHead/contentHeader.js","components/contentHead/contentSubHeader.js","components/tabs/customTabs.js"],"names":["BasicDropzone","state","files","onDrop","_this","setState","react_default","a","createElement","className","es","this","bind","map","f","key","name","size","Component","dropzoneRef","FileTypeDropzone","accepted","rejected","_this2","accept","ProgramaticDialogDropzone","ref","node","alert","type","onClick","open","DisabledDropzone","disabled","Upload","react","contentHeader","contentSubHeader","href","target","rel","src","alt","reactstrap_es","sm","customTabs","TabContent1","dropzoneBasic","TabContent2","lib","component","dropzoneFileType","dropzoneProgramaticDialog","dropzoneDisabled","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","ContentHeader","props","concat","undefined","children","ContentSubHeader","Example","Object","D_React_Template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_super","call","toggle","D_React_Template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__","activeTab","tab","react__WEBPACK_IMPORTED_MODULE_6___default","reactstrap__WEBPACK_IMPORTED_MODULE_8__","tabs","classnames","active","react_feather__WEBPACK_IMPORTED_MODULE_7__","tabId","React"],"mappings":"oqBAwCeA,oMApCZC,MAAQ,CACLC,MAAO,MAGVC,OAAS,SAAAD,GACNE,EAAKC,SAAS,CACXH,kEAKH,OACGI,EAAAC,EAAAC,cAAA,WACGF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACZH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAUP,OAAQQ,KAAKR,OAAOS,KAAKD,OAChCL,EAAAC,EAAAC,cAAA,gFAMNF,EAAAC,EAAAC,cAAA,aACGF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,UACIG,KAAKV,MAAMC,MAAMW,IAAI,SAAAC,GAAC,OACpBR,EAAAC,EAAAC,cAAA,MAAIO,IAAKD,EAAEE,MACPF,EAAEE,KADN,MACeF,EAAEG,KADjB,sBA1BOC,ycCAxBC,ECqDWC,oMApDZnB,MAAQ,CACLC,MAAO,GACPmB,SAAU,GACVC,SAAU,MAGbnB,OAAS,SAAAD,GACNE,EAAKC,SAAS,CACXH,kEAIG,IAAAqB,EAAAZ,KACN,OACGL,EAAAC,EAAAC,cAAA,WACGF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACZH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACGc,OAAO,wBACPrB,OAAQ,SAACkB,EAAUC,GAChBC,EAAKlB,SAAS,CAAEgB,WAAUC,eAG7BhB,EAAAC,EAAAC,cAAA,8EAIAF,EAAAC,EAAAC,cAAA,4DAGNF,EAAAC,EAAAC,cAAA,aACGF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,UACIG,KAAKV,MAAMoB,SAASR,IAAI,SAAAC,GAAC,OACvBR,EAAAC,EAAAC,cAAA,MAAIO,IAAKD,EAAEE,MACPF,EAAEE,KADN,MACeF,EAAEG,KADjB,aAKNX,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,UACIG,KAAKV,MAAMqB,SAAST,IAAI,SAAAC,GAAC,OACvBR,EAAAC,EAAAC,cAAA,MAAIO,IAAKD,EAAEE,MACPF,EAAEE,KADN,MACeF,EAAEG,KADjB,sBA1CUC,ycDoChBO,oMAjCZxB,MAAQ,CACLC,MAAO,GACPmB,SAAU,GACVC,SAAU,2DAIV,OACGhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACZH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACGgB,IAAK,SAAAC,GACFR,EAAcQ,GAEjBxB,OAAQ,SAACkB,EAAUC,GAChBM,MAAMP,KAGTf,EAAAC,EAAAC,cAAA,8BAEHF,EAAAC,EAAAC,cAAA,UACGqB,KAAK,SACLpB,UAAU,uBACVqB,QAAS,WACNX,EAAYY,SAJlB,4BApB4Bb,ycEoDzBc,oMArDZ/B,MAAQ,CACLC,MAAO,GACP+B,UAAU,KAGb9B,OAAS,SAAAD,GACNE,EAAKC,SAAS,CACXH,kEAIG,IAAAqB,EAAAZ,KACN,OACGL,EAAAC,EAAAC,cAAA,WACGF,EAAAC,EAAAC,cAAA,aACGF,EAAAC,EAAAC,cAAA,UACGqB,KAAK,SACLpB,UAAU,kBACVqB,QAAS,kBACNP,EAAKlB,SAAS,CACX4B,UAAWV,EAAKtB,MAAMgC,aAL/B,oBAYH3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACZH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACGP,OAAQQ,KAAKR,OAAOS,KAAKD,MACzBsB,SAAUtB,KAAKV,MAAMgC,UAErB3B,EAAAC,EAAAC,cAAA,gFAMNF,EAAAC,EAAAC,cAAA,aACGF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,UACIG,KAAKV,MAAMC,MAAMW,IAAI,SAAAC,GAAC,OACpBR,EAAAC,EAAAC,cAAA,UACIM,EAAEE,KADN,MACeF,EAAEG,KADjB,sBA3CUC,ycCyBzBgB,+JAGA,OACG5B,EAAAC,EAAAC,cAAC2B,EAAA,SAAD,KACG7B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,iBACA9B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,KACG/B,EAAAC,EAAAC,cAAA,uDACAF,EAAAC,EAAAC,cAAA,KAAG8B,KAAK,mDAAmDC,OAAO,SAASC,IAAI,uBAC5ElC,EAAAC,EAAAC,cAAA,OAAKiC,IAAI,qFAAqFC,IAAI,UAClGpC,EAAAC,EAAAC,cAAA,OAAKiC,IAAI,mDAAmDC,IAAI,gBAGtEpC,EAAAC,EAAAC,cAACmC,EAAA,GAAD,KACGrC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAKC,GAAG,MACLtC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,KACGrC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,KACGrC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,uBACArC,EAAAC,EAAAC,cAAA,qFAIAF,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CACGC,YAAaxC,EAAAC,EAAAC,cAACuC,EAAD,MACbC,YACG1C,EAAAC,EAAAC,cAACyC,EAAA,UAAD,CACGC,UAAU,MACVzC,UAAU,uBCvDlB,g+BDkEbH,EAAAC,EAAAC,cAACmC,EAAA,GAAD,KACGrC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAKC,GAAG,MACLtC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,KACGrC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,KACGrC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,4BACArC,EAAAC,EAAAC,cAAA,4LAMAF,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CACGC,YAAaxC,EAAAC,EAAAC,cAAC2C,EAAD,MACbH,YACG1C,EAAAC,EAAAC,cAACyC,EAAA,UAAD,CACGC,UAAU,MACVzC,UAAU,uBElFf,4hDF6FhBH,EAAAC,EAAAC,cAACmC,EAAA,GAAD,KACGrC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAKC,GAAG,MACLtC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,KACGrC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,KACGrC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,6CAGArC,EAAAC,EAAAC,cAAA,gLAMAF,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CACGC,YAAaxC,EAAAC,EAAAC,cAAC4C,EAAD,MACbJ,YACG1C,EAAAC,EAAAC,cAACyC,EAAA,UAAD,CACGC,UAAU,MACVzC,UAAU,uBG/GN,u3BH0HzBH,EAAAC,EAAAC,cAACmC,EAAA,GAAD,KACGrC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAKC,GAAG,MACLtC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,KACGrC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,KACGrC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,wCACArC,EAAAC,EAAAC,cAAA,gLAMAF,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CACGC,YAAaxC,EAAAC,EAAAC,cAAC6C,EAAD,MACbL,YACG1C,EAAAC,EAAAC,cAACyC,EAAA,UAAD,CACGC,UAAU,MACVzC,UAAU,uBI1If,+6CJ4BPS,aA6HNgB,mEKzJf,IAAAoB,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAeeI,IAbO,SAAAC,GAAS,IACtBlD,EAAakD,EAAblD,UACN,OACG+C,EAAAjD,EAAAC,cAAA,OACGC,UAAS,iBAAAmD,YACQC,IAAdpD,EAA0B,GAA1B,IAAAmD,OAAmCnD,KAGrCkD,EAAMG,4CCVhB,IAAAR,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAeeS,IAbU,SAAAJ,GAAS,IACvBlD,EAAckD,EAAdlD,UACR,OACG+C,EAAAjD,EAAAC,cAAA,OACGC,UAAS,qBAAAmD,YACQC,IAAdpD,EAA0B,GAA1B,IAAAmD,OAAmCnD,KAGrCkD,EAAMG,6mBCGKE,0CAClB,SAAAA,EAAYL,GAAO,IAAAvD,EAAA,OAAA6D,OAAAC,EAAA,EAAAD,CAAAtD,KAAAqD,IAChB5D,EAAA+D,EAAAC,KAAAzD,KAAMgD,IAEDU,OAASjE,EAAKiE,OAAOzD,KAAZqD,OAAAK,EAAA,EAAAL,CAAA7D,IACdA,EAAKH,MAAQ,CACVsE,UAAW,KALEnE,qDASZoE,GACA7D,KAAKV,MAAMsE,YAAcC,GAC1B7D,KAAKN,SAAS,CACXkE,UAAWC,qCAKX,IAAAjD,EAAAZ,KACN,OACG8D,EAAAlE,EAAAC,cAAA,OAAKC,UAAU,eACZgE,EAAAlE,EAAAC,cAACkE,EAAA,EAAD,CAAKC,MAAI,GACNF,EAAAlE,EAAAC,cAACkE,EAAA,GAAD,KACGD,EAAAlE,EAAAC,cAACkE,EAAA,GAAD,CACGjE,UAAWmE,IAAW,CACnBC,OAAiC,MAAzBlE,KAAKV,MAAMsE,YAEtBzC,QAAS,WACNP,EAAK8C,OAAO,OAGfI,EAAAlE,EAAAC,cAACsE,EAAA,IAAD,CAAK7D,KAAM,OAGjBwD,EAAAlE,EAAAC,cAACkE,EAAA,GAAD,KACGD,EAAAlE,EAAAC,cAACkE,EAAA,GAAD,CACGjE,UAAWmE,IAAW,CACnBC,OAAiC,MAAzBlE,KAAKV,MAAMsE,YAEtBzC,QAAS,WACNP,EAAK8C,OAAO,OAGfI,EAAAlE,EAAAC,cAACsE,EAAA,KAAD,CAAM7D,KAAM,QAKrBwD,EAAAlE,EAAAC,cAACkE,EAAA,GAAD,CAAYH,UAAW5D,KAAKV,MAAMsE,UAAW9D,UAAU,QACpDgE,EAAAlE,EAAAC,cAACkE,EAAA,GAAD,CAASK,MAAM,KACZN,EAAAlE,EAAAC,cAACkE,EAAA,GAAD,KACGD,EAAAlE,EAAAC,cAACkE,EAAA,EAAD,CAAK9B,GAAG,MACJjC,KAAKgD,MAAMb,eAIrB2B,EAAAlE,EAAAC,cAACkE,EAAA,GAAD,CAASK,MAAM,KACZN,EAAAlE,EAAAC,cAACkE,EAAA,GAAD,KACGD,EAAAlE,EAAAC,cAACkE,EAAA,EAAD,CAAK9B,GAAG,MACJjC,KAAKgD,MAAMX,wBA3DCgC,IAAM9D","file":"static/js/43.4e946ff9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\n\r\nclass BasicDropzone extends Component {\r\n   state = {\r\n      files: []\r\n   };\r\n\r\n   onDrop = files => {\r\n      this.setState({\r\n         files\r\n      });\r\n   };\r\n\r\n   render() {\r\n      return (\r\n         <div>\r\n            <div className=\"dropzone mb-2\">\r\n               <Dropzone onDrop={this.onDrop.bind(this)}>\r\n                  <p>\r\n                     Try dropping some files here, or click to select files to\r\n                     upload.\r\n                  </p>\r\n               </Dropzone>\r\n            </div>\r\n            <aside>\r\n               <h4>Dropped files</h4>\r\n               <ul>\r\n                  {this.state.files.map(f => (\r\n                     <li key={f.name}>\r\n                        {f.name} - {f.size} bytes\r\n                     </li>\r\n                  ))}\r\n               </ul>\r\n            </aside>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default BasicDropzone;\r\n","import React, { Component } from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\n\r\nlet dropzoneRef;\r\n\r\nclass ProgramaticDialogDropzone extends Component {\r\n   state = {\r\n      files: [],\r\n      accepted: [],\r\n      rejected: [],\r\n   };\r\n\r\n   render() {\r\n      return (\r\n         <div className=\"dropzone\">\r\n            <Dropzone\r\n               ref={node => {\r\n                  dropzoneRef = node;\r\n               }}\r\n               onDrop={(accepted, rejected) => {\r\n                  alert(accepted);\r\n               }}\r\n            >\r\n               <p>Drop files here.</p>\r\n            </Dropzone>\r\n            <button\r\n               type=\"button\"\r\n               className=\"mt-2 btn btn-primary\"\r\n               onClick={() => {\r\n                  dropzoneRef.open();\r\n               }}\r\n            >\r\n               Open File Dialog\r\n            </button>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default ProgramaticDialogDropzone;\r\n","import React, { Component } from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\n\r\nclass FileTypeDropzone extends Component {\r\n   state = {\r\n      files: [],\r\n      accepted: [],\r\n      rejected: [],\r\n   };\r\n\r\n   onDrop = files => {\r\n      this.setState({\r\n         files\r\n      });\r\n   };\r\n\r\n   render() {\r\n      return (\r\n         <div>\r\n            <div className=\"dropzone mb-2\">\r\n               <Dropzone\r\n                  accept=\"image/jpeg, image/png\"\r\n                  onDrop={(accepted, rejected) => {\r\n                     this.setState({ accepted, rejected });\r\n                  }}\r\n               >\r\n                  <p>\r\n                     Try dropping some files here, or click to select files to\r\n                     upload.\r\n                  </p>\r\n                  <p>Only *.jpeg and *.png images will be accepted</p>\r\n               </Dropzone>\r\n            </div>\r\n            <aside>\r\n               <h4>Accepted files</h4>\r\n               <ul>\r\n                  {this.state.accepted.map(f => (\r\n                     <li key={f.name}>\r\n                        {f.name} - {f.size} bytes\r\n                     </li>\r\n                  ))}\r\n               </ul>\r\n               <h4>Rejected files</h4>\r\n               <ul>\r\n                  {this.state.rejected.map(f => (\r\n                     <li key={f.name}>\r\n                        {f.name} - {f.size} bytes\r\n                     </li>\r\n                  ))}\r\n               </ul>\r\n            </aside>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default FileTypeDropzone;\r\n","import React, { Component } from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\n\r\nclass DisabledDropzone extends Component {\r\n   state = {\r\n      files: [],\r\n      disabled: true\r\n   };\r\n\r\n   onDrop = files => {\r\n      this.setState({\r\n         files\r\n      });\r\n   };\r\n\r\n   render() {\r\n      return (\r\n         <div>\r\n            <aside>\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary\"\r\n                  onClick={() =>\r\n                     this.setState({\r\n                        disabled: !this.state.disabled\r\n                     })\r\n                  }\r\n               >\r\n                  Toggle disabled\r\n               </button>\r\n            </aside>\r\n            <div className=\"dropzone my-2\">\r\n               <Dropzone\r\n                  onDrop={this.onDrop.bind(this)}\r\n                  disabled={this.state.disabled}\r\n               >\r\n                  <p>\r\n                     Try dropping some files here, or click to select files to\r\n                     upload.\r\n                  </p>\r\n               </Dropzone>\r\n            </div>\r\n            <aside>\r\n               <h4>Dropped files</h4>\r\n               <ul>\r\n                  {this.state.files.map(f => (\r\n                     <li>\r\n                        {f.name} - {f.size} bytes\r\n                     </li>\r\n                  ))}\r\n               </ul>\r\n            </aside>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default DisabledDropzone;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Card, CardBody, CardTitle, Row, Col } from \"reactstrap\";\r\n\r\n//Prism\r\n// eslint-disable-next-line\r\nimport Prism from \"prismjs\";  //Include JS\r\nimport \"prismjs/themes/prism-okaidia.css\"; //Include CSS\r\nimport { PrismCode } from \"react-prism\"; //Prism Component\r\n\r\nimport \"../../../assets/scss/views/components/extra/upload.scss\";\r\n\r\nimport CustomTabs from \"../../../components/tabs/customTabs\";\r\nimport ContentHeader from \"../../../components/contentHead/contentHeader\";\r\nimport ContentSubHeader from \"../../../components/contentHead/contentSubHeader\";\r\n\r\n// Import examples\r\nimport BasicDropzone from \"./examples/dropzoneBasic\";\r\nimport FileTypeDropzone from \"./examples/dropzoneFileType\";\r\nimport ProgramaticDialogDropzone from \"./examples/dropzoneProgramaticDialog\";\r\nimport DisabledDropzone from \"./examples/dropzoneDisabled\";\r\n\r\n// Import Example Source Code\r\nimport BasicDropzoneSource from \"./exampleSource/dropzoneBasic\";\r\nimport FileTypeDropzoneSource from \"./exampleSource/dropzoneFileType\";\r\nimport ProgramaticDialogDropzoneSource from \"./exampleSource/dropzoneProgramaticDialog\";\r\nimport DisabledDropzoneSource from \"./exampleSource/dropzoneDisabled\";\r\n\r\n\r\nclass Upload extends Component {\r\n\r\n   render() {\r\n      return (\r\n         <Fragment>\r\n            <ContentHeader>Dropzone</ContentHeader>\r\n            <ContentSubHeader>\r\n               <p>Simple HTML5 drag-drop zone with React.js.</p>\r\n               <a href=\"https://github.com/react-dropzone/react-dropzone\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  <img src=\"https://img.shields.io/github/stars/react-dropzone/react-dropzone.svg?style=social\" alt=\"Stars\" />\r\n                  <img src=\"https://img.shields.io/npm/dm/react-dropzone.svg\" alt=\"Downloads\"/>\r\n               </a>\r\n            </ContentSubHeader>\r\n            <Row>\r\n               <Col sm=\"12\">\r\n                  <Card>\r\n                     <CardBody>\r\n                        <CardTitle>Basic Dropzone</CardTitle>\r\n                        <p>\r\n                           Dropzone with default properties and displays list of\r\n                           the dropped files.\r\n                        </p>\r\n                        <CustomTabs\r\n                           TabContent1={<BasicDropzone />}\r\n                           TabContent2={\r\n                              <PrismCode\r\n                                 component=\"pre\"\r\n                                 className=\"language-javascript\"\r\n                              >\r\n                                 {BasicDropzoneSource}\r\n                              </PrismCode>\r\n                           }\r\n                        />\r\n                     </CardBody>\r\n                  </Card>\r\n               </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n               <Col sm=\"12\">\r\n                  <Card>\r\n                     <CardBody>\r\n                        <CardTitle>Specific file types</CardTitle>\r\n                        <p>\r\n                           By providing accept prop you can make Dropzone to\r\n                           accept specific file types and reject the others. The\r\n                           value must be a comma-separated list of unique\r\n                           content type specifiers.\r\n                        </p>\r\n                        <CustomTabs\r\n                           TabContent1={<FileTypeDropzone />}\r\n                           TabContent2={\r\n                              <PrismCode\r\n                                 component=\"pre\"\r\n                                 className=\"language-javascript\"\r\n                              >\r\n                                 {FileTypeDropzoneSource}\r\n                              </PrismCode>\r\n                           }\r\n                        />\r\n                     </CardBody>\r\n                  </Card>\r\n               </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n               <Col sm=\"12\">\r\n                  <Card>\r\n                     <CardBody>\r\n                        <CardTitle>\r\n                           Opening File Dialog Programmatically\r\n                        </CardTitle>\r\n                        <p>\r\n                           You can programmatically invoke default OS file\r\n                           prompt. In order to do that you'll have to set the\r\n                           ref on your Dropzone instance and call the instance\r\n                           open method.\r\n                        </p>\r\n                        <CustomTabs\r\n                           TabContent1={<ProgramaticDialogDropzone />}\r\n                           TabContent2={\r\n                              <PrismCode\r\n                                 component=\"pre\"\r\n                                 className=\"language-javascript\"\r\n                              >\r\n                                 {ProgramaticDialogDropzoneSource}\r\n                              </PrismCode>\r\n                           }\r\n                        />\r\n                     </CardBody>\r\n                  </Card>\r\n               </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n               <Col sm=\"12\">\r\n                  <Card>\r\n                     <CardBody>\r\n                        <CardTitle>Dropzone with disabled property</CardTitle>\r\n                        <p>\r\n                           You can programmatically invoke default OS file\r\n                           prompt. In order to do that you'll have to set the\r\n                           ref on your Dropzone instance and call the instance\r\n                           open method.\r\n                        </p>\r\n                        <CustomTabs\r\n                           TabContent1={<DisabledDropzone />}\r\n                           TabContent2={\r\n                              <PrismCode\r\n                                 component=\"pre\"\r\n                                 className=\"language-javascript\"\r\n                              >\r\n                                 {DisabledDropzoneSource}\r\n                              </PrismCode>\r\n                           }\r\n                        />\r\n                     </CardBody>\r\n                  </Card>\r\n               </Col>\r\n            </Row>\r\n         </Fragment>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Upload;\r\n","const BasicDropzoneSource = `import React, { Component } from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\n\r\nclass BasicDropzone extends Component {\r\n   state = {\r\n      files: []\r\n   };\r\n\r\n   onDrop = files => {\r\n      this.setState({\r\n         files\r\n      });\r\n   };\r\n\r\n   render() {\r\n      return (\r\n         <div>\r\n            <div className=\"dropzone\">\r\n               <Dropzone onDrop={this.onDrop.bind(this)}>\r\n                  <p>\r\n                     Try dropping some files here, or click to select files to\r\n                     upload.\r\n                  </p>\r\n               </Dropzone>\r\n            </div>\r\n            <aside>\r\n               <h2>Dropped files</h2>\r\n               <ul>\r\n                  {this.state.files.map(f => (\r\n                     <li key={f.name}>\r\n                        {f.name} - {f.size} bytes\r\n                     </li>\r\n                  ))}\r\n               </ul>\r\n            </aside>\r\n         </div>\r\n      );\r\n   }\r\n}\r\nexport default BasicDropzone;\r\n`;\r\n\r\nexport default BasicDropzoneSource;\r\n","const FileTypeDropzoneSource = `import React, { Component } from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\n\r\nclass FileTypeDropzone extends Component {\r\n   state = {\r\n      files: [],\r\n      accepted: [],\r\n      rejected: [],\r\n   };\r\n\r\n   onDrop = files => {\r\n      this.setState({\r\n         files\r\n      });\r\n   };\r\n\r\n   render() {\r\n      return (\r\n         <div>\r\n            <div className=\"dropzone\">\r\n               <Dropzone\r\n                  accept=\"image/jpeg, image/png\"\r\n                  onDrop={(accepted, rejected) => {\r\n                     this.setState({ accepted, rejected });\r\n                  }}\r\n               >\r\n                  <p>\r\n                     Try dropping some files here, or click to select files to\r\n                     upload.\r\n                  </p>\r\n                  <p>Only *.jpeg and *.png images will be accepted</p>\r\n               </Dropzone>\r\n            </div>\r\n            <aside>\r\n               <h2>Accepted files</h2>\r\n               <ul>\r\n                  {this.state.accepted.map(f => (\r\n                     <li key={f.name}>\r\n                        {f.name} - {f.size} bytes\r\n                     </li>\r\n                  ))}\r\n               </ul>\r\n               <h2>Rejected files</h2>\r\n               <ul>\r\n                  {this.state.rejected.map(f => (\r\n                     <li key={f.name}>\r\n                        {f.name} - {f.size} bytes\r\n                     </li>\r\n                  ))}\r\n               </ul>\r\n            </aside>\r\n         </div>\r\n      );\r\n   }\r\n}\r\nexport default FileTypeDropzone;\r\n`;\r\n\r\nexport default FileTypeDropzoneSource;\r\n","const ProgramaticDialogDropzoneSource = `import React, { Component } from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\n\r\nlet dropzoneRef;\r\n\r\nclass ProgramaticDialogDropzone extends Component {\r\n   state = {\r\n      files: [],\r\n      accepted: [],\r\n      rejected: [],\r\n   };\r\n\r\n   render() {\r\n      return (\r\n         <div>\r\n            <Dropzone\r\n               ref={node => {\r\n                  dropzoneRef = node;\r\n               }}\r\n               onDrop={(accepted, rejected) => {\r\n                  alert(accepted);\r\n               }}\r\n            >\r\n               <p>Drop files here.</p>\r\n            </Dropzone>\r\n            <button\r\n               type=\"button\"\r\n               onClick={() => {\r\n                  dropzoneRef.open();\r\n               }}\r\n            >\r\n               Open File Dialog\r\n            </button>\r\n         </div>\r\n      );\r\n   }\r\n}\r\nexport default ProgramaticDialogDropzone;\r\n`;\r\n\r\nexport default ProgramaticDialogDropzoneSource;\r\n","const DisabledDropzoneSource = `import React, { Component } from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\n\r\nclass DisabledDropzone extends Component {\r\n   state = {\r\n      files: [],\r\n      disabled: true\r\n   };\r\n\r\n   onDrop = files => {\r\n      this.setState({\r\n         files\r\n      });\r\n   };\r\n\r\n   render() {\r\n      return (\r\n         <div>\r\n            <aside>\r\n               <button\r\n                  type=\"button\"\r\n                  onClick={() =>\r\n                     this.setState({\r\n                        disabled: !this.state.disabled\r\n                     })\r\n                  }\r\n               >\r\n                  Toggle disabled\r\n               </button>\r\n            </aside>\r\n            <div className=\"dropzone\">\r\n               <Dropzone\r\n                  onDrop={this.onDrop.bind(this)}\r\n                  disabled={this.state.disabled}\r\n               >\r\n                  <p>\r\n                     Try dropping some files here, or click to select files to\r\n                     upload.\r\n                  </p>\r\n               </Dropzone>\r\n            </div>\r\n            <aside>\r\n               <h2>Dropped files</h2>\r\n               <ul>\r\n                  {this.state.files.map(f => (\r\n                     <li>\r\n                        {f.name} - {f.size} bytes\r\n                     </li>\r\n                  ))}\r\n               </ul>\r\n            </aside>\r\n         </div>\r\n      );\r\n   }\r\n}\r\nexport default DisabledDropzone;\r\n`;\r\n\r\nexport default DisabledDropzoneSource;\r\n","import React from \"react\";\r\n\r\nconst ContentHeader = props => {\r\n  const {className} = props;\r\n   return (\r\n      <div\r\n         className={`content-header${\r\n            className === undefined ? \"\" : ` ${className}`\r\n         }`}\r\n      >\r\n         {props.children}\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default ContentHeader;\r\n","import React from \"react\";\r\n\r\nconst ContentSubHeader = props => {\r\n   const { className } = props;\r\n   return (\r\n      <div\r\n         className={`content-sub-header${\r\n            className === undefined ? \"\" : ` ${className}`\r\n         }`}\r\n      >\r\n         {props.children}\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default ContentSubHeader;\r\n","import React from \"react\";\r\nimport { Eye, Code } from 'react-feather';\r\nimport {\r\n   TabContent,\r\n   TabPane,\r\n   Nav,\r\n   NavItem,\r\n   NavLink,   \r\n   Row,\r\n   Col\r\n} from \"reactstrap\";\r\nimport classnames from \"classnames\";\r\n\r\nexport default class Example extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n\r\n      this.toggle = this.toggle.bind(this);\r\n      this.state = {\r\n         activeTab: \"1\"\r\n      };\r\n   }\r\n\r\n   toggle(tab) {\r\n      if (this.state.activeTab !== tab) {\r\n         this.setState({\r\n            activeTab: tab\r\n         });\r\n      }\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div className=\"nav-tabs-vc\">\r\n            <Nav tabs>\r\n               <NavItem>\r\n                  <NavLink\r\n                     className={classnames({\r\n                        active: this.state.activeTab === \"1\"\r\n                     })}\r\n                     onClick={() => {\r\n                        this.toggle(\"1\");\r\n                     }}\r\n                  >\r\n                     <Eye size={18} />\r\n                  </NavLink>\r\n               </NavItem>\r\n               <NavItem>\r\n                  <NavLink\r\n                     className={classnames({\r\n                        active: this.state.activeTab === \"2\"\r\n                     })}\r\n                     onClick={() => {\r\n                        this.toggle(\"2\");\r\n                     }}\r\n                  >\r\n                     <Code size={18} />\r\n                  </NavLink>\r\n               </NavItem>\r\n            </Nav>\r\n            \r\n            <TabContent activeTab={this.state.activeTab} className=\"px-0\">\r\n               <TabPane tabId=\"1\">\r\n                  <Row>\r\n                     <Col sm=\"12\">\r\n                        {this.props.TabContent1}\r\n                     </Col>\r\n                  </Row>\r\n               </TabPane>\r\n               <TabPane tabId=\"2\">\r\n                  <Row>\r\n                     <Col sm=\"12\">\r\n                        {this.props.TabContent2}\r\n                     </Col>\r\n                  </Row>\r\n               </TabPane>\r\n            </TabContent>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n"],"sourceRoot":""}