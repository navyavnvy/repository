{"version":3,"sources":["views/dashboard/analyticsDashboard.js","views/cards/staticCardData.js","components/cards/minimalStatisticsWithChart2Card.js","components/cards/fitnessStatisticsWithChartCard.js"],"names":["AnalyticsDashboard","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react__WEBPACK_IMPORTED_MODULE_5__","reactstrap__WEBPACK_IMPORTED_MODULE_6__","className","sm","md","xl","_components_cards_minimalStatisticsWithChart2Card__WEBPACK_IMPORTED_MODULE_10__","chartData","StaticCardData","ChartistData2","cardBgColor","statistics","text","iconSide","react_feather__WEBPACK_IMPORTED_MODULE_7__","size","strokeWidth","color","lg","_components_cards_salesAnalysisChartCard__WEBPACK_IMPORTED_MODULE_12__","salesAnalysisData","AdvancedCardData","SalesAnalysisData","cardTitle","salesText","visitText","clickText","_components_cards_discoverPeopleListCard__WEBPACK_IMPORTED_MODULE_11__","discoverPeopleList","DiscoverPeopleList","_components_cards_fitnessStatisticsWithChartCard__WEBPACK_IMPORTED_MODULE_13__","donutChartData","DonutChartData1","dountChartClass","textTop","statisticsTop","textBottom","statisticsBottom","textColor","DonutChartData2","statisticsTopUnit","DonutChartData3","_components_cards_salesPerVisitChartCard__WEBPACK_IMPORTED_MODULE_14__","salesPerVisitData","SalesPerVisitData","_components_cards_dailyDietListCard__WEBPACK_IMPORTED_MODULE_15__","dailyDietList","DailyDietList","cardSubTitle","_components_cards_userStatisticsChartCard__WEBPACK_IMPORTED_MODULE_16__","userStatisticData","UserStatisticData","fullName","designation","_components_cards_carouselSliderCard__WEBPACK_IMPORTED_MODULE_17__","description","_components_cards_earningStatisticsChartCard__WEBPACK_IMPORTED_MODULE_18__","earningStatisticData","EarningStatisticData","earningAmount","earningText","Component","__webpack_require__","d","__webpack_exports__","ChartistData","labels","series","name","value","MinimalStatisticsChart2","iconLeft","iconRight","textDirection","this","props","children","classnames","body","statisticsColor","react_chartist__WEBPACK_IMPORTED_MODULE_8___default","data","type","options","height","axisX","showGrid","showLabel","offset","axisY","low","fullWidth","PureComponent","FitnessStatisticsCardWithChart","reactstrap__WEBPACK_IMPORTED_MODULE_7__","donut","donutWidth","startAngle","chartPadding","total","labelInterpolationFnc","listener","draw","element","remove"],"mappings":"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","file":"static/js/12.c1274722.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport { Row, Col } from \"reactstrap\";\r\n\r\nimport * as Icon from \"react-feather\";\r\n\r\nimport { StaticCardData } from \"../cards/staticCardData\";\r\nimport { AdvancedCardData } from \"../cards/advancedCardData\";\r\n\r\nimport MinimalStatisticsChart2 from \"../../components/cards/minimalStatisticsWithChart2Card\";\r\n\r\nimport DiscoverPeopleListCard from \"../../components/cards/discoverPeopleListCard\";\r\nimport SalesAnalysisChartCarda from \"../../components/cards/salesAnalysisChartCard\";\r\n\r\nimport FitnessStatisticsChart from \"../../components/cards/fitnessStatisticsWithChartCard\";\r\n\r\nimport SalesPerVisitChartCard from \"../../components/cards/salesPerVisitChartCard\";\r\nimport DailyDietListCard from \"../../components/cards/dailyDietListCard\";\r\n\r\nimport UserStatisticsChartCard from \"../../components/cards/userStatisticsChartCard\";\r\nimport CarouselSliderCard from \"../../components/cards/carouselSliderCard\";\r\nimport EarningStatisticsChartCard from \"../../components/cards/earningStatisticsChartCard\";\r\n\r\nclass AnalyticsDashboard extends Component {\r\n   render() {\r\n      return (\r\n         <Fragment>\r\n            {/* Statistics */}\r\n            <Row className=\"row-eq-height\">\r\n               <Col sm=\"12\" md=\"6\" xl=\"3\">\r\n                  <MinimalStatisticsChart2\r\n                     chartData={StaticCardData.ChartistData2}\r\n                     cardBgColor=\"bg-danger\"\r\n                     statistics=\"$2156\"\r\n                     text=\"Total Tax\"\r\n                     iconSide=\"right\"\r\n                  >\r\n                     <Icon.PieChart size={36} strokeWidth=\"1.3\" color=\"#fff\" />\r\n                  </MinimalStatisticsChart2>\r\n               </Col>\r\n               <Col sm=\"12\" md=\"6\" xl=\"3\">\r\n                  <MinimalStatisticsChart2\r\n                     chartData={StaticCardData.ChartistData2}\r\n                     cardBgColor=\"bg-success\"\r\n                     statistics=\"$1567\"\r\n                     text=\"Total Earning\"\r\n                     iconSide=\"right\"\r\n                  >\r\n                     <Icon.Box size={36} strokeWidth=\"1.3\" color=\"#fff\" />\r\n                  </MinimalStatisticsChart2>\r\n               </Col>\r\n               <Col sm=\"12\" md=\"6\" xl=\"3\">\r\n                  <MinimalStatisticsChart2\r\n                     chartData={StaticCardData.ChartistData2}\r\n                     cardBgColor=\"bg-warning\"\r\n                     statistics=\"$4566\"\r\n                     text=\"Total Sales\"\r\n                     iconSide=\"right\"\r\n                  >\r\n                     <Icon.Filter size={36} strokeWidth=\"1.3\" color=\"#fff\" />\r\n                  </MinimalStatisticsChart2>\r\n               </Col>\r\n               <Col sm=\"12\" md=\"6\" xl=\"3\">\r\n                  <MinimalStatisticsChart2\r\n                     chartData={StaticCardData.ChartistData2}\r\n                     cardBgColor=\"bg-info\"\r\n                     statistics=\"$4566\"\r\n                     text=\"Total Sales\"\r\n                     iconSide=\"right\"\r\n                  >\r\n                     <Icon.DollarSign size={36} strokeWidth=\"1.3\" color=\"#fff\" />\r\n                  </MinimalStatisticsChart2>\r\n               </Col>\r\n            </Row>\r\n            {/* Discover people & sales analysis */}\r\n            <Row className=\"row-eq-height\">\r\n               <Col sm=\"12\" lg=\"6\" xl=\"8\">\r\n                  <SalesAnalysisChartCarda\r\n                     salesAnalysisData={AdvancedCardData.SalesAnalysisData}\r\n                     cardTitle=\"Sales Analysis\"\r\n                     salesText=\"Sales\"\r\n                     visitText=\"Visits\"\r\n                     clickText=\"Clicks\"\r\n                  />\r\n               </Col>\r\n               <Col sm=\"12\" lg=\"6\" xl=\"4\">\r\n                  <DiscoverPeopleListCard\r\n                     discoverPeopleList={AdvancedCardData.DiscoverPeopleList}\r\n                     cardTitle=\"Peoples\"\r\n                  />\r\n               </Col>\r\n            </Row>\r\n            {/* Fitness charts */}\r\n            <Row className=\"row-eq-height\">\r\n               <Col sm=\"12\" md=\"4\">\r\n                  <FitnessStatisticsChart\r\n                     donutChartData={StaticCardData.DonutChartData1}\r\n                     dountChartClass=\"donut1\"\r\n                     textTop=\"Steps\"\r\n                     statisticsTop=\"3261\"\r\n                     textBottom=\"Steps Today's Target\"\r\n                     statisticsBottom=\"5000\"\r\n                     textColor=\"primary\"\r\n                  />\r\n                  <Icon.TrendingUp size={60} strokeWidth=\"1\" className=\"primary icon-dount-center\" />\r\n               </Col>\r\n               <Col sm=\"12\" md=\"4\">\r\n                  <FitnessStatisticsChart\r\n                     donutChartData={StaticCardData.DonutChartData2}\r\n                     dountChartClass=\"donut2\"\r\n                     textTop=\"Distance\"\r\n                     statisticsTop=\"7.6\"\r\n                     statisticsTopUnit=\"miles\"\r\n                     textBottom=\"Miles Today's Target\"\r\n                     statisticsBottom=\"10\"\r\n                     textColor=\"warning\"\r\n                  />\r\n                  <Icon.Zap size={60} strokeWidth=\"1\" className=\"warning icon-dount-center\" />\r\n               </Col>\r\n               <Col sm=\"12\" md=\"4\">\r\n                  <FitnessStatisticsChart\r\n                     donutChartData={StaticCardData.DonutChartData3}\r\n                     dountChartClass=\"donut3\"\r\n                     textTop=\"Calories\"\r\n                     statisticsTop=\"4,025\"\r\n                     statisticsTopUnit=\"kcal\"\r\n                     textBottom=\"kcla Today's Target\"\r\n                     statisticsBottom=\"5000\"\r\n                     textColor=\"danger\"\r\n                  />\r\n                  <Icon.Heart size={60} strokeWidth=\"1\" className=\"danger icon-dount-center\" />\r\n               </Col>\r\n            </Row>\r\n\r\n            {/* Sales per Visit & Daily Diet Chart */}\r\n            <Row className=\"row-eq-height\">\r\n               <Col sm=\"12\" md=\"8\">\r\n                  <SalesPerVisitChartCard\r\n                     salesPerVisitData={AdvancedCardData.SalesPerVisitData}\r\n                     cardTitle=\"Sales Per Visit\"\r\n                     salesText=\"Sales\"\r\n                     visitText=\"Visits\"\r\n                  />\r\n               </Col>\r\n               <Col sm=\"12\" md=\"4\">\r\n                  <DailyDietListCard\r\n                     dailyDietList={AdvancedCardData.DailyDietList}\r\n                     cardTitle=\"Daily Diet\"\r\n                     cardSubTitle=\"Some quick example text to build on the card.\"\r\n                  />\r\n               </Col>\r\n            </Row>\r\n            {/* Misc Cards */}\r\n            <Row className=\"row-eq-height\">\r\n               <Col sm=\"12\" md=\"4\">\r\n                  <UserStatisticsChartCard\r\n                     userStatisticData={AdvancedCardData.UserStatisticData}\r\n                     fullName=\"Kevin Sullivan\"\r\n                     designation=\"UX Designer\"\r\n                  />\r\n               </Col>\r\n               <Col sm=\"12\" md=\"4\">\r\n                  <CarouselSliderCard\r\n                     cardTitle=\"Card Titile\"\r\n                     description=\"Sweet halvah dragée jelly-o halvah carrot cake oat cake. Donut jujubes jelly chocolate cake.\"\r\n                  />\r\n               </Col>\r\n               <Col sm=\"12\" md=\"4\">\r\n                  <EarningStatisticsChartCard\r\n                     earningStatisticData={AdvancedCardData.EarningStatisticData}\r\n                     cardTitle=\"Earning\"\r\n                     cardSubTitle=\"Mon 18 - Sun 21\"\r\n                     earningAmount=\"$4295.36\"\r\n                     earningText=\"Total Earnings\"\r\n                  />\r\n               </Col>\r\n            </Row>\r\n         </Fragment>\r\n      );\r\n   }\r\n}\r\n\r\nexport default AnalyticsDashboard;\r\n","const StaticCardData = {\r\n   ChartistData: {\r\n      labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\"],\r\n      series: [[50, 45, 60, 55, 70, 55, 60, 55, 65, 57, 60, 53, 53]]\r\n   },\r\n   ChartistData2: {\r\n      labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"June\", \"July\", \"Aug\"],\r\n      series: [[55, 60, 50, 55, 50, 60, 55, 57]]\r\n   },\r\n   DonutChartData1: {\r\n      series: [\r\n         {\r\n            name: \"done\",\r\n            className: \"ct-done\",\r\n            value: 10\r\n         },\r\n         {\r\n            name: \"outstanding\",\r\n            className: \"ct-outstanding\",\r\n            value: 3\r\n         }\r\n      ]\r\n   },\r\n   DonutChartData2: {\r\n      series: [\r\n         {\r\n            name: \"done\",\r\n            className: \"ct-done\",\r\n            value: 10\r\n         },\r\n         {\r\n            name: \"outstanding\",\r\n            className: \"ct-outstanding\",\r\n            value: 3\r\n         }\r\n      ]\r\n   },\r\n   DonutChartData3: {\r\n      series: [\r\n         {\r\n            name: \"done\",\r\n            className: \"ct-done\",\r\n            value: 10\r\n         },\r\n         {\r\n            name: \"outstanding\",\r\n            className: \"ct-outstanding\",\r\n            value: 3\r\n         }\r\n      ]\r\n   },\r\n  \r\n};\r\n\r\nexport { StaticCardData };\r\n","import React, { PureComponent } from \"react\";\r\nimport { Card, CardBody, Media } from \"reactstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\n//Chsrtis JS \r\nimport ChartistGraph from \"react-chartist\";\r\n//Chsrtis CSS\r\nimport \"chartist/dist/chartist.min.css\";\r\n//Component specific chart CSS\r\nimport \"../../assets/scss/components/cards/minimalStatisticsCardWithChart.scss\";\r\n\r\nclass MinimalStatisticsChart2 extends PureComponent {\r\n   render() {\r\n      let iconLeft;\r\n      let iconRight;\r\n      let textDirection;\r\n\r\n      if (this.props.iconSide === \"right\") {\r\n         iconRight = this.props.children;\r\n      } else {\r\n         iconLeft = this.props.children;\r\n         textDirection = \"text-right\";\r\n      }\r\n      return (\r\n         <Card className={classnames(this.props.cardBgColor)}>\r\n            <CardBody className=\"pt-2 pb-0\">\r\n               <Media>\r\n                  {iconLeft}\r\n                  <Media body className={classnames(\"white\", textDirection)}>\r\n                     <h3 className={classnames(\"font-large-1 mb-1\", this.props.statisticsColor)}>{this.props.statistics}</h3>\r\n                     <span>{this.props.text}</span>\r\n                  </Media>\r\n                  {iconRight}\r\n               </Media>\r\n            </CardBody>\r\n            <ChartistGraph\r\n               className=\"WidgetlineChart WidgetlineChartshadow mb-3\"\r\n               data={this.props.chartData}\r\n               type=\"Line\"\r\n               options={{\r\n                  height: \"55px\",\r\n                  axisX: {\r\n                     showGrid: false,\r\n                     showLabel: false,\r\n                     offset: 0\r\n                  },\r\n                  axisY: {\r\n                     showGrid: false,\r\n                     low: 50,\r\n                     showLabel: false,\r\n                     offset: 0\r\n                  },\r\n                  fullWidth: true\r\n               }}\r\n            />\r\n         </Card>\r\n      );\r\n   }\r\n}\r\n\r\nMinimalStatisticsChart2.propTypes = {\r\n   iconSide: PropTypes.string,   \r\n   statisticsColor: PropTypes.string,\r\n   statistics: PropTypes.string,\r\n   cardBgColor: PropTypes.string,\r\n   text: PropTypes.string,\r\n   chartData: PropTypes.object\r\n};\r\n\r\nexport default MinimalStatisticsChart2;\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n// reactstrap core  components\r\nimport { Card, CardBody } from \"reactstrap\";\r\n//Chsrtis JS\r\nimport ChartistGraph from \"react-chartist\";\r\n//Chsrtis CSS\r\nimport \"chartist/dist/chartist.min.css\";\r\n//Component specific chart CSS\r\nimport \"../../assets/scss/components/cards/fitnessStatisticsCardWithChart.scss\";\r\n\r\nclass FitnessStatisticsCardWithChart extends PureComponent {\r\n   render() {\r\n      return (\r\n         <Card>\r\n            <CardBody className=\"px-3 py-3\">\r\n               <div className=\"text-center pb-0\">\r\n                  <span\r\n                     className={classnames(\r\n                        \"font-medium-2\",\r\n                        this.props.textColor\r\n                     )}\r\n                  >\r\n                     {this.props.textTop}\r\n                  </span>\r\n                  <h3 className=\"font-large-2 mt-1\">\r\n                     {this.props.statisticsTop}\r\n                     <span className=\"font-medium-1 grey darken-1 text-bold-400\">\r\n                        {this.props.statisticsTopUnit}\r\n                     </span>\r\n                  </h3>\r\n               </div>\r\n               <ChartistGraph\r\n                  className={classnames(\r\n                     \"height-250\",\r\n                     this.props.dountChartClass\r\n                  )}\r\n                  data={this.props.donutChartData}\r\n                  type=\"Pie\"\r\n                  options={{\r\n                     donut: true,\r\n                     donutWidth: 3,\r\n                     startAngle: 0,\r\n                     chartPadding: 25,\r\n                     total: 13,\r\n                     labelInterpolationFnc: value => {\r\n                        return \"\\ue9c9\";\r\n                     }\r\n                  }}\r\n                  listener={{\r\n                     draw: data => {\r\n                        if (data.type === \"label\") {\r\n                           data.element.remove();\r\n                        }\r\n                     }\r\n                  }}\r\n               />\r\n               <div className=\"text-center\">\r\n                  <span className=\"font-large-1 d-block mb-1\">\r\n                     {this.props.statisticsBottom}\r\n                  </span>\r\n                  <span\r\n                     className={classnames(\r\n                        \"primary font-medium-1\",\r\n                        this.props.textColor\r\n                     )}\r\n                  >\r\n                     {this.props.textBottom}\r\n                  </span>\r\n               </div>\r\n            </CardBody>\r\n         </Card>\r\n      );\r\n   }\r\n}\r\n\r\nFitnessStatisticsCardWithChart.propTypes = {\r\n   donutChartData: PropTypes.object,\r\n   textTop: PropTypes.string,\r\n   statisticsTopUnit: PropTypes.string,\r\n   statisticsTop: PropTypes.string,\r\n   textBottom: PropTypes.string,\r\n   statisticsBottom: PropTypes.string,\r\n   textColor: PropTypes.string\r\n};\r\n\r\nexport default FitnessStatisticsCardWithChart;\r\n"],"sourceRoot":""}